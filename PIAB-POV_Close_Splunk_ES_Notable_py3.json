{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Proof of Value",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "\n",
            "description": "This playbook prompts the user for closing comments that should be populated back into the Splunk ES Notable, then adds a general Phantom note capturing the analyst's closing comments before setting the Splunk ES notable status to closed.",
            "hash": "df8499f62128463721fbbaff02f63e229689e8af",
            "joint": {
                "cells": [
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'cf_local_POV_set_event_owner_to_current_1' block\n    cf_local_POV_set_event_owner_to_current_1(container=container)\n\n    return\n",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9109356f-9d1c-4e83-8ca1-9e0e0c685d2f",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 16,
                        "line_start": 8,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -140,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 3
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d7d0d090-7009-4da0-97e3-b9ab7e566187",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9109356f-9d1c-4e83-8ca1-9e0e0c685d2f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "070386bc-763b-4370-8440-b2f35df227ce",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 10
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "52808f08-9d58-40e4-936e-39684cbd5fb2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "070386bc-763b-4370-8440-b2f35df227ce",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "16d709ee-1d10-4991-baf5-c281e852f279",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 12
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "34f75750-7d3a-4dd2-97c5-b35d497b5456",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "16d709ee-1d10-4991-baf5-c281e852f279",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b8770f14-f47b-4d22-9a63-1bab2cf5fa11",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 14
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ac2d20e0-f62c-4ebd-9f87-01774fa595a0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b8770f14-f47b-4d22-9a63-1bab2cf5fa11",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "49de5e7d-5759-4a2f-a75f-d4dff4234737",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 16
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "add comment"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_comment_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_comment_1() called')\n\n    phantom.comment(container=container, comment=\"Unable to get the current task id\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "Unable to get the current task id",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "POV_get_current_task",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "49de5e7d-5759-4a2f-a75f-d4dff4234737",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 175,
                        "line_start": 168,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "",
                        "number": 1,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1100,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "add_comment_1",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 17
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4d8b2b60-f27f-4bf9-8ea4-3c3b2e26d3b6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b8770f14-f47b-4d22-9a63-1bab2cf5fa11",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "793bf3fe-bdca-465a-9898-4d36331b0dcf",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 18
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3d1c24f3-6622-4d01-a9bf-c11d1e788108",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "793bf3fe-bdca-465a-9898-4d36331b0dcf",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "97a30723-6b98-4e63-96d3-de0480370578",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 20
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fba0f299-fac0-4e7f-9db9-a552e3d8ebbb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "97a30723-6b98-4e63-96d3-de0480370578",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3fa29803-f770-4c8a-889f-3cada8f656ed",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 25
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0ab08178-b1f1-4597-a2d7-32df17a8149e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3fa29803-f770-4c8a-889f-3cada8f656ed",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2d6a70df-cf83-4fc6-aec6-a54e6f13180a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 28
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return\n",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "CompleteTask, POV_get_current_task",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "01b03480-09be-4d38-b82b-e269029122e1",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 395,
                        "line_start": 382,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 17,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1360,
                            "y": 420
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 37
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "55fd41d0-09e8-42a1-8d97-24c8c2e9ca1a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "af124eb1-0873-49ee-8093-5e69e0d8d7a6",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "650e8355-3592-4f8f-b1c8-6fc276343c8f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 39
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e1e67742-d0d8-441a-8c77-5759c38d8809",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "650e8355-3592-4f8f-b1c8-6fc276343c8f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2c602f99-c628-4a41-9a96-57c44ef44bfb",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 41
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4f5f6047-7f9a-4081-a11d-3c3f785c78a5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2c602f99-c628-4a41-9a96-57c44ef44bfb",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3ebb1063-986a-44bf-b524-1c9cad33535c",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 43
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d2be8545-6e55-42d3-ac10-cec2cf030925",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3ebb1063-986a-44bf-b524-1c9cad33535c",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "01b03480-09be-4d38-b82b-e269029122e1",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 46
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "66b4c90f-fcca-4e0a-9ecd-a890873cddb9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "49de5e7d-5759-4a2f-a75f-d4dff4234737",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "01b03480-09be-4d38-b82b-e269029122e1",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 47
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "CreateEventURL"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def CreateEventURL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('CreateEventURL() called')\n    \n    id_value = container.get('id', None)\n\n    CreateEventURL__eventLink = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here..\n    \n    baseUrl = phantom.get_base_url()\n    CreateEventURL__eventLink = baseUrl + \"/mission/\" + str(int(id_value))\n    ######################################################################\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='CreateEventURL:eventLink', value=json.dumps(CreateEventURL__eventLink))\n    FormatClosingComments(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "ES_Notable_Close_Message",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 10,
                        "custom_callback": "",
                        "custom_code": "def CreateEventURL(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('CreateEventURL() called')\n    id_value = container.get('id', None)\n\n    CreateEventURL__eventLink = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here..\n    \n    baseUrl = phantom.get_base_url()\n    CreateEventURL__eventLink = baseUrl + \"/mission/\" + str(int(id_value))\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='CreateEventURL:eventLink', value=json.dumps(CreateEventURL__eventLink))\n    format_2(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "CreateEventURL",
                        "description": "Creates the address to the phantom event",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3fa29803-f770-4c8a-889f-3cada8f656ed",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 238,
                        "line_start": 213,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Creates the address to the phantom event",
                        "number": 1,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "eventLink"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "container:id"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 220,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "CreateEventURL",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here..\n    \n    baseUrl = phantom.get_base_url()\n    CreateEventURL__eventLink = baseUrl + \"/mission/\" + str(int(id_value))\n    ######################################################################\n",
                        "warn": false,
                        "z": 59
                    },
                    {
                        ".scmName/text": "local",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "POV_set_event_owner_to..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_local_POV_set_event_owner_to_current_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_POV_set_event_owner_to_current_1() called')\n    \n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n\n    parameters = []\n\n    container_property_0_0 = [item[0] for item in container_property_0]\n\n    parameters.append({\n        'container': container_property_0_0,\n    })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/POV_set_event_owner_to_current\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/POV_set_event_owner_to_current', parameters=parameters, name='cf_local_POV_set_event_owner_to_current_1', callback=cf_local_POV_get_current_task_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "local/POV_set_event_owner_to_current",
                        "cfInputs": {
                            "container": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "container_property_0_0",
                                "type": "list"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "container-0": "container:id",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 19,
                        "customFunction": "local/POV_set_event_owner_to_current",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "070386bc-763b-4370-8440-b2f35df227ce",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 113,
                        "line_start": 82,
                        "message": "Configuring now",
                        "name": "POV_set_event_owner_to_current",
                        "notes": "",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -20,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_POV_set_event_owner_to_current_1",
                        "selectedCustomFunction": {
                            "description": "Grabs the user running the playbook and sets the owner of the event to the current user. Passes current_owner out for downstream use.\n\nDerek King  - Splunk",
                            "draftMode": false,
                            "id": 291,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "phantom container id"
                                    ],
                                    "custom_function": 291,
                                    "description": "Container id",
                                    "id": 667,
                                    "input_type": "list",
                                    "name": "container",
                                    "placeholder": "id"
                                }
                            ],
                            "name": "POV_set_event_owner_to_current",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "currentOwner",
                                    "description": "Current owner running the playbook",
                                    "id": 1089
                                },
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "userUrl",
                                    "description": "",
                                    "id": 1090
                                },
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "status",
                                    "description": "",
                                    "id": 1091
                                },
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "message",
                                    "description": "",
                                    "id": 1092
                                },
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "username",
                                    "description": "",
                                    "id": 1093
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_AWS_Context",
                                        "draft_mode": false,
                                        "id": 974,
                                        "name": "POV_EC2_AWS_Context",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/Sinkhole or Block external indicators of compromise",
                                        "draft_mode": false,
                                        "id": 820,
                                        "name": "Sinkhole or Block external indicators of compromise",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Sinkhole_or_Block_External_Indicators",
                                        "draft_mode": false,
                                        "id": 873,
                                        "name": "POV_Sinkhole_or_Block_External_Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_malicious_insider_containment",
                                        "draft_mode": false,
                                        "id": 876,
                                        "name": "POV_malicious_insider_containment",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Accept_Event",
                                        "draft_mode": false,
                                        "id": 880,
                                        "name": "POV_Accept_Event",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_AddContext_LDAP",
                                        "draft_mode": false,
                                        "id": 832,
                                        "name": "POV_AddContext_LDAP",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Review_Indicators_Manually",
                                        "draft_mode": false,
                                        "id": 833,
                                        "name": "POV_Review_Indicators_Manually",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Hunt_Email_Indicators",
                                        "draft_mode": false,
                                        "id": 834,
                                        "name": "POV_Hunt_Email_Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/AAA2",
                                        "draft_mode": false,
                                        "id": 565,
                                        "name": "AAA2",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/Hunt Indicators",
                                        "draft_mode": false,
                                        "id": 765,
                                        "name": "Hunt Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_Remote_Probe_Context",
                                        "draft_mode": false,
                                        "id": 970,
                                        "name": "POV_EC2_Remote_Probe_Context",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_Instance_Isolation",
                                        "draft_mode": false,
                                        "id": 998,
                                        "name": "POV_EC2_Instance_Isolation",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_Instance_Investigation",
                                        "draft_mode": false,
                                        "id": 994,
                                        "name": "POV_EC2_Instance_Investigation",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...\n",
                        "warn": false,
                        "z": 65
                    },
                    {
                        ".scmName/text": "local",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "POV_get_current_task"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_local_POV_get_current_task_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_POV_get_current_task_1() called')\n    \n    custom_function_result_0 = phantom.collect2(container=container, datapath=['cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner'], action_results=results )\n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n\n    parameters = []\n\n    container_property_0_0 = [item[0] for item in container_property_0]\n    custom_function_result_0_0 = [item[0] for item in custom_function_result_0]\n\n    parameters.append({\n        'container': container_property_0_0,\n        'currentOwner': custom_function_result_0_0,\n    })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/POV_get_current_task\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/POV_get_current_task', parameters=parameters, name='cf_local_POV_get_current_task_1', callback=decision_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 144,
                        "callsback": true,
                        "cfDisplayPath": "local/POV_get_current_task",
                        "cfInputs": {
                            "container": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "container_property_0_0",
                                "type": "list"
                            },
                            "currentOwner": {
                                "collectionType": "custom_function_result",
                                "dataPath": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner",
                                "paramName": "custom_function_result_0_0",
                                "type": "list"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "POV_set_event_owner_to_current",
                        "connection_type": "action",
                        "container-0": "container:id",
                        "currentOwner-1": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 22,
                        "customFunction": "local/POV_get_current_task",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "16d709ee-1d10-4991-baf5-c281e852f279",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 147,
                        "line_start": 113,
                        "message": "Configuring now",
                        "name": "POV_get_current_task",
                        "notes": "",
                        "number": 1,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 200,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_POV_get_current_task_1",
                        "selectedCustomFunction": {
                            "description": "Gets the current task in the phase, and returns the task_id, and current owner of the playbook",
                            "draftMode": false,
                            "id": 362,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "description": "",
                                    "id": 927,
                                    "input_type": "list",
                                    "name": "container",
                                    "placeholder": "container:id"
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "description": "",
                                    "id": 928,
                                    "input_type": "list",
                                    "name": "currentOwner",
                                    "placeholder": ""
                                }
                            ],
                            "name": "POV_get_current_task",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "task_body",
                                    "description": "",
                                    "id": 1197
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "task_id",
                                    "description": "",
                                    "id": 1198
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "next_playbook",
                                    "description": "",
                                    "id": 1199
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "workflow_task_url",
                                    "description": "",
                                    "id": 1200
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "status",
                                    "description": "",
                                    "id": 1201
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "message",
                                    "description": "",
                                    "id": 1202
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "task_name",
                                    "description": "Name of the Task in the workbook",
                                    "id": 1203
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "current_playbook_name",
                                    "description": "This Playbook Executing Now.",
                                    "id": 1204
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_AWS_Context",
                                        "draft_mode": false,
                                        "id": 974,
                                        "name": "POV_EC2_AWS_Context",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_AddContext_LDAP",
                                        "draft_mode": false,
                                        "id": 832,
                                        "name": "POV_AddContext_LDAP",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Review_Indicators_Manually",
                                        "draft_mode": false,
                                        "id": 833,
                                        "name": "POV_Review_Indicators_Manually",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Hunt_Email_Indicators",
                                        "draft_mode": false,
                                        "id": 834,
                                        "name": "POV_Hunt_Email_Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Sinkhole_or_Block_External_Indicators",
                                        "draft_mode": false,
                                        "id": 873,
                                        "name": "POV_Sinkhole_or_Block_External_Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_malicious_insider_containment",
                                        "draft_mode": false,
                                        "id": 876,
                                        "name": "POV_malicious_insider_containment",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Accept_Event",
                                        "draft_mode": false,
                                        "id": 880,
                                        "name": "POV_Accept_Event",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/Sinkhole or Block external indicators of compromise",
                                        "draft_mode": false,
                                        "id": 820,
                                        "name": "Sinkhole or Block external indicators of compromise",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/Hunt Indicators",
                                        "draft_mode": false,
                                        "id": 765,
                                        "name": "Hunt Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_Remote_Probe_Context",
                                        "draft_mode": false,
                                        "id": 970,
                                        "name": "POV_EC2_Remote_Probe_Context",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_Instance_Isolation",
                                        "draft_mode": false,
                                        "id": 998,
                                        "name": "POV_EC2_Instance_Isolation",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_Instance_Investigation",
                                        "draft_mode": false,
                                        "id": 994,
                                        "name": "POV_EC2_Instance_Investigation",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...\n",
                        "warn": false,
                        "z": 66
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_1() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"cf_local_POV_get_current_task_1:custom_function_result.data.status\", \"==\", \"failed\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        add_comment_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    TaskInProgress(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_get_current_task",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b8770f14-f47b-4d22-9a63-1bab2cf5fa11",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 168,
                        "line_start": 147,
                        "name": "decision",
                        "notes": "",
                        "number": 1,
                        "order": 6,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "cf_local_POV_get_current_task_1:custom_function_result.data.status",
                                        "value": "failed"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 460,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "decision_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 67
                    },
                    {
                        "action": "update task",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "container_id": "container:id",
                            "note": "POV_Close_Splunk_ES_Notable In Progress",
                            "note_title": "Task Started",
                            "phase_name": "",
                            "role_id": "",
                            "status": "in progress",
                            "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                            "task_name": "",
                            "user": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update task",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "container_id": "container:id",
                                    "note": "POV_Close_Splunk_ES_Notable In Progress",
                                    "note_title": "Task Started",
                                    "phase_name": "",
                                    "role_id": "",
                                    "status": "in progress",
                                    "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                                    "task_name": "",
                                    "user": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner"
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note_title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.phase_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.role_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "container_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Container ID (current container if blank)",
                                        "key": "container_id",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task note",
                                        "key": "note",
                                        "order": 6,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note_title": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Note title",
                                        "key": "note_title",
                                        "order": 7,
                                        "primary": false,
                                        "required": false
                                    },
                                    "phase_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Phase name",
                                        "key": "phase_name",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "role_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task assignee (role)",
                                        "key": "role_id",
                                        "order": 5,
                                        "primary": false,
                                        "required": false
                                    },
                                    "status": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task status",
                                        "key": "status",
                                        "order": 4,
                                        "primary": false,
                                        "required": false,
                                        "value_list": [
                                            "incomplete",
                                            "in progress",
                                            "complete"
                                        ]
                                    },
                                    "task_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task ID",
                                        "key": "task_id",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "task_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task name",
                                        "key": "task_name",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "user": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task assignee (username or user id)",
                                        "key": "user",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "TaskInProgress"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def TaskInProgress(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('TaskInProgress() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    id_value = container.get('id', None)\n\n    # collect data for 'TaskInProgress' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner'], action_results=results)\n    custom_function_results_data_2 = phantom.collect2(container=container, datapath=['cf_local_POV_get_current_task_1:custom_function_result.data.task_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'TaskInProgress' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        for custom_function_results_item_2 in custom_function_results_data_2:\n            parameters.append({\n                'note': \"POV_Close_Splunk_ES_Notable In Progress\",\n                'user': custom_function_results_item_1[0],\n                'status': \"in progress\",\n                'role_id': \"\",\n                'task_id': custom_function_results_item_2[0],\n                'task_name': \"\",\n                'note_title': \"Task Started\",\n                'phase_name': \"\",\n                'container_id': id_value,\n            })\n\n    phantom.act(action=\"update task\", parameters=parameters, assets=['phantomapp'], callback=ES_Notable_Close_Message, name=\"TaskInProgress\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "POV_get_current_task",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "TaskInProgress",
                        "delay": 0,
                        "description": "Update the task to in progress status",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "793bf3fe-bdca-465a-9898-4d36331b0dcf",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 210,
                        "line_start": 178,
                        "message": "Configuring now",
                        "name": "update task",
                        "notes": "Update the task to in progress status",
                        "number": 1,
                        "order": 8,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -120,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "TaskInProgress",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 69
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "FormatClosingComments"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def FormatClosingComments(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('FormatClosingComments() called')\n    \n    template = \"\"\"This event has been closed by Phantom.\n\nAnalysts Comments:\n{1}\n\nThe Phantom event can be viewed here; \n{0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"CreateEventURL:custom_function:eventLink\",\n        \"ES_Notable_Close_Message:action_result.summary.responses.0\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"FormatClosingComments\")\n\n    filter_1(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "ES_Notable_Close_Message",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "FormatClosingComments",
                        "description": "Creates the closing comments for the splunk notable.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2d6a70df-cf83-4fc6-aec6-a54e6f13180a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 264,
                        "line_start": 241,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Creates the closing comments for the splunk notable.",
                        "number": 2,
                        "order": 10,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "CreateEventURL:custom_function:eventLink"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "ES_Notable_Close_Message:action_result.summary.responses.0"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 440,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "FormatClosingComments",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "This event has been closed by Phantom.\n\nAnalysts Comments:\n{1}\n\nThe Phantom event can be viewed here; \n{0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 73
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "21bc2ebf-e4eb-4d07-a662-8aa003da4a4a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2d6a70df-cf83-4fc6-aec6-a54e6f13180a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "04e301cd-7f45-4675-b5bd-68942a18279c",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 76
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b50a2d81-2cca-40c1-8cfe-5eb94f8ee507",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "04e301cd-7f45-4675-b5bd-68942a18279c",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6f67e448-1daf-40c4-abf9-929f88618838",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 84
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6ebad110-d8b5-42b9-919b-c2a0ef0a1b75",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6f67e448-1daf-40c4-abf9-929f88618838",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "af124eb1-0873-49ee-8093-5e69e0d8d7a6",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 86
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "dbe97648-94f9-4388-8c87-8930040fbc48",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6f67e448-1daf-40c4-abf9-929f88618838",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "aaf6565b-06d0-413e-bea2-4e60616b951e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 88
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "CreateGeneralNote"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def CreateGeneralNote(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('CreateGeneralNote() called')\n    \n    template = \"\"\"#  {0} - Findings #\n\n## Update ES Notable Action ##\n** ES Notable Closing Comment :  **\n{1}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name\",\n        \"FormatClosingComments:formatted_data\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"CreateGeneralNote\")\n\n    AddGeneralNote(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "UpdateESNotable",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "CreateGeneralNote",
                        "description": "Formats the General Note for the event",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "650e8355-3592-4f8f-b1c8-6fc276343c8f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 288,
                        "line_start": 267,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Formats the General Note for the event",
                        "number": 3,
                        "order": 11,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "FormatClosingComments:formatted_data"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 680,
                            "y": 400
                        },
                        "previous_function": "",
                        "previous_name": "CreateGeneralNote",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "#  {0} - Findings #\n\n## Update ES Notable Action ##\n** ES Notable Closing Comment :  **\n{1}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 90
                    },
                    {
                        "action": "update task",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "container_id": "container:id",
                            "note": "Finished - If you need to rerun this playbook - Revert the task status to 'not started' and re run",
                            "note_title": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                            "phase_name": "",
                            "role_id": "",
                            "status": "complete",
                            "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                            "task_name": "",
                            "user": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update task",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "container_id": "container:id",
                                    "note": "Finished - If you need to rerun this playbook - Revert the task status to 'not started' and re run",
                                    "note_title": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                                    "phase_name": "",
                                    "role_id": "",
                                    "status": "complete",
                                    "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                                    "task_name": "",
                                    "user": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner"
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note_title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.phase_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.role_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "container_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Container ID (current container if blank)",
                                        "key": "container_id",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task note",
                                        "key": "note",
                                        "order": 6,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note_title": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Note title",
                                        "key": "note_title",
                                        "order": 7,
                                        "primary": false,
                                        "required": false
                                    },
                                    "phase_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Phase name",
                                        "key": "phase_name",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "role_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task assignee (role)",
                                        "key": "role_id",
                                        "order": 5,
                                        "primary": false,
                                        "required": false
                                    },
                                    "status": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task status",
                                        "key": "status",
                                        "order": 4,
                                        "primary": false,
                                        "required": false,
                                        "value_list": [
                                            "incomplete",
                                            "in progress",
                                            "complete"
                                        ]
                                    },
                                    "task_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task ID",
                                        "key": "task_id",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "task_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task name",
                                        "key": "task_name",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "user": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task assignee (username or user id)",
                                        "key": "user",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "CompleteTask"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def CompleteTask(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('CompleteTask() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    id_value = container.get('id', None)\n\n    # collect data for 'CompleteTask' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner'], action_results=results)\n    custom_function_results_data_2 = phantom.collect2(container=container, datapath=['cf_local_POV_get_current_task_1:custom_function_result.data.task_id', 'cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'CompleteTask' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        for custom_function_results_item_2 in custom_function_results_data_2:\n            parameters.append({\n                'note': \"Finished - If you need to rerun this playbook - Revert the task status to 'not started' and re run\",\n                'user': custom_function_results_item_1[0],\n                'status': \"complete\",\n                'role_id': \"\",\n                'task_id': custom_function_results_item_2[0],\n                'task_name': \"\",\n                'note_title': custom_function_results_item_2[1],\n                'phase_name': \"\",\n                'container_id': id_value,\n            })\n\n    phantom.act(action=\"update task\", parameters=parameters, assets=['phantomapp'], name=\"CompleteTask\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "UpdateESNotable",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "CompleteTask",
                        "delay": 0,
                        "description": "Updates Task Status to Complete",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3ebb1063-986a-44bf-b524-1c9cad33535c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 336,
                        "line_start": 304,
                        "message": "Configuring now",
                        "name": "update task",
                        "notes": "Updates Task Status to Complete",
                        "number": 2,
                        "order": 13,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1120,
                            "y": 400
                        },
                        "previous_function": "",
                        "previous_name": "CompleteTask",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 92
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_1() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.label\", \"==\", \"splunk_notable\"],\n        ],\n        name=\"filter_1:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        decision_2(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "ES_Notable_Close_Message",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "04e301cd-7f45-4675-b5bd-68942a18279c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 354,
                        "line_start": 336,
                        "name": "filter",
                        "notes": "",
                        "number": 1,
                        "order": 14,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.label",
                                        "value": "splunk_notable"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 660,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "filter_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 96
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "SplunkEventIDUnavailabl..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def SplunkEventIDUnavailable(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('SplunkEventIDUnavailable() called')\n\n    phantom.comment(container=container, comment=\"Unable to Get Splunk SID from artifacts\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "Unable to Get Splunk SID from artifacts",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "ES_Notable_Close_Message",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "SplunkEventIDUnavailable",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "aaf6565b-06d0-413e-bea2-4e60616b951e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 382,
                        "line_start": 375,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "Unable to find an event_id to send back to Splunk",
                        "number": 3,
                        "order": 16,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 900,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "SplunkEventIDUnavailable",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 99
                    },
                    {
                        "action": "update event",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "comment": "FormatClosingComments:formatted_data",
                            "event_ids": "filtered-data:filter_1:condition_1:artifact:*.cef.event_id",
                            "integer_status": "",
                            "owner": "",
                            "status": "closed",
                            "urgency": ""
                        },
                        "angle": 0,
                        "app": "Splunk",
                        "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update event",
                                "actions": [
                                    "post data",
                                    "update event",
                                    "run query",
                                    "on poll",
                                    "get host events",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Splunk",
                                "app_version": "1.3.41",
                                "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
                                "asset_name": "splunk",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "comment": "FormatClosingComments:formatted_data",
                                    "event_ids": "filtered-data:filter_1:condition_1:artifact:*.cef.event_id",
                                    "integer_status": "",
                                    "owner": "",
                                    "status": "closed",
                                    "urgency": ""
                                },
                                "has_app": true,
                                "id": 24,
                                "loaded": false,
                                "missing": false,
                                "name": "splunk",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 0,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.comment",
                                        "data_type": "string",
                                        "example_values": [
                                            "test comment"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "splunk notable event id"
                                        ],
                                        "data_path": "action_result.parameter.event_ids",
                                        "data_type": "string",
                                        "example_values": [
                                            "1542751027.136723+0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.integer_status",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.owner",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.urgency",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.failure_count",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "1 event updated successfully"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.success_count",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.updated_event_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "2CF264EE-6016-4F6A-BCC3-4B7251E113F7@@notable@@035142b19c09ab645c6bbfb847e866f4"
                                        ]
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 1,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Updated event id: 2CF264EE-6016-4F6A-BCC3-4B7251E113F7@@notable@@035142b19c09ab645c6bbfb847e866f4"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "comment": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "New comment for the event",
                                        "key": "comment",
                                        "order": 5,
                                        "required": false
                                    },
                                    "event_ids": {
                                        "contains": [
                                            "splunk notable event id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Event ID to update",
                                        "key": "event_ids",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "integer_status": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Integer representing custom status value",
                                        "key": "integer_status",
                                        "order": 3,
                                        "required": false
                                    },
                                    "owner": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "New owner for the event",
                                        "key": "owner",
                                        "order": 1,
                                        "required": false
                                    },
                                    "status": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "New status for the event",
                                        "key": "status",
                                        "order": 2,
                                        "required": false,
                                        "value_list": [
                                            "unassigned",
                                            "new",
                                            "in progress",
                                            "pending",
                                            "resolved",
                                            "closed"
                                        ]
                                    },
                                    "urgency": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "New urgency for the event",
                                        "key": "urgency",
                                        "order": 4,
                                        "required": false,
                                        "value_list": [
                                            "",
                                            "informational",
                                            "low",
                                            "medium",
                                            "high",
                                            "critical"
                                        ]
                                    }
                                },
                                "product_name": "Splunk Enterprise",
                                "product_vendor": "Splunk Inc.",
                                "targets": "24",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "UpdateESNotable"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def UpdateESNotable(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('UpdateESNotable() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'UpdateESNotable' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_1:condition_1:artifact:*.cef.event_id', 'filtered-data:filter_1:condition_1:artifact:*.id'])\n    formatted_data_1 = phantom.get_format_data(name='FormatClosingComments')\n\n    parameters = []\n    \n    # build parameters list for 'UpdateESNotable' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'owner': \"\",\n                'status': \"closed\",\n                'comment': formatted_data_1,\n                'urgency': \"\",\n                'event_ids': filtered_artifacts_item_1[0],\n                'integer_status': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(action=\"update event\", parameters=parameters, assets=['splunk'], callback=CreateGeneralNote, name=\"UpdateESNotable\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "ES_Notable_Close_Message",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "UpdateESNotable",
                        "delay": 0,
                        "description": "Sets the ES Notable to Closed Status",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "af124eb1-0873-49ee-8093-5e69e0d8d7a6",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 48,
                        "line_start": 19,
                        "message": "Configuring now",
                        "name": "update event",
                        "notes": "Sets the ES Notable to Closed Status",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 440,
                            "y": 400
                        },
                        "previous_function": "",
                        "previous_name": "UpdateESNotable",
                        "required_params": {
                            "event_ids": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 100
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "approver": "admin",
                        "approver_display": "admin",
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "# read-only block view not available",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "connected_to_start": true,
                        "connection_name": "TaskInProgress",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "def ES_Notable_Close_Message(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('PromptAnalystCloseMessage() called')\n    \n    # set user and message variables for phantom.prompt call\n    user_datapath = phantom.collect2(container=container, datapath=['cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.username'], action_results=results)\n    user_datapath_1 = [item[0] for item in user_datapath]\n\n    # set user and message variables for phantom.prompt call\n    user = user_datapath_1[0]\n    message = \"\"\"Add a closing closing comment for event: \n {0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"container:name\",\n    ]\n\n    #responses:\n    response_types = [\n        {\n            \"prompt\": \"\",\n            \"options\": {\n                \"type\": \"message\",\n            },\n        },\n    ]\n\n    phantom.prompt2(container=container, user=user, message=message, respond_in_mins=30, name=\"PromptAnalystCloseMessage\", parameters=parameters, response_types=response_types, callback=CreateEventURL)\n\n    return\n",
                        "custom_join": "",
                        "custom_name": "ES_Notable_Close_Message",
                        "description": "Prompt the analyst for a comment to close the ES Notable",
                        "has_custom": true,
                        "has_custom_block": true,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "97a30723-6b98-4e63-96d3-de0480370578",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 82,
                        "line_start": 51,
                        "message": "Add a closing closing comment for event: \n {0}",
                        "name": "prompt",
                        "notes": "Prompt the analyst for a comment to close the ES Notable",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "container:description"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "ES_Notable_Close_Message",
                        "respond_in": "30",
                        "response_key": "Message",
                        "response_options": [],
                        "response_type": "list",
                        "responses": [
                            {
                                "response_key": "Message",
                                "response_options": [
                                    "",
                                    ""
                                ],
                                "response_prompt": "",
                                "response_type": "message"
                            }
                        ],
                        "show_number": true,
                        "size": {
                            "height": 80,
                            "width": 80
                        },
                        "state": "prompt",
                        "status": "",
                        "type": "coa.Prompt",
                        "warn": false,
                        "z": 101
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "AddGeneralNote"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def AddGeneralNote(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('AddGeneralNote() called')\n\n    formatted_data_1 = phantom.get_format_data(name='CreateGeneralNote')\n\n    note_title = \"Findings\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    CompleteTask(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "CreateGeneralNote:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Findings",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "UpdateESNotable",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "AddGeneralNote",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2c602f99-c628-4a41-9a96-57c44ef44bfb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 301,
                        "line_start": 288,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "Adds the note to the general notes section",
                        "number": 2,
                        "order": 12,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 900,
                            "y": 400
                        },
                        "previous_function": "",
                        "previous_name": "AddGeneralNote",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 102
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_2() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.cef.event_id\", \"==\", \"forceElse\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        SplunkEventIDUnavailable(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    UpdateESNotable(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "ES_Notable_Close_Message",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6f67e448-1daf-40c4-abf9-929f88618838",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 375,
                        "line_start": 354,
                        "name": "decision",
                        "notes": "",
                        "number": 2,
                        "order": 15,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.cef.event_id",
                                        "value": "forceElse"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 780,
                            "y": 240
                        },
                        "previous_function": "",
                        "previous_name": "decision_2",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 103
                    }
                ]
            },
            "notes": ""
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.3.51237"
    },
    "create_time": "2021-07-27T11:32:27.323476+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}