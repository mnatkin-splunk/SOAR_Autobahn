{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Proof of Value",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "\n",
            "description": "This playbook should be run as a sub-playbook at the end of automation to report its findings. It is an example of how Phantom can be used to generate tickets.",
            "hash": "3d59a0c48e96e91fa81485724f9715e61a6cb520",
            "joint": {
                "cells": [
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return\n",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "create JIRA ticket, create ServiceNow ticket, send email",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6a061c8a-b6c6-4dde-acb6-e3fdc509c9ca",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 360,
                        "line_start": 347,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 20,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1100,
                            "y": 460
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 2
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b6aaf32b-4a44-416e-8b9d-71387e77c0a2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "66eda21a-a59e-4755-966b-903864466472",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "47f869e8-ee01-4cf0-acda-7c4ed283ce6a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 6
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'getTicketingOutputs' block\n    getTicketingOutputs(container=container)\n\n    return\n",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "baaac521-16b0-46ed-928c-7229e69e48bd",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 16,
                        "line_start": 8,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -400,
                            "y": 220
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 17
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7b29a42f-be5c-4c89-a8cc-ef015b0c2a21",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "24fe194c-46ac-4a95-8b34-7e3ca2209438",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5ff6446c-8158-4d78-8a5a-8574e2416bc7",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 28
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3e2557bb-7d18-43e8-b620-8099d769ca94",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "24fe194c-46ac-4a95-8b34-7e3ca2209438",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "66eda21a-a59e-4755-966b-903864466472",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 30
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "checkEmailFields"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def checkEmailFields(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('checkEmailFields() called')\n    \n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    phantom.debug('oops')\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    send_email_1(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 8,
                        "custom_callback": "",
                        "custom_code": "def checkEmailFields(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('custom_function_2() called')\n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    phantom.debug('oops')\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "checkEmailFields",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5e556e21-a1cf-4223-8a6f-1cc13eb7751f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 69,
                        "line_start": 51,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Check we have the right fields for sending email output.",
                        "number": 2,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 120,
                            "y": 560
                        },
                        "previous_function": "",
                        "previous_name": "checkEmailFields",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    phantom.debug('oops')\n",
                        "warn": false,
                        "z": 41
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "checkServiceNowFields"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def checkServiceNowFields(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('checkServiceNowFields() called')\n    \n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    phantom.debug('ServiceNow')\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    create_ServiceNow_ticket(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 8,
                        "custom_callback": "",
                        "custom_code": "def checkServiceNowFields(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('custom_function_1() called')\n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    phantom.debug('ServiceNow')\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "checkServiceNowFields",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "47f869e8-ee01-4cf0-acda-7c4ed283ce6a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 51,
                        "line_start": 33,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Make sure we have what we need to create service Now ticket",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 120,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "checkServiceNowFields",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    phantom.debug('ServiceNow')\n",
                        "warn": false,
                        "z": 42
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "checkJira"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def checkJira(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('checkJira() called')\n    \n    input_parameter_0 = \"\"\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n    create_JIRA_ticket(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "customCodeEndLineOffset": 5,
                        "customCodeStartLine": 8,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "checkJira",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b396c6b9-a7b8-4c57-87b9-9e3c6bb535cf",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 116,
                        "line_start": 98,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Check we have the right fields for JIRA ticketing",
                        "number": 5,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 120,
                            "y": 320
                        },
                        "previous_function": "",
                        "previous_name": "checkJira",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n",
                        "warn": false,
                        "z": 46
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5438a9eb-358e-4448-9273-c2fad3f34cd4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b396c6b9-a7b8-4c57-87b9-9e3c6bb535cf",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a88bd3cf-4076-4f44-a0da-da74e403b10b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 47
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c0fcbdd6-b121-4ef2-8b37-5442d8da40b9",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "47f869e8-ee01-4cf0-acda-7c4ed283ce6a",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "755ab81b-51b4-417f-ba6f-6610f220a4fb",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 49
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "b899e7a1-6101-4783-98de-c48064fec760",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5e556e21-a1cf-4223-8a6f-1cc13eb7751f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2d0944a2-ea9a-4314-802a-209221b58c6b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 51
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "Comment Misconfigured..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Comment_Misconfigured_List(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Comment_Misconfigured_List() called')\n\n    phantom.comment(container=container, comment=\"Custom list not configured, or badly configured\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "Custom list not configured, or badly configured",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Comment Misconfigured List",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "5ff6446c-8158-4d78-8a5a-8574e2416bc7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 98,
                        "line_start": 91,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "Add comment - badly configured custom list",
                        "number": 3,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 120,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "Comment_Misconfigured_List",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 58
                    },
                    {
                        "action": "create ticket",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "description": "Phantom Handled The EC2 Issue",
                            "fields": "",
                            "short_description": "container:name",
                            "table": "incident",
                            "vault_id": ""
                        },
                        "angle": 0,
                        "app": "ServiceNow",
                        "appid": "a590c3bc-ca41-4a0e-b063-8066ca868794",
                        "approver": "",
                        "assets": [
                            {
                                "action": "create ticket",
                                "actions": [
                                    "test connectivity",
                                    "add work note",
                                    "add comment",
                                    "describe service catalog",
                                    "request catalog item",
                                    "describe catalog item",
                                    "list services",
                                    "list categories",
                                    "list service catalogs",
                                    "list tickets",
                                    "create ticket",
                                    "get ticket",
                                    "update ticket",
                                    "get variables",
                                    "run query",
                                    "on poll"
                                ],
                                "active": true,
                                "app_name": "ServiceNow",
                                "app_version": "2.0.12",
                                "appid": "a590c3bc-ca41-4a0e-b063-8066ca868794",
                                "asset_name": "servicenow",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "description": "Phantom Handled The EC2 Issue",
                                    "fields": "",
                                    "short_description": "container:name",
                                    "table": "incident",
                                    "vault_id": ""
                                },
                                "has_app": true,
                                "id": 10,
                                "loaded": false,
                                "missing": false,
                                "name": "servicenow",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Investigative actions to check for the presence of phapp_servicenow"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.fields",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"made_sla\":true,\"severity\":3,\"description\":\"This is testing description\"}"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.short_description",
                                        "data_type": "string",
                                        "example_values": [
                                            "phapp_servicenow, Multiple action need to be taken"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "servicenow table"
                                        ],
                                        "data_path": "action_result.parameter.table",
                                        "data_type": "string",
                                        "example_values": [
                                            "incident"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_path": "action_result.parameter.vault_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.active",
                                        "data_type": "string",
                                        "example_values": [
                                            "true"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.activity_due",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.additional_assignee_list",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.approval",
                                        "data_type": "string",
                                        "example_values": [
                                            "not requested"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.approval_history",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.approval_set",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.assigned_to",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.assigned_to.link",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://devtest2704.service-now.com/api/now/table/sys_user/d8f57f140b20220050192f15d6673a98"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.assigned_to.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "d8f57f140b20220050192f15d6673a98"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.assignment_group",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.average_image_color",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.chunk_size_bytes",
                                        "data_type": "string",
                                        "example_values": [
                                            "734003"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.compressed",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.content_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.attachment_details.*.download_link",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "file name"
                                        ],
                                        "data_path": "action_result.data.*.attachment_details.*.file_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.image_height",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.image_width",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.size_bytes",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.size_compressed",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.state",
                                        "data_type": "string",
                                        "example_values": [
                                            "available"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_created_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_created_on",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_mod_count",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_updated_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.sys_updated_on",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.table_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attachment_details.*.table_sys_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.business_duration",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.business_service",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.business_stc",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.calendar_duration",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.calendar_stc",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.caller_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.category",
                                        "data_type": "string",
                                        "example_values": [
                                            "inquiry"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.caused_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.child_incidents",
                                        "data_type": "string",
                                        "example_values": [
                                            "0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.close_code",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.close_notes",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Closed On",
                                        "column_order": 7,
                                        "data_path": "action_result.data.*.closed_at",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.closed_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.cmdb_ci",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.comments",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.comments_and_work_notes",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.company",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.contact_type",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.correlation_display",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.correlation_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.delivery_plan",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.delivery_task",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Description",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Investigative actions to check for the presence of phapp_servicenow\n\nAdded by Splunk for container id: 495"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.due_date",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.escalation",
                                        "data_type": "string",
                                        "example_values": [
                                            "0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.expected_start",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.follow_up",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.group_list",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.hold_reason",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.impact",
                                        "data_type": "string",
                                        "example_values": [
                                            "3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.incident_state",
                                        "data_type": "string",
                                        "example_values": [
                                            "1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.knowledge",
                                        "data_type": "string",
                                        "example_values": [
                                            "false"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.location",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.made_sla",
                                        "data_type": "string",
                                        "example_values": [
                                            "true"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.notify",
                                        "data_type": "string",
                                        "example_values": [
                                            "1"
                                        ]
                                    },
                                    {
                                        "column_name": "Ticket Number",
                                        "column_order": 0,
                                        "contains": [
                                            "servicenow ticket number"
                                        ],
                                        "data_path": "action_result.data.*.number",
                                        "data_type": "string",
                                        "example_values": [
                                            "INC0000001"
                                        ]
                                    },
                                    {
                                        "column_name": "Opened On",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.opened_at",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-11-22 09:57:05"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.opened_by.link",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://devtest.service-now.com/api/now/table/sys_user/6816f79cc0a8016401c5a33be04be441"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.opened_by.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "6816f79cc0a8016401c5a33be04be441"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.order",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.parent",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.parent_incident",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Priority",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.priority",
                                        "data_type": "string",
                                        "example_values": [
                                            "5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.problem_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reassignment_count",
                                        "data_type": "string",
                                        "example_values": [
                                            "0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.reopen_count",
                                        "data_type": "string",
                                        "example_values": [
                                            "0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.reopened_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.reopened_time",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resolved_at",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.resolved_by",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.rfc",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Severity",
                                        "column_order": 4,
                                        "data_path": "action_result.data.*.severity",
                                        "data_type": "string",
                                        "example_values": [
                                            "3"
                                        ]
                                    },
                                    {
                                        "column_name": "Short Description",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.short_description",
                                        "data_type": "string",
                                        "example_values": [
                                            "phapp_servicenow, Multiple action need to be taken"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sla_due",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.state",
                                        "data_type": "string",
                                        "example_values": [
                                            "1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.subcategory",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_class_name",
                                        "data_type": "string",
                                        "example_values": [
                                            "incident"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_created_by",
                                        "data_type": "string",
                                        "example_values": [
                                            "admin"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_created_on",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-11-22 09:57:05"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.sys_domain.link",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://devtest.service-now.com/api/now/table/sys_user_group/global"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_domain.value",
                                        "data_type": "string",
                                        "example_values": [
                                            "global"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "domain"
                                        ],
                                        "data_path": "action_result.data.*.sys_domain_path",
                                        "data_type": "string",
                                        "example_values": [
                                            "/"
                                        ]
                                    },
                                    {
                                        "column_name": "ID",
                                        "column_order": 3,
                                        "contains": [
                                            "servicenow ticket sysid",
                                            "md5"
                                        ],
                                        "data_path": "action_result.data.*.sys_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "e19eff67db716300134cd100cf961915"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_mod_count",
                                        "data_type": "string",
                                        "example_values": [
                                            "0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_tags",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_updated_by",
                                        "data_type": "string",
                                        "example_values": [
                                            "admin"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.sys_updated_on",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-11-22 09:57:05"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.time_worked",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.upon_approval",
                                        "data_type": "string",
                                        "example_values": [
                                            "proceed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.upon_reject",
                                        "data_type": "string",
                                        "example_values": [
                                            "cancel"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.urgency",
                                        "data_type": "string",
                                        "example_values": [
                                            "3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.user_input",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.watch_list",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.work_end",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.work_notes",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.work_notes_list",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.work_start",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.attachment_added",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.summary.attachment_error",
                                        "data_type": "string",
                                        "example_values": [
                                            "File not found in Vault"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.attachment_id",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "servicenow ticket sysid",
                                            "md5"
                                        ],
                                        "data_path": "action_result.summary.created_ticket_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "e19eff67db716300134cd100cf961915"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Created ticket id: e19eff67db716300134cd100cf961915"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "description": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Ticket description",
                                        "key": "description",
                                        "order": 1,
                                        "required": false
                                    },
                                    "fields": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON containing field values",
                                        "key": "fields",
                                        "order": 3,
                                        "required": false
                                    },
                                    "short_description": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Ticket short description",
                                        "key": "short_description",
                                        "order": 0,
                                        "required": false
                                    },
                                    "table": {
                                        "contains": [
                                            "servicenow table"
                                        ],
                                        "data_type": "string",
                                        "default": "incident",
                                        "description": "Table to add to",
                                        "key": "table",
                                        "order": 2,
                                        "primary": true,
                                        "required": false
                                    },
                                    "vault_id": {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Vault ID of file to attach to ticket",
                                        "key": "vault_id",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "ServiceNow",
                                "product_vendor": "ServiceNow",
                                "targets": "10",
                                "type": "ticketing"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "create ServiceNow ticket"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def create_ServiceNow_ticket(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('create_ServiceNow_ticket() called')\n\n    name_value = container.get('name', None)\n\n    # collect data for 'create_ServiceNow_ticket' call\n\n    parameters = []\n    \n    # build parameters list for 'create_ServiceNow_ticket' call\n    parameters.append({\n        'table': \"incident\",\n        'fields': \"\",\n        'vault_id': \"\",\n        'description': \"Phantom Handled The EC2 Issue\",\n        'short_description': name_value,\n    })\n\n    phantom.act(action=\"create ticket\", parameters=parameters, assets=['servicenow'], callback=ServiceNow_Status_Message, name=\"create_ServiceNow_ticket\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "create ServiceNow ticket",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "755ab81b-51b4-417f-ba6f-6610f220a4fb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 164,
                        "line_start": 142,
                        "message": "Configuring now",
                        "name": "create ticket",
                        "notes": "Creates the Service Now Ticket",
                        "number": 2,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 340,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "create_ServiceNow_ticket",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 63
                    },
                    {
                        "action": "create ticket",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "assignee": "",
                            "assignee_account_id": "",
                            "description": "Phantom Handled this ticket",
                            "fields": "",
                            "issue_type": "Request new software",
                            "priority": "",
                            "project_key": "PRIN",
                            "summary": "container:name",
                            "vault_id": ""
                        },
                        "angle": 0,
                        "app": "Jira",
                        "appid": "1e1618e7-2f70-4fc0-916a-f96facc2d2e1",
                        "approver": "",
                        "assets": [
                            {
                                "action": "create ticket",
                                "actions": [
                                    "create ticket",
                                    "test connectivity",
                                    "get attachments",
                                    "update ticket",
                                    "add comment",
                                    "delete ticket",
                                    "list projects",
                                    "list tickets",
                                    "lookup users",
                                    "get ticket",
                                    "set status",
                                    "link tickets",
                                    "add watcher",
                                    "remove watcher",
                                    "on poll"
                                ],
                                "active": true,
                                "app_name": "Jira",
                                "app_version": "3.0.0",
                                "appid": "1e1618e7-2f70-4fc0-916a-f96facc2d2e1",
                                "asset_name": "jiraingest",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "assignee": "",
                                    "assignee_account_id": "",
                                    "description": "Phantom Handled this ticket",
                                    "fields": "",
                                    "issue_type": "Request new software",
                                    "priority": "",
                                    "project_key": "PRIN",
                                    "summary": "container:name",
                                    "vault_id": ""
                                },
                                "has_app": true,
                                "id": 11,
                                "loaded": false,
                                "missing": false,
                                "name": "jiraingest",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "user name"
                                        ],
                                        "data_path": "action_result.parameter.assignee",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Name"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira user account id"
                                        ],
                                        "data_path": "action_result.parameter.assignee_account_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "5d2ef6ab52a8370c567f27bb"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Jira QA automation ticket description"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.fields",
                                        "data_type": "string",
                                        "example_values": [
                                            "{\"priority\": {\"name\": \"Normal\"}}",
                                            "{\"fields\": {\"customfield_10105\": \"Test epic link name\"}}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira issue type"
                                        ],
                                        "data_path": "action_result.parameter.issue_type",
                                        "data_type": "string",
                                        "example_values": [
                                            "Story",
                                            "Task"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira ticket priority"
                                        ],
                                        "data_path": "action_result.parameter.priority",
                                        "data_type": "string",
                                        "example_values": [
                                            "Normal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira project key"
                                        ],
                                        "data_path": "action_result.parameter.project_key",
                                        "data_type": "string",
                                        "example_values": [
                                            "MAN",
                                            "PRJ"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.summary",
                                        "data_type": "string",
                                        "example_values": [
                                            "Jira QA ticket"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_path": "action_result.parameter.vault_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "fe3ac82064175835a67c279cbb9373f96c367566"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.assign_error",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.attach_error",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Description",
                                        "column_order": 1,
                                        "data_path": "action_result.data.*.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "Jira QA automation ticket description"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Custom Checkbox Field Three",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Custom Label Field Two",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Custom Text Field One",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.CustomerSanText",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Epic Link",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Severity",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Domain Test",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.Sprint",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.aggregateprogress.progress",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.aggregateprogress.total",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.aggregatetimeestimate",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.aggregatetimeoriginalestimate",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.aggregatetimespent",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "jira user account id"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.accountId",
                                        "data_type": "string",
                                        "example_values": [
                                            "5d2ef6ab52a8370c567f27bb"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.accountType",
                                        "data_type": "string",
                                        "example_values": [
                                            "atlassian"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.active",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.avatarUrls.16x16",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.avatarUrls.24x24",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.avatarUrls.32x32",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.avatarUrls.48x48",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira user display name"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.displayName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Name"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.emailAddress",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.key",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "test"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.assignee.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.assignee.timeZone",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.comment.maxResults",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.comment.startAt",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.comment.total",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.created",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-09-25T06:31:58.854-0700"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira user account id"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.accountId",
                                        "data_type": "string",
                                        "example_values": [
                                            "557058:c4593bd2-4853-4a5e-a9ed-278ca5f17dce"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.accountType",
                                        "data_type": "string",
                                        "example_values": [
                                            "atlassian"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.active",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.avatarUrls.16x16",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.avatarUrls.24x24",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=small&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.avatarUrls.32x32",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=medium&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.avatarUrls.48x48",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira user display name"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.displayName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Admin"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.emailAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "notifications@domain.us"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.key",
                                        "data_type": "string",
                                        "example_values": [
                                            "admin"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "admin"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.creator.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/user?username=admin"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.creator.timeZone",
                                        "data_type": "string",
                                        "example_values": [
                                            "UTC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.customfield_10000.errorMessage",
                                        "data_type": "string",
                                        "example_values": [
                                            "The Service Desk you are trying to view does not exist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.customfield_10000.i18nErrorMessage.i18nKey",
                                        "data_type": "string",
                                        "example_values": [
                                            "sd.agent.servicedesk.error.servicedesk.missing"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.customfield_10002.errorMessage",
                                        "data_type": "string",
                                        "example_values": [
                                            "The Service Desk you are trying to view does not exist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.customfield_10002.i18nErrorMessage.i18nKey",
                                        "data_type": "string",
                                        "example_values": [
                                            "sd.agent.servicedesk.error.servicedesk.missing"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.customfield_10400.errorMessage",
                                        "data_type": "string",
                                        "example_values": [
                                            "The Service Desk you are trying to view does not exist"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.customfield_10400.i18nErrorMessage.i18nKey",
                                        "data_type": "string",
                                        "example_values": [
                                            "sd.agent.servicedesk.error.servicedesk.missing"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "testing",
                                            "Jira QA automation ticket description"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.duedate",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.environment",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.issuetype.avatarId",
                                        "data_type": "numeric",
                                        "example_values": [
                                            10318
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.issuetype.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "This is a task"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.issuetype.iconUrl",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/images/icons/issuetypes/story.svg",
                                            "http://10.10.123.124:8080/secure/viewavatar?size=xsmall&avatarId=10318&avatarType=issuetype"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.issuetype.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "10101",
                                            "3"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira issue type"
                                        ],
                                        "data_path": "action_result.data.*.fields.issuetype.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Story",
                                            "Task"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.issuetype.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/issuetype/10101",
                                            "http://10.10.123.124:8080/rest/api/2/issuetype/3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.issuetype.subtask",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.lastViewed",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.priority.iconUrl",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/images/icons/priorities/medium.svg"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.priority.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "3"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira ticket priority"
                                        ],
                                        "data_path": "action_result.data.*.fields.priority.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "Medium"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.priority.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/priority/3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.progress.progress",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.progress.total",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.avatarUrls.16x16",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/projectavatar?size=xsmall&avatarId=10403"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.avatarUrls.24x24",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/projectavatar?size=small&avatarId=10403"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.avatarUrls.32x32",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/projectavatar?size=medium&avatarId=10403"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.avatarUrls.48x48",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/projectavatar?avatarId=10403"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "10100"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira project key"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.key",
                                        "data_type": "string",
                                        "example_values": [
                                            "MAN"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "TestProject"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.projectCategory.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "test"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.projectCategory.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "10000"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.projectCategory.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "QA-Team"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.projectCategory.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "https://testlab.atlassian.net/rest/api/2/projectCategory/10000"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.projectTypeKey",
                                        "data_type": "string",
                                        "example_values": [
                                            "software"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.project.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/project/10100"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.project.simplified",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.accountType",
                                        "data_type": "string",
                                        "example_values": [
                                            "atlassian"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.active",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.avatarUrls.16x16",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=xsmall&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.avatarUrls.24x24",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=small&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.avatarUrls.32x32",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?size=medium&ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.avatarUrls.48x48",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/secure/useravatar?ownerId=admin&avatarId=10500"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira user display name"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.displayName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Admin"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.emailAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "notifications@domain.us"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.key",
                                        "data_type": "string",
                                        "example_values": [
                                            "admin"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "user name"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "admin"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.reporter.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/user?username=admin"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.reporter.timeZone",
                                        "data_type": "string",
                                        "example_values": [
                                            "UTC"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.resolution",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.resolutiondate",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-10-03T03:42:10.912-0700"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.security",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.description",
                                        "data_type": "string",
                                        "example_values": [
                                            "This is a sample testing description"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.status.iconUrl",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/images/icons/statuses/open.png"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "10000"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "To Do"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.status.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/status/10000"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.statusCategory.colorName",
                                        "data_type": "string",
                                        "example_values": [
                                            "blue-gray"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.statusCategory.id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.statusCategory.key",
                                        "data_type": "string",
                                        "example_values": [
                                            "new"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.status.statusCategory.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "To Do"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.status.statusCategory.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/statuscategory/2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.statuscategorychangedate",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-07-22T22:43:07.771-0700"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.summary",
                                        "data_type": "string",
                                        "example_values": [
                                            "test",
                                            "Jira QA ticket"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.timeestimate",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.timeoriginalestimate",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.timespent",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.updated",
                                        "data_type": "string",
                                        "example_values": [
                                            "2018-09-25T06:31:58.854-0700",
                                            "2018-10-03T03:42:10.913-0700"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.votes.hasVoted",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.votes.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/issue/MAN-240/votes",
                                            "http://10.10.123.124:8080/rest/api/2/issue/PHANINCIDE-370/votes"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.votes.votes",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.watches.isWatching",
                                        "data_type": "boolean",
                                        "example_values": [
                                            false,
                                            true
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.fields.watches.self",
                                        "data_type": "string",
                                        "example_values": [
                                            "http://10.10.123.124:8080/rest/api/2/issue/MAN-240/watchers",
                                            "http://10.10.123.124:8080/rest/api/2/issue/PHANINCIDE-370/watchers"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.watches.watchCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.worklog.maxResults",
                                        "data_type": "numeric",
                                        "example_values": [
                                            20
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.worklog.startAt",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.worklog.total",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.fields.workratio",
                                        "data_type": "numeric",
                                        "example_values": [
                                            -1
                                        ]
                                    },
                                    {
                                        "column_name": "ID",
                                        "column_order": 2,
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "string",
                                        "example_values": [
                                            "11850",
                                            "11911"
                                        ]
                                    },
                                    {
                                        "column_name": "Type",
                                        "column_order": 3,
                                        "contains": [
                                            "jira issue type"
                                        ],
                                        "data_path": "action_result.data.*.issue_type",
                                        "data_type": "string",
                                        "example_values": [
                                            "Story",
                                            "Task"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.json_fields_error",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Key",
                                        "column_order": 4,
                                        "contains": [
                                            "jira ticket key"
                                        ],
                                        "data_path": "action_result.data.*.name",
                                        "data_type": "string",
                                        "example_values": [
                                            "MAN-240",
                                            "PHANINCIDE-370"
                                        ]
                                    },
                                    {
                                        "column_name": "Priority",
                                        "column_order": 6,
                                        "contains": [
                                            "jira ticket priority"
                                        ],
                                        "data_path": "action_result.data.*.priority",
                                        "data_type": "string",
                                        "example_values": [
                                            "Medium"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "jira project key"
                                        ],
                                        "data_path": "action_result.data.*.project_key",
                                        "data_type": "string",
                                        "example_values": [
                                            "MAN",
                                            "PRJ"
                                        ]
                                    },
                                    {
                                        "column_name": "Reporter",
                                        "column_order": 8,
                                        "contains": [
                                            "jira user display name"
                                        ],
                                        "data_path": "action_result.data.*.reporter",
                                        "data_type": "string",
                                        "example_values": [
                                            "Test Admin"
                                        ]
                                    },
                                    {
                                        "column_name": "Resolution",
                                        "column_order": 7,
                                        "contains": [
                                            "jira ticket resolution"
                                        ],
                                        "data_path": "action_result.data.*.resolution",
                                        "data_type": "string",
                                        "example_values": [
                                            "Unresolved"
                                        ]
                                    },
                                    {
                                        "column_name": "Status",
                                        "column_order": 5,
                                        "data_path": "action_result.data.*.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "To Do"
                                        ]
                                    },
                                    {
                                        "column_name": "Summary",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.summary",
                                        "data_type": "string",
                                        "example_values": [
                                            "test",
                                            "Jira QA ticket"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Created ticket with id: 11850, key: MAN-240",
                                            "Created ticket with id: 11911, key: PHANINCIDE-370"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "assignee": {
                                        "contains": [
                                            "user name"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Assignee username (required for Jira on-prem, assign required permissions)",
                                        "key": "assignee",
                                        "order": 5,
                                        "primary": true,
                                        "required": false
                                    },
                                    "assignee_account_id": {
                                        "contains": [
                                            "jira user account id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Assignee user account ID (required for Jira cloud, assign required permissions)",
                                        "key": "assignee_account_id",
                                        "order": 6,
                                        "primary": true,
                                        "required": false
                                    },
                                    "description": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Description of the issue",
                                        "key": "description",
                                        "order": 2,
                                        "required": false
                                    },
                                    "fields": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "JSON containing field values",
                                        "key": "fields",
                                        "order": 7,
                                        "required": false
                                    },
                                    "issue_type": {
                                        "contains": [
                                            "jira issue type"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Type of the issue (case-sensitive)",
                                        "key": "issue_type",
                                        "order": 3,
                                        "primary": true,
                                        "required": true
                                    },
                                    "priority": {
                                        "contains": [
                                            "jira ticket priority"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Priority of the issue",
                                        "key": "priority",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    },
                                    "project_key": {
                                        "contains": [
                                            "jira project key"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Project key to add the issue to (case-sensitive)",
                                        "key": "project_key",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "summary": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Summary of the issue",
                                        "key": "summary",
                                        "order": 1,
                                        "required": true
                                    },
                                    "vault_id": {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Vault ID of attachment",
                                        "key": "vault_id",
                                        "order": 8,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Jira",
                                "product_vendor": "Atlassian",
                                "targets": "11",
                                "type": "ticketing"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "create JIRA ticket"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def create_JIRA_ticket(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('create_JIRA_ticket() called')\n\n    name_value = container.get('name', None)\n\n    # collect data for 'create_JIRA_ticket' call\n\n    parameters = []\n    \n    # build parameters list for 'create_JIRA_ticket' call\n    parameters.append({\n        'fields': \"\",\n        'summary': name_value,\n        'assignee': \"\",\n        'priority': \"\",\n        'vault_id': \"\",\n        'issue_type': \"Request new software\",\n        'description': \"Phantom Handled this ticket\",\n        'project_key': \"PRIN\",\n        'assignee_account_id': \"\",\n    })\n\n    phantom.act(action=\"create ticket\", parameters=parameters, assets=['jiraingest'], callback=JIRA_Status_Message, name=\"create_JIRA_ticket\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "create JIRA ticket",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a88bd3cf-4076-4f44-a0da-da74e403b10b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 142,
                        "line_start": 116,
                        "message": "Configuring now",
                        "name": "create ticket",
                        "notes": "Creates the JIRA ticket",
                        "number": 1,
                        "order": 8,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 340,
                            "y": 320
                        },
                        "previous_function": "",
                        "previous_name": "create_JIRA_ticket",
                        "required_params": {
                            "issue_type": true,
                            "project_key": true,
                            "summary": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 65
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6922142e-47a7-40b7-ac15-dd635ca97ac1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "755ab81b-51b4-417f-ba6f-6610f220a4fb",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "51052678-105a-45ec-a5c3-b6f210c6fe5c",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 74
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c6eb80f1-86d4-4104-82e3-9bf84a938781",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "51052678-105a-45ec-a5c3-b6f210c6fe5c",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "454253a6-9c74-4a82-969b-6600b5e7abed",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 76
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "add comment"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_comment_5(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_comment_5() called')\n\n    formatted_data_1 = phantom.get_format_data(name='ServiceNow_Status_Message')\n\n    phantom.comment(container=container, comment=formatted_data_1)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "ServiceNow_Status_Message:formatted_data",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "create ServiceNow ticket",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "454253a6-9c74-4a82-969b-6600b5e7abed",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 214,
                        "line_start": 205,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "",
                        "number": 5,
                        "order": 12,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 780,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "add_comment_5",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 77
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "57763bcc-d5cb-4c7b-87a2-61488d46e0c5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a88bd3cf-4076-4f44-a0da-da74e403b10b",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "55898283-f70b-465d-8f7f-e1f243ef1fdc",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 78
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "651e99ce-001f-4b3f-a2d3-b674ef127acb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2d0944a2-ea9a-4314-802a-209221b58c6b",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4c0c19a8-2344-47c0-aecb-23c20665853f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 82
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "805db248-6085-4b8d-80b1-6a6997dbcfcd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4c0c19a8-2344-47c0-aecb-23c20665853f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1185f850-9829-4d49-b7ce-dbfd54e890d0",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 84
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "add comment"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_comment_6(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_comment_6() called')\n\n    formatted_data_1 = phantom.get_format_data(name='Email_Status_Message')\n\n    phantom.comment(container=container, comment=formatted_data_1)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "Email_Status_Message:formatted_data",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "send email",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1185f850-9829-4d49-b7ce-dbfd54e890d0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 255,
                        "line_start": 246,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "",
                        "number": 6,
                        "order": 15,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 780,
                            "y": 560
                        },
                        "previous_function": "",
                        "previous_name": "add_comment_6",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 87
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d12d472b-29f7-48bc-805e-013f3b9ed460",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "55898283-f70b-465d-8f7f-e1f243ef1fdc",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3b13655e-191c-4d40-8e09-e657dcd5b910",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 88
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c1993013-1ea1-4287-b5ca-89e35425be60",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3b13655e-191c-4d40-8e09-e657dcd5b910",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6a061c8a-b6c6-4dde-acb6-e3fdc509c9ca",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 90
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "9cad315c-6d40-4137-8b98-9c64215618ee",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "454253a6-9c74-4a82-969b-6600b5e7abed",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6a061c8a-b6c6-4dde-acb6-e3fdc509c9ca",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 91
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "85bd2426-9e15-47e3-abb8-834e558c9bbb",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1185f850-9829-4d49-b7ce-dbfd54e890d0",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6a061c8a-b6c6-4dde-acb6-e3fdc509c9ca",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 92
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ca57210a-939e-4758-a4af-7f43694656ae",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "5ff6446c-8158-4d78-8a5a-8574e2416bc7",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6a061c8a-b6c6-4dde-acb6-e3fdc509c9ca",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 93
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "add comment"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_comment_7(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_comment_7() called')\n\n    formatted_data_1 = phantom.get_format_data(name='JIRA_Status_Message')\n\n    phantom.comment(container=container, comment=formatted_data_1)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "JIRA_Status_Message:formatted_data",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "create JIRA ticket",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3b13655e-191c-4d40-8e09-e657dcd5b910",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 264,
                        "line_start": 255,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "",
                        "number": 7,
                        "order": 16,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 780,
                            "y": 320
                        },
                        "previous_function": "",
                        "previous_name": "add_comment_7",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 97
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "JIRA Status Message"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def JIRA_Status_Message(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('JIRA_Status_Message() called')\n    \n    template = \"\"\"JIRA Ticket Creation status : {0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"create_JIRA_ticket:action_result.status\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"JIRA_Status_Message\")\n\n    add_comment_7(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "create JIRA ticket",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "JIRA Status Message",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "55898283-f70b-465d-8f7f-e1f243ef1fdc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 230,
                        "line_start": 214,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Status Message for Comment block",
                        "number": 2,
                        "order": 13,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "create_JIRA_ticket:action_result.status"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 560,
                            "y": 320
                        },
                        "previous_function": "",
                        "previous_name": "JIRA_Status_Message",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "JIRA Ticket Creation status : {0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 98
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "ServiceNow Status Mess..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def ServiceNow_Status_Message(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('ServiceNow_Status_Message() called')\n    \n    template = \"\"\"ServiceNow Ticket Creation status : {0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"create_ServiceNow_ticket:action_result.status\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"ServiceNow_Status_Message\")\n\n    add_comment_5(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "create ServiceNow ticket",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "ServiceNow Status Message",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "51052678-105a-45ec-a5c3-b6f210c6fe5c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 205,
                        "line_start": 189,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Create Status Message for Comment Block",
                        "number": 1,
                        "order": 11,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "create_ServiceNow_ticket:action_result.status"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 560,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "ServiceNow_Status_Message",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "ServiceNow Ticket Creation status : {0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 99
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c431e625-8d01-4f26-b0b1-d6e1e3fcc75d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "baaac521-16b0-46ed-928c-7229e69e48bd",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b837c318-8d3d-4e44-bea9-82d6993d9d28",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 101
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6b1e25bd-3111-47b3-a617-5203173a772e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b837c318-8d3d-4e44-bea9-82d6993d9d28",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "24fe194c-46ac-4a95-8b34-7e3ca2209438",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 113
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6095bae1-2a66-40d7-98f6-d8133cf7dbc4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "24fe194c-46ac-4a95-8b34-7e3ca2209438",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fcd7e532-8414-4060-8de7-9bf3698d0758",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 123
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "20f822c1-173c-46b9-aa2b-c7d57f2d099b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "fcd7e532-8414-4060-8de7-9bf3698d0758",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b396c6b9-a7b8-4c57-87b9-9e3c6bb535cf",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 127
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "94d57a0b-6b20-4606-b1a8-2232ff373a38",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "24fe194c-46ac-4a95-8b34-7e3ca2209438",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "ac852e01-a15a-490a-8eed-d42ef1cc114f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 128
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "70d59606-5eea-4cd0-8689-919623bb1ff5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "ac852e01-a15a-490a-8eed-d42ef1cc114f",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "5e556e21-a1cf-4223-8a6f-1cc13eb7751f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 130
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_2() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [\"getTicketingOutputs:custom_function:getTicketingOutput\", \"==\", \"badValue\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        Comment_Misconfigured_List(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    decision_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    decision_6(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    decision_7(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "24fe194c-46ac-4a95-8b34-7e3ca2209438",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 91,
                        "line_start": 69,
                        "name": "decision",
                        "notes": "",
                        "number": 2,
                        "order": 5,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "getTicketingOutputs:custom_function:getTicketingOutput",
                                        "value": "badValue"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -60,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "decision_2",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 131
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_1() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [\"getTicketingOutputs:custom_function:servicenow\", \"==\", 1],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        checkServiceNowFields(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "66eda21a-a59e-4755-966b-903864466472",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 33,
                        "line_start": 16,
                        "name": "decision",
                        "notes": "",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "getTicketingOutputs:custom_function:servicenow",
                                        "value": "1"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 0,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "decision_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 133
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 6
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_6(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_6() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [\"getTicketingOutputs:custom_function:jira\", \"==\", 1],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        checkJira(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fcd7e532-8414-4060-8de7-9bf3698d0758",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 330,
                        "line_start": 313,
                        "name": "decision",
                        "notes": "",
                        "number": 6,
                        "order": 18,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "getTicketingOutputs:custom_function:jira",
                                        "value": "1"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 0,
                            "y": 320
                        },
                        "previous_function": "",
                        "previous_name": "decision_6",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 134
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 7
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_7(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_7() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [\"getTicketingOutputs:custom_function:email\", \"==\", 1],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        checkEmailFields(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "ac852e01-a15a-490a-8eed-d42ef1cc114f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 347,
                        "line_start": 330,
                        "name": "decision",
                        "notes": "",
                        "number": 7,
                        "order": 19,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "getTicketingOutputs:custom_function:email",
                                        "value": "1"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 0,
                            "y": 560
                        },
                        "previous_function": "",
                        "previous_name": "decision_7",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 135
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "getTicketingOutputs"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def getTicketingOutputs(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('getTicketingOutputs() called')\n    \n    input_parameter_0 = \"\"\n\n    getTicketingOutputs__getTicketingOutput = None\n    getTicketingOutputs__servicenow = None\n    getTicketingOutputs__jira = None\n    getTicketingOutputs__email = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    success, message, results = phantom.get_list(list_name=\"globalconfig\", values=\"ticketing\", trace=False)\n    phantom.debug('Printing success: {0}, message: {1}, results: {2}, '.format(success, message, results))\n    \n    ticketing_app = results['matches'][0]['value'][1]\n    if not \"servicenow\" or not \"jira\" or not \"email\" in ticketing_app:\n        getTicketOutput = \"badValue\"\n        phantom.debug('TicketingApp: BadValue - Check global config custom list')\n        return\n    \n    servicenow,email,jira = 0,0,0\n    \n    if \"servicenow\" in ticketing_app:\n        getTicketingOutputs__servicenow = 1\n    \n    if \"jira\" in ticketing_app:\n        getTicketingOutputs__jira = 1\n    \n    if \"email\" in ticketing_app:\n        getTicketingOutputs__email = 1\n    \n    #phantom.debug('Ticketing App set to: {}'.format(getTicketingOutputs__getTicketingOutput)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='getTicketingOutputs:getTicketingOutput', value=json.dumps(getTicketingOutputs__getTicketingOutput))\n    phantom.save_run_data(key='getTicketingOutputs:servicenow', value=json.dumps(getTicketingOutputs__servicenow))\n    phantom.save_run_data(key='getTicketingOutputs:jira', value=json.dumps(getTicketingOutputs__jira))\n    phantom.save_run_data(key='getTicketingOutputs:email', value=json.dumps(getTicketingOutputs__email))\n    decision_2(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "customCodeEndLineOffset": 10,
                        "customCodeStartLine": 13,
                        "custom_callback": "",
                        "custom_code": "def getTicketingOutputs(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('getTicketingOutputs() called')\n    input_parameter_0 = \"\"\n\n    getTicketingOutputs__getTicketingOutput = None\n    getTicketingOutputs__servicenow = None\n    getTicketingOutputs__jira = None\n    getTicketingOutputs__email = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    success, message, results = phantom.get_list(list_name=\"globalconfig\", values=\"ticketing\", trace=False)\n    phantom.debug('Printing success: {0}, message: {1}, results: {2}, '.format(success, message, results))\n    \n    ticketing_app = results['matches'][0]['value'][1]\n    if not \"servicenow\" or not \"jira\" or not \"email\" in ticketing_app:\n        getTicketOutput = \"badValue\"\n        phantom.debug('TicketingApp: BadValue - Check global config custom list')\n        return\n    \n    servicenow,email,jira = 0,0,0\n    \n    if \"servicenow\" in ticketing_app:\n        getTicketingOutputs__servicenow = 1\n    \n    if \"jira\" in ticketing_app:\n        getTicketingOutputs__jira = 1\n    \n    if \"email\" in ticketing_app:\n        getTicketingOutputs__email = 1\n    \n    #phantom.debug('Ticketing App set to: {}'.format(getTicketingOutputs__getTicketingOutput)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='getTicketingOutputs:getTicketingOutput', value=json.dumps(getTicketingOutputs__getTicketingOutput))\n    phantom.save_run_data(key='getTicketingOutputs:servicenow', value=json.dumps(getTicketingOutputs__servicenow))\n    phantom.save_run_data(key='getTicketingOutputs:jira', value=json.dumps(getTicketingOutputs__jira))\n    phantom.save_run_data(key='getTicketingOutputs:email', value=json.dumps(getTicketingOutputs__email))\n    decision_2(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "getTicketingOutputs",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b837c318-8d3d-4e44-bea9-82d6993d9d28",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 313,
                        "line_start": 264,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Parse the output options",
                        "number": 6,
                        "order": 17,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "getTicketingOutput"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "servicenow"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "jira"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "email"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -280,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "getTicketingOutputs",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    success, message, results = phantom.get_list(list_name=\"globalconfig\", values=\"ticketing\", trace=False)\n    phantom.debug('Printing success: {0}, message: {1}, results: {2}, '.format(success, message, results))\n    \n    ticketing_app = results['matches'][0]['value'][1]\n    if not \"servicenow\" or not \"jira\" or not \"email\" in ticketing_app:\n        getTicketOutput = \"badValue\"\n        phantom.debug('TicketingApp: BadValue - Check global config custom list')\n        return\n    \n    servicenow,email,jira = 0,0,0\n    \n    if \"servicenow\" in ticketing_app:\n        getTicketingOutputs__servicenow = 1\n    \n    if \"jira\" in ticketing_app:\n        getTicketingOutputs__jira = 1\n    \n    if \"email\" in ticketing_app:\n        getTicketingOutputs__email = 1\n    \n    #phantom.debug('Ticketing App set to: {}'.format(getTicketingOutputs__getTicketingOutput)\n",
                        "warn": false,
                        "z": 136
                    },
                    {
                        "action": "send email",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "attachments": "",
                            "bcc": "",
                            "body": "Phantom Handled the ticket",
                            "cc": "",
                            "from": "phantom@attackrange.local",
                            "headers": "",
                            "subject": "container:name",
                            "to": "deking@splunk.com"
                        },
                        "angle": 0,
                        "app": "SMTP",
                        "appid": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                        "approver": "",
                        "assets": [
                            {
                                "action": "send email",
                                "actions": [
                                    "test connectivity",
                                    "send email"
                                ],
                                "active": true,
                                "app_name": "SMTP",
                                "app_version": "1.2.49",
                                "appid": "45bb6f37-4478-499b-b4a3-51ecfa62b78c",
                                "asset_name": "smtp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "attachments": "",
                                    "bcc": "",
                                    "body": "Phantom Handled the ticket",
                                    "cc": "",
                                    "from": "phantom@attackrange.local",
                                    "headers": "",
                                    "subject": "container:name",
                                    "to": "deking@splunk.com"
                                },
                                "has_app": true,
                                "id": 17,
                                "loaded": false,
                                "missing": false,
                                "name": "smtp",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 0,
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_path": "action_result.parameter.attachments",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.bcc",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.body",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.cc",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.from",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.headers",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.subject",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_path": "action_result.parameter.to",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 1,
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "attachments": {
                                        "allow_list": true,
                                        "contains": [
                                            "vault id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Vault IDs of files to attach",
                                        "key": "attachments",
                                        "order": 6,
                                        "required": false,
                                        "verbose": "Each file that is required to be attached, needs to be in the vault. Multiple file vault ids can be specified as comma separated."
                                    },
                                    "bcc": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses to include on bcc line",
                                        "key": "bcc",
                                        "order": 3,
                                        "required": false
                                    },
                                    "body": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message body",
                                        "key": "body",
                                        "order": 5,
                                        "required": true
                                    },
                                    "cc": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses to include on cc line",
                                        "key": "cc",
                                        "order": 2,
                                        "required": false
                                    },
                                    "from": {
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "From field",
                                        "key": "from",
                                        "order": 0,
                                        "required": false
                                    },
                                    "headers": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Custom email headers (formatted as JSON)",
                                        "key": "headers",
                                        "order": 7,
                                        "required": false
                                    },
                                    "subject": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Message Subject",
                                        "key": "subject",
                                        "order": 4,
                                        "required": false
                                    },
                                    "to": {
                                        "allow_list": true,
                                        "contains": [
                                            "email"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "List of recipients email addresses",
                                        "key": "to",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "SMTP",
                                "product_vendor": "Generic",
                                "targets": "17",
                                "type": "email"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "send email"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def send_email_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('send_email_1() called')\n\n    name_value = container.get('name', None)\n\n    # collect data for 'send_email_1' call\n\n    parameters = []\n    \n    # build parameters list for 'send_email_1' call\n    parameters.append({\n        'cc': \"\",\n        'to': \"deking@splunk.com\",\n        'bcc': \"\",\n        'body': \"Phantom Handled the ticket\",\n        'from': \"phantom@attackrange.local\",\n        'headers': \"\",\n        'subject': name_value,\n        'attachments': \"\",\n    })\n\n    phantom.act(action=\"send email\", parameters=parameters, assets=['smtp'], callback=Email_Status_Message, name=\"send_email_1\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2d0944a2-ea9a-4314-802a-209221b58c6b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 189,
                        "line_start": 164,
                        "message": "Configuring now",
                        "name": "send email",
                        "notes": "",
                        "number": 1,
                        "order": 10,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 340,
                            "y": 560
                        },
                        "previous_function": "",
                        "previous_name": "send_email_1",
                        "required_params": {
                            "body": true,
                            "to": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 138
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "Email Status Message"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Email_Status_Message(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Email_Status_Message() called')\n    \n    template = \"\"\"Email Ticket Creation status : {0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"send_email_1:action_result.message\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"Email_Status_Message\")\n\n    add_comment_6(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "send email",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Email Status Message",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4c0c19a8-2344-47c0-aecb-23c20665853f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 246,
                        "line_start": 230,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Create status message for comment block",
                        "number": 3,
                        "order": 14,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "send_email_1:action_result.message"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 560,
                            "y": 560
                        },
                        "previous_function": "",
                        "previous_name": "Email_Status_Message",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Email Ticket Creation status : {0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 139
                    }
                ]
            },
            "notes": "getTicketingOptions, looks up the globalconfig custom list to discover which action(s) it should take."
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.3.51237"
    },
    "create_time": "2021-07-27T11:22:51.646647+00:00",
    "draft_mode": false,
    "labels": [
        "*"
    ],
    "tags": []
}