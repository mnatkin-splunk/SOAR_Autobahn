{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Proof of Value",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "\n",
            "description": "Investigate an AWS Security Hub finding related to an exposed EC2 instance which is being probed by potentially malicious traffic. Gather information about the EC2 configuration, the activity on the server, and any remote IP addresses that are directing traffic at the server. Notify and assign the appropriate people using a Jira ticket and a Slack message, then initiate a prompt to ask a responder whether or not the EC2 instance should be moved to an isolated EC2 Security Group using another playbook called \"EC2 Instance Isolation\".",
            "hash": "6a57bdc7019e6dcccf9d9739962a1c6fe62b4d85",
            "joint": {
                "cells": [
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "344a0391-6105-435c-83f7-8a810791ecfa",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "844771bb-5579-46bc-8ff7-5d5047d554a5",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "98a97e3f-6819-4af1-9eac-193fe4c97f25",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 99
                    },
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'decision_severity_threshold' block\n    decision_severity_threshold(container=container)\n\n    return\n",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "580fa01d-c99c-4e83-b160-3f909db60a41",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 16,
                        "line_start": 8,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -440,
                            "y": -60
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 300
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "624ce568-da12-4ddc-93c9-189c179fb7b5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3f99baf8-37f9-43d0-8bad-7254a2416f23",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "84aa979c-7950-4359-b23f-8962fe61fa9b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 482
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d9c31ba0-1f85-44b3-af90-16e180fc9912",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2d3591d7-a067-4192-9ce4-11444485fe9e",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2744bda5-5a00-44b8-9d27-a127fc199d7e",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 511
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "75326bcc-f5aa-4f3e-8916-975b05e6e6e0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1bd8023f-babe-467f-a4df-b149bd7b42f5",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a153c260-609e-4d62-82ee-1cf0594e2b84",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 758
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c5e83c95-7f3d-45de-86f1-5ebe28b68e60",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a153c260-609e-4d62-82ee-1cf0594e2b84",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9bccc737-f179-4d90-858a-247e4feb61b2",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 760
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return\n",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "CompleteTask, POV_get_current_task",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3afdb55d-6106-427d-8a12-50cc1b422752",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 690,
                        "line_start": 677,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 28,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1660,
                            "y": 740
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 765
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "38f6e39e-3192-4d4a-b2a5-ae34acb9214b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9bccc737-f179-4d90-858a-247e4feb61b2",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "556bbb74-4e9b-4d9b-93b3-3e43081955e3",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 773
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "1a28ed48-9182-4ab5-b226-95cdde9de70c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "461ee4a1-8716-4d85-9089-7d60e157b720",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3afdb55d-6106-427d-8a12-50cc1b422752",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 778
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "15922d05-41c6-40ea-ad94-e831e6d13789",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9bccc737-f179-4d90-858a-247e4feb61b2",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "eb7e89f6-d124-45de-b24a-b9a646bd12b6",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 819
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "4267f8c9-2f32-43d1-b526-654ce425b0b1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "eb7e89f6-d124-45de-b24a-b9a646bd12b6",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3afdb55d-6106-427d-8a12-50cc1b422752",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 821
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "007ae66b-f90a-408e-a423-9dcd97136ba3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "aa242239-192f-4bd1-8d0d-b0ec29a8a0bc",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4d297f4d-f81f-458d-addc-20c248e36671",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 824
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "cde4bd5d-10c4-4e41-a87f-df6a662b6e04",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4d297f4d-f81f-458d-addc-20c248e36671",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "461ee4a1-8716-4d85-9089-7d60e157b720",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 826
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e7b3e7db-d6be-4c3c-9cb0-e742948fc358",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "337df960-2caf-4067-8c3f-d5e521e0482d",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3f99baf8-37f9-43d0-8bad-7254a2416f23",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 861
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5dbe02d4-37d4-44b2-9ee6-d3952f9efb97",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3f99baf8-37f9-43d0-8bad-7254a2416f23",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1bd8023f-babe-467f-a4df-b149bd7b42f5",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 863
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "0a3d0b35-15f8-464c-aaf2-76538500faf1",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "556bbb74-4e9b-4d9b-93b3-3e43081955e3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f54b6426-0b05-4bdc-b7f1-cc6fcae716a9",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 864
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a97825da-b12d-4d6c-9921-40b4a8eab92c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f54b6426-0b05-4bdc-b7f1-cc6fcae716a9",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2d3591d7-a067-4192-9ce4-11444485fe9e",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 873
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 10
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def FunctionStatus(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('FunctionStatus() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"cf_local_POV_get_current_task_1:custom_function_result.data.status\", \"==\", \"failed\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        add_comment_11(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    TaskInprogress(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_get_current_task",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "FunctionStatus",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9bccc737-f179-4d90-858a-247e4feb61b2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 368,
                        "line_start": 347,
                        "name": "decision",
                        "notes": "Checks output from the Custom Function",
                        "number": 10,
                        "order": 15,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "cf_local_POV_get_current_task_1:custom_function_result.data.status",
                                        "value": "failed"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 360,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "FunctionStatus",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 875
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ed555f3b-84a4-4f56-9441-1055a40eb101",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f54b6426-0b05-4bdc-b7f1-cc6fcae716a9",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a2ca18c0-b637-437f-9045-e6a1b257d947",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 886
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "63fd9852-b874-43ae-913a-87964870314a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2744bda5-5a00-44b8-9d27-a127fc199d7e",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "40abd265-e9c4-4b32-91dc-daa0083ce121",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 889
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "606abbe7-7438-4e91-b275-fefba0352fa3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "40abd265-e9c4-4b32-91dc-daa0083ce121",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0a1668af-82f0-4e47-b0aa-c287a869e29b",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 894
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "GetAWSRegion"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def GetAWSRegion(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('GetAWSRegion() called')\n    \n    input_parameter_0 = \"\"\n\n    GetAWSRegion__awsRegion = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    success, message, results = phantom.get_list(list_name=\"globalconfig\", values=\"aws_region\", trace=False)\n    phantom.debug('Printing success: {0}, message: {1}, results: {2}, '.format(success, message, results))\n    \n    aws_region = results['matches'][0]['value'][1]\n    if not aws_region:\n        GetAWSRegion__awsRegion = \"badValue\"\n        phantom.debug('aws_region: BadValue - Check global config custom list')\n        return\n    \n    GetAWSRegion__awsRegion = aws_region\n    phantom.debug(GetAWSRegion__awsRegion)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='GetAWSRegion:awsRegion', value=json.dumps(GetAWSRegion__awsRegion))\n    filter_finding_artifact(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "TaskInprogress",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 10,
                        "custom_callback": "",
                        "custom_code": "def GetAWSRegion(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('GetAWSRegion() called')\n    input_parameter_0 = \"\"\n\n    GetAWSRegion__awsRegion = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    success, message, results = phantom.get_list(list_name=\"globalconfig\", values=\"aws_region\", trace=False)\n    phantom.debug('Printing success: {0}, message: {1}, results: {2}, '.format(success, message, results))\n    \n    aws_region = results['matches'][0]['value'][1]\n    if not aws_region:\n        GetAWSRegion__awsRegion = \"badValue\"\n        phantom.debug('aws_region: BadValue - Check global config custom list')\n        return\n    \n    GetAWSRegion__awsRegion = aws_region\n    phantom.debug(GetAWSRegion__awsRegion)\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='GetAWSRegion:awsRegion', value=json.dumps(GetAWSRegion__awsRegion))\n    build_finding_url(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "GetAWSRegion",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a2ca18c0-b637-437f-9045-e6a1b257d947",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 282,
                        "line_start": 250,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Lookup globalconfig custom list for the aws_region key",
                        "number": 7,
                        "order": 12,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "awsRegion"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 260,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "GetAWSRegion",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    success, message, results = phantom.get_list(list_name=\"globalconfig\", values=\"aws_region\", trace=False)\n    phantom.debug('Printing success: {0}, message: {1}, results: {2}, '.format(success, message, results))\n    \n    aws_region = results['matches'][0]['value'][1]\n    if not aws_region:\n        GetAWSRegion__awsRegion = \"badValue\"\n        phantom.debug('aws_region: BadValue - Check global config custom list')\n        return\n    \n    GetAWSRegion__awsRegion = aws_region\n    phantom.debug(GetAWSRegion__awsRegion)\n",
                        "warn": false,
                        "z": 897
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "60b87342-14ca-4ff8-b7fe-75aed17bb9e2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d6846575-d047-4578-bc8b-a253d3352fa4",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d6946ff3-cbb0-4d41-b235-82f5f7ec45f9",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 902
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3f82ce38-05d3-4a21-b532-6e9225ef3689",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c987c28f-7da0-40aa-bf36-a129998bb6fb",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2d69787e-416d-4cf1-ad86-9e6f5756da3a",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 907
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "50354a77-a647-4483-a417-865e67acdc48",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2744bda5-5a00-44b8-9d27-a127fc199d7e",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d6846575-d047-4578-bc8b-a253d3352fa4",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 914
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "12baf86d-8017-43dd-b803-bacba1e5d4d8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d6946ff3-cbb0-4d41-b235-82f5f7ec45f9",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c987c28f-7da0-40aa-bf36-a129998bb6fb",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 926
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "04b13c5e-de76-42fb-8d69-ee5344b9b2fa",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d6946ff3-cbb0-4d41-b235-82f5f7ec45f9",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "aa242239-192f-4bd1-8d0d-b0ec29a8a0bc",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 927
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "build finding url"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def build_finding_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('build_finding_url() called')\n    \n    GetAWSRegion__awsRegion = json.loads(phantom.get_run_data(key='GetAWSRegion:awsRegion'))\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_finding_artifact:condition_1:artifact:*.cef.Id'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    build_finding_url__finding_url = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # build a link to the Finding on Security Hub using a search as a URL parameter\n    base = \"https://console.aws.amazon.com/securityhub/home?region=\" + GetAWSRegion__awsRegion + \"#/findings?search=Id%3D%255Coperator%255C%253AEQUALS%255C%253A\"\n    build_finding_url__finding_url = base + filtered_artifacts_item_1_0[0].replace(':', '%253A').replace('/', '%252F')\n    phantom.debug(build_finding_url__finding_url)\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='build_finding_url:finding_url', value=json.dumps(build_finding_url__finding_url))\n    format_description(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "TaskInprogress",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 12,
                        "custom_callback": "",
                        "custom_code": "def build_finding_url(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None):\n    phantom.debug('build_finding_url() called')\n    GetAWSRegion__awsRegion = json.loads(phantom.get_run_data(key='GetAWSRegion:awsRegion'))\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_finding_artifact:condition_1:artifact:*.cef.Id'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    build_finding_url__finding_url = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # build a link to the Finding on Security Hub using a search as a URL parameter\n    base = \"https://console.aws.amazon.com/securityhub/home?region=\" + GetAWSRegion__awsRegion + \"#/findings?search=Id%3D%255Coperator%255C%253AEQUALS%255C%253A\"\n    build_finding_url__finding_url = base + filtered_artifacts_item_1_0[0].replace(':', '%253A').replace('/', '%252F')\n    phantom.debug(build_finding_url__finding_url)\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='build_finding_url:finding_url', value=json.dumps(build_finding_url__finding_url))\n    format_description(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "build finding url",
                        "description": "Use the Finding ID to construct a URL with a pre-populated SecurityHub search to view the Finding in the AWS Console.",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "844771bb-5579-46bc-8ff7-5d5047d554a5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 164,
                        "line_start": 138,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Use the Finding ID to construct a URL with a pre-populated SecurityHub search to view the Finding in the AWS Console.",
                        "number": 4,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "finding_url"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_finding_artifact:condition_1:artifact:*.cef.Id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "GetAWSRegion:custom_function:awsRegion"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 600,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "build_finding_url",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # build a link to the Finding on Security Hub using a search as a URL parameter\n    base = \"https://console.aws.amazon.com/securityhub/home?region=\" + GetAWSRegion__awsRegion + \"#/findings?search=Id%3D%255Coperator%255C%253AEQUALS%255C%253A\"\n    build_finding_url__finding_url = base + filtered_artifacts_item_1_0[0].replace(':', '%253A').replace('/', '%252F')\n    phantom.debug(build_finding_url__finding_url)\n",
                        "warn": false,
                        "z": 929
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f925b305-3f12-49a9-ab14-a5d88d5de9b3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a2ca18c0-b637-437f-9045-e6a1b257d947",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "161857f1-70f3-48c2-aa4c-95b576a1f73d",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 931
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "fe41ebe5-b912-4510-bddf-f5721a309bb3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "161857f1-70f3-48c2-aa4c-95b576a1f73d",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "844771bb-5579-46bc-8ff7-5d5047d554a5",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 932
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "pin",
                        "attrs": {
                            ".api": {
                                "text": "Parsing Failure"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def Parsing_Failure(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('Parsing_Failure() called')\n\n    phantom.pin(container=container, data=\"Failed\", message=\"Parsing Resource Artifacts\", pin_type=\"card\", pin_style=\"red\", name=None)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "key": "pin",
                                "pinData": "Failed",
                                "pinMessage": "Parsing Resource Artifacts",
                                "pinName": "",
                                "pinPinColor": "red",
                                "pinPinColor_display": "Red",
                                "pinPinType": "card",
                                "pinPinType_display": "card"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "Parsing Failure",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "84aa979c-7950-4359-b23f-8962fe61fa9b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 688,
                        "line_end": 228,
                        "line_start": 221,
                        "message": "Configuring now",
                        "name": "pin",
                        "notes": "Update Container HUD with Failure Message",
                        "number": 1,
                        "order": 10,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -120,
                            "y": 720
                        },
                        "previous_function": "",
                        "previous_name": "Parsing_Failure",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 935
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "2f2971a1-f252-46b2-bba6-8a1b2515f688",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "84aa979c-7950-4359-b23f-8962fe61fa9b",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3afdb55d-6106-427d-8a12-50cc1b422752",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 936
                    },
                    {
                        ".scmName/text": "local",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "POV_get_current_task"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def cf_local_POV_get_current_task_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_POV_get_current_task_1() called')\n    \n    custom_function_result_0 = phantom.collect2(container=container, datapath=['cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner'], action_results=results )\n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n\n    parameters = []\n\n    container_property_0_0 = [item[0] for item in container_property_0]\n    custom_function_result_0_0 = [item[0] for item in custom_function_result_0]\n\n    parameters.append({\n        'container': container_property_0_0,\n        'currentOwner': custom_function_result_0_0,\n    })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/POV_get_current_task\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/POV_get_current_task', parameters=parameters, name='cf_local_POV_get_current_task_1', callback=FunctionStatus)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "local/POV_get_current_task",
                        "cfInputs": {
                            "container": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "container_property_0_0",
                                "type": "list"
                            },
                            "currentOwner": {
                                "collectionType": "custom_function_result",
                                "dataPath": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner",
                                "paramName": "custom_function_result_0_0",
                                "type": "list"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "POV_set_event_owner_to_current",
                        "connection_type": "action",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 22,
                        "customFunction": "local/POV_get_current_task",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a153c260-609e-4d62-82ee-1cf0594e2b84",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 347,
                        "line_start": 313,
                        "message": "Configuring now",
                        "name": "POV_get_current_task",
                        "notes": "Gets the current and next task details",
                        "number": 1,
                        "order": 14,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 140,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_POV_get_current_task_1",
                        "selectedCustomFunction": {
                            "description": "Gets the current task in the phase, and returns the task_id, and current owner of the playbook",
                            "draftMode": false,
                            "id": 362,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "description": "",
                                    "id": 927,
                                    "input_type": "list",
                                    "name": "container",
                                    "placeholder": "container:id"
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "description": "",
                                    "id": 928,
                                    "input_type": "list",
                                    "name": "currentOwner",
                                    "placeholder": ""
                                }
                            ],
                            "name": "POV_get_current_task",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "task_body",
                                    "description": "",
                                    "id": 1197
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "task_id",
                                    "description": "",
                                    "id": 1198
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "next_playbook",
                                    "description": "",
                                    "id": 1199
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "workflow_task_url",
                                    "description": "",
                                    "id": 1200
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "status",
                                    "description": "",
                                    "id": 1201
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "message",
                                    "description": "",
                                    "id": 1202
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "task_name",
                                    "description": "Name of the Task in the workbook",
                                    "id": 1203
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "current_playbook_name",
                                    "description": "This Playbook Executing Now.",
                                    "id": 1204
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/POV_AddContext_LDAP",
                                        "draft_mode": false,
                                        "id": 832,
                                        "name": "POV_AddContext_LDAP",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Review_Indicators_Manually",
                                        "draft_mode": false,
                                        "id": 833,
                                        "name": "POV_Review_Indicators_Manually",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_Instance_Investigation",
                                        "draft_mode": false,
                                        "id": 898,
                                        "name": "POV_EC2_Instance_Investigation",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Hunt_Email_Indicators",
                                        "draft_mode": false,
                                        "id": 834,
                                        "name": "POV_Hunt_Email_Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Sinkhole_or_Block_External_Indicators",
                                        "draft_mode": false,
                                        "id": 873,
                                        "name": "POV_Sinkhole_or_Block_External_Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_malicious_insider_containment",
                                        "draft_mode": false,
                                        "id": 876,
                                        "name": "POV_malicious_insider_containment",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Accept_Event",
                                        "draft_mode": false,
                                        "id": 880,
                                        "name": "POV_Accept_Event",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/Sinkhole or Block external indicators of compromise",
                                        "draft_mode": false,
                                        "id": 820,
                                        "name": "Sinkhole or Block external indicators of compromise",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/Hunt Indicators",
                                        "draft_mode": false,
                                        "id": 765,
                                        "name": "Hunt Indicators",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...\n",
                        "warn": false,
                        "z": 944
                    },
                    {
                        ".scmName/text": "local",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "POV_set_event_owner_to..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_local_POV_set_event_owner_to_current_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_POV_set_event_owner_to_current_1() called')\n    \n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n\n    parameters = []\n\n    container_property_0_0 = [item[0] for item in container_property_0]\n\n    parameters.append({\n        'container': container_property_0_0,\n    })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/POV_set_event_owner_to_current\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/POV_set_event_owner_to_current', parameters=parameters, name='cf_local_POV_set_event_owner_to_current_1', callback=cf_local_POV_get_current_task_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "local/POV_set_event_owner_to_current",
                        "cfInputs": {
                            "container": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "container_property_0_0",
                                "type": "list"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "container-0": "container:id",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 19,
                        "customFunction": "local/POV_set_event_owner_to_current",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1bd8023f-babe-467f-a4df-b149bd7b42f5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 313,
                        "line_start": 282,
                        "message": "Configuring now",
                        "name": "POV_set_event_owner_to_current",
                        "notes": "",
                        "number": 1,
                        "order": 13,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -80,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_POV_set_event_owner_to_current_1",
                        "selectedCustomFunction": {
                            "description": "Grabs the user running the playbook and sets the owner of the event to the current user. Passes current_owner out for downstream use.\n\nDerek King  - Splunk",
                            "draftMode": false,
                            "id": 291,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "phantom container id"
                                    ],
                                    "custom_function": 291,
                                    "description": "Container id",
                                    "id": 667,
                                    "input_type": "list",
                                    "name": "container",
                                    "placeholder": "id"
                                }
                            ],
                            "name": "POV_set_event_owner_to_current",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "currentOwner",
                                    "description": "Current owner running the playbook",
                                    "id": 1089
                                },
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "userUrl",
                                    "description": "",
                                    "id": 1090
                                },
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "status",
                                    "description": "",
                                    "id": 1091
                                },
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "message",
                                    "description": "",
                                    "id": 1092
                                },
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "username",
                                    "description": "",
                                    "id": 1093
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/Sinkhole or Block external indicators of compromise",
                                        "draft_mode": false,
                                        "id": 820,
                                        "name": "Sinkhole or Block external indicators of compromise",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Sinkhole_or_Block_External_Indicators",
                                        "draft_mode": false,
                                        "id": 873,
                                        "name": "POV_Sinkhole_or_Block_External_Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_malicious_insider_containment",
                                        "draft_mode": false,
                                        "id": 876,
                                        "name": "POV_malicious_insider_containment",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Accept_Event",
                                        "draft_mode": false,
                                        "id": 880,
                                        "name": "POV_Accept_Event",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_AddContext_LDAP",
                                        "draft_mode": false,
                                        "id": 832,
                                        "name": "POV_AddContext_LDAP",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Review_Indicators_Manually",
                                        "draft_mode": false,
                                        "id": 833,
                                        "name": "POV_Review_Indicators_Manually",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Hunt_Email_Indicators",
                                        "draft_mode": false,
                                        "id": 834,
                                        "name": "POV_Hunt_Email_Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/AAA2",
                                        "draft_mode": false,
                                        "id": 565,
                                        "name": "AAA2",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/Hunt Indicators",
                                        "draft_mode": false,
                                        "id": 765,
                                        "name": "Hunt Indicators",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...\n",
                        "warn": false,
                        "z": 946
                    },
                    {
                        "action": "describe instance",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "dry_run": "",
                            "filters": "",
                            "instance_ids": "filtered-data:filter_resource_artifact:condition_1:artifact:*.cef.InstanceId",
                            "limit": "",
                            "max_results": "",
                            "next_token": ""
                        },
                        "angle": 0,
                        "app": "AWS EC2",
                        "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "describe instance",
                                "actions": [
                                    "list autoscaling groups",
                                    "list network interfaces",
                                    "create vpc",
                                    "remove instance",
                                    "assign instance",
                                    "list security groups",
                                    "remove acl",
                                    "add acl",
                                    "get acls",
                                    "remove tag",
                                    "add tag",
                                    "snapshot instance",
                                    "deregister instance",
                                    "attach instance",
                                    "detach instance",
                                    "describe instance",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS EC2",
                                "app_version": "1.0.2",
                                "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                                "asset_name": "matt aws ec2 us east 1",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "dry_run": "",
                                    "filters": "",
                                    "instance_ids": "filtered-data:filter_resource_artifact:condition_1:artifact:*.cef.InstanceId",
                                    "limit": ""
                                },
                                "has_app": true,
                                "id": 7,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_ec2",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.dry_run",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.filters",
                                        "data_type": "string",
                                        "example_values": [
                                            "{ \"Name\": \"vpc-id\", \"Values\": [ \"vpc-0840e9850b3f02915\"]}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.parameter.instance_ids",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            35
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_path": "action_result.data.*.NextToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "eyJ2IjoiMiIsImMiOiJxTVBvSm9GZmpOVFhrc2RYL0RDK3htaytZR0luRDhuTWR6SnN6VWNHcStSWGRwWTJ2cWtxZlBUWjY1QjJ3VzZRNlFqRkZaUzVrRDQ2V1lzTVpsY2dPSS9mVWNqVlVIbCtpaHV6b1dybnJWbXoxclp0T25YR3NvWVJRQkFuamhqaDlEN2o2dEtvcjB6bDBoeVo3clB2eGZOUlZxQUYzdWo5WnJKbTRRSmZqbHQzS0h1REhkWFI1Q1VmZnRLU2k2RkxhTkhaaUVkbXNPUlMwYnNYbkhVSHEwT0x1SmhEb2thTkc3R0tORkhaeWtIZCIsInMiOiIxIn0="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.AmiLaunchIndex",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Architecture",
                                        "data_type": "string",
                                        "example_values": [
                                            "x86_64"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.DeviceName",
                                        "data_type": "string",
                                        "example_values": [
                                            "/dev/xvda"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.AttachTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:22"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.DeleteOnTermination",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "attached"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.VolumeId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vol-0d8d4d266ac6ea76f"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CapacityReservationSpecification.CapacityReservationPreference",
                                        "data_type": "string",
                                        "example_values": [
                                            "open"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ClientToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "155010001974811618"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CpuOptions.CoreCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CpuOptions.ThreadsPerCore",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.EbsOptimized",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.EnaSupport",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.HibernationOptions.Configured",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Hypervisor",
                                        "data_type": "string",
                                        "example_values": [
                                            "xen"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.IamInstanceProfile.Arn",
                                        "data_type": "string",
                                        "example_values": [
                                            "arn:aws:iam::849257271967:instance-profile/test-1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.IamInstanceProfile.Id",
                                        "data_type": "string",
                                        "example_values": [
                                            "AIPAJBUYA2ZYFKHJ7WJJ4"
                                        ]
                                    },
                                    {
                                        "contanis": [
                                            "aws ec2 ami id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ImageId",
                                        "data_type": "string",
                                        "example_values": [
                                            "ami-061573a27231c6d25"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.InstanceId",
                                        "data_type": "string",
                                        "example_values": [
                                            "i-074f52e85356829a3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.InstanceType",
                                        "data_type": "string",
                                        "example_values": [
                                            "t2.medium"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.KeyName",
                                        "data_type": "string",
                                        "example_values": [
                                            "test-lab-ssh-keypair"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.LaunchTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Monitoring.State",
                                        "data_type": "string",
                                        "example_values": [
                                            "disabled"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.IpOwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "amazon"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.AttachTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.AttachmentId",
                                        "data_type": "string",
                                        "example_values": [
                                            "eni-attach-06d2e082fd98083ca"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.DeleteOnTermination",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.DeviceIndex",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "attached"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Description",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-07987bf5b796b5261"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Enterprise-7-2-0-AutogenByAWSMP-4"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.MacAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "12:1d:c2:5a:82:e6"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.NetworkInterfaceId",
                                        "data_type": "string",
                                        "example_values": [
                                            "eni-09579cbf4e49f8f65"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.IpOwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "amazon"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.PublicIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Primary",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.SourceDestCheck",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "in-use"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.SubnetId",
                                        "data_type": "string",
                                        "example_values": [
                                            "subnet-d8782cf7"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.AvailabilityZone",
                                        "data_type": "string",
                                        "example_values": [
                                            "us-east-1d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.Tenancy",
                                        "data_type": "string",
                                        "example_values": [
                                            "default"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Platform",
                                        "data_type": "string",
                                        "example_values": [
                                            "windows"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ProductCodes.*.ProductCodeId",
                                        "data_type": "string",
                                        "example_values": [
                                            "7azvchdfh74dcxoiwjhztgpel"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ProductCodes.*.ProductCodeType",
                                        "data_type": "string",
                                        "example_values": [
                                            "marketplace"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PublicIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.RootDeviceName",
                                        "data_type": "string",
                                        "example_values": [
                                            "/dev/xvda"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.RootDeviceType",
                                        "data_type": "string",
                                        "example_values": [
                                            "ebs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-07987bf5b796b5261"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Enterprise-7-2-0-AutogenByAWSMP-4"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SourceDestCheck",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.State.Code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            16
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.State.Name",
                                        "data_type": "string",
                                        "example_values": [
                                            "running"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateReason.Code",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateReason.Message",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateTransitionReason",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SubnetId",
                                        "data_type": "string",
                                        "example_values": [
                                            "subnet-d8782cf7"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.VirtualizationType",
                                        "data_type": "string",
                                        "example_values": [
                                            "hvm"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.RequesterId",
                                        "data_type": "string",
                                        "example_values": [
                                            "086189789714"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.ReservationId",
                                        "data_type": "string",
                                        "example_values": [
                                            "r-05ef1ae0985a72df5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "230"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "text/xml;charset=UTF-8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Wed, 27 Feb 2019 18:39:01 GMT",
                                            "Wed, 27 Feb 2019 18:40:25 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "AmazonEC2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.transfer-encoding",
                                        "data_type": "string",
                                        "example_values": [
                                            "chunked"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.vary",
                                        "data_type": "string",
                                        "example_values": [
                                            "Accept-Encoding"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "146815a0-5918-4305-8a77-540704c88939",
                                            "15f53d9a-179e-4402-8acb-be5787f6d0cf"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.num_instances",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            3
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Num instances: 0",
                                            "Num instances: 3"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "dry_run": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Check if asset has required permissions for the action",
                                        "key": "dry_run",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "filters": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more filters, separated by commas. Example: { 'Name': 'name1', 'Values': [ 'value1' ] }, { 'Name': 'name2', 'Values': [ 'value2' ] }",
                                        "key": "filters",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "instance_ids": {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more instance IDs, separated by commas",
                                        "key": "instance_ids",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    },
                                    "max_results": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Maximum number of results to return in a single call",
                                        "key": "max_results",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "next_token": {
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Token to request the next page of results",
                                        "key": "next_token",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "EC2",
                                "product_vendor": "AWS",
                                "targets": "7",
                                "type": "virtualization"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "describe ec2 instance"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def describe_ec2_instance(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('describe_ec2_instance() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'describe_ec2_instance' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_resource_artifact:condition_1:artifact:*.cef.InstanceId', 'filtered-data:filter_resource_artifact:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'describe_ec2_instance' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        parameters.append({\n            'limit': \"\",\n            'dry_run': \"\",\n            'filters': \"\",\n            'instance_ids': filtered_artifacts_item_1[0],\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': filtered_artifacts_item_1[1]},\n        })\n\n    phantom.act(action=\"describe instance\", parameters=parameters, assets=['aws_ec2'], callback=DescribeStatus, name=\"describe_ec2_instance\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 42,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "TaskInprogress",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "describe ec2 instance",
                        "delay": 0,
                        "description": "Gather metadata about the EC2 instance in the Finding.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2d3591d7-a067-4192-9ce4-11444485fe9e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 51,
                        "line_end": 44,
                        "line_start": 19,
                        "message": "Configuring now",
                        "name": "describe instance",
                        "notes": "Gather metadata about the EC2 instance in the Finding.",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 260,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "describe_ec2_instance",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 954
                    },
                    {
                        "action": "list security groups",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "dry_run": "",
                            "filters": "",
                            "group_ids": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                            "group_names": "",
                            "max_results": "",
                            "next_token": ""
                        },
                        "angle": 0,
                        "app": "AWS EC2",
                        "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "list security groups",
                                "actions": [
                                    "list autoscaling groups",
                                    "list network interfaces",
                                    "create vpc",
                                    "remove instance",
                                    "assign instance",
                                    "list security groups",
                                    "remove acl",
                                    "add acl",
                                    "get acls",
                                    "remove tag",
                                    "add tag",
                                    "get tag",
                                    "snapshot instance",
                                    "deregister instance",
                                    "attach instance",
                                    "detach instance",
                                    "describe instance",
                                    "stop instance",
                                    "start instance",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS EC2",
                                "app_version": "1.0.3",
                                "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                                "asset_name": "matt aws ec2 us east 1",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "dry_run": "",
                                    "filters": "",
                                    "group_ids": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                                    "group_names": "",
                                    "max_results": "",
                                    "next_token": ""
                                },
                                "has_app": true,
                                "id": 7,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_ec2",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.dry_run",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.filters",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_path": "action_result.parameter.group_ids",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 group name"
                                        ],
                                        "data_path": "action_result.parameter.group_names",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.max_results",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_path": "action_result.parameter.next_token",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Next Page Token",
                                        "column_order": 4,
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_path": "action_result.data.*.NextToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "eyJ2IjoiMiIsImMiOiJxTVBvSm9GZmpOVFhrc2RYL0RDK3htaytZR0luRDhuTWR6SnN6VWNHcStSWGRwWTJ2cWtxZlBUWjY1QjJ3VzZRNlFqRkZaUzVrRDQ2V1lzTVpsY2dPSS9mVWNqVlVIbCtpaHV6b1dybnJWbXoxclp0T25YR3NvWVJRQkFuamhqaDlEN2o2dEtvcjB6bDBoeVo3clB2eGZOUlZxQUYzdWo5WnJKbTRRSmZqbHQzS0h1REhkWFI1Q1VmZnRLU2k2RkxhTkhaaUVkbXNPUlMwYnNYbkhVSHEwT0x1SmhEb2thTkc3R0tORkhaeWtIZCIsInMiOiIxIn0="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "'2719'"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "text/xml;charset=UTF-8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Tue, 09 Apr 2019 05:51:50 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "AmazonEC2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.transfer-encoding",
                                        "data_type": "string",
                                        "example_values": [
                                            "chunked"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.vary",
                                        "data_type": "string",
                                        "example_values": [
                                            "accept-encoding"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "151cefc2-6f16-4949-b345-2ae3e2d6a02e"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.Description",
                                        "data_type": "string",
                                        "example_values": [
                                            "SG for minemeld"
                                        ]
                                    },
                                    {
                                        "column_name": "Group ID",
                                        "column_order": 1,
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_path": "action_result.data.*.SecurityGroups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-0050f8ec5ea7b73e0"
                                        ]
                                    },
                                    {
                                        "column_name": "Group Name",
                                        "column_order": 0,
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.SecurityGroups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "minemeld-SGMinemeld-1PU2N2REVCWEB"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.FromPort",
                                        "data_type": "numeric",
                                        "example_values": [
                                            22
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.IpProtocol",
                                        "data_type": "string",
                                        "example_values": [
                                            "tcp"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.IpRanges.*.CidrIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "0.0.0.0/0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.IpRanges.*.Description",
                                        "data_type": "string",
                                        "example_values": [
                                            "splunk"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.Ipv6Ranges.*.CidrIpv6",
                                        "data_type": "string",
                                        "example_values": [
                                            "::/0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.Ipv6Ranges.*.Description",
                                        "data_type": "string",
                                        "example_values": [
                                            "splunk"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.ToPort",
                                        "data_type": "numeric",
                                        "example_values": [
                                            22
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.UserIdGroupPairs.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-04c191ec3ad281c4d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissions.*.UserIdGroupPairs.*.UserId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissionsEgress.*.IpProtocol",
                                        "data_type": "string",
                                        "example_values": [
                                            "-1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissionsEgress.*.IpRanges.*.CidrIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "0.0.0.0/0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissionsEgress.*.Ipv6Ranges.*.CidrIpv6",
                                        "data_type": "string",
                                        "example_values": [
                                            "::/0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissionsEgress.*.UserIdGroupPairs.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-0c95f4c3e04a5ed2f"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.IpPermissionsEgress.*.UserIdGroupPairs.*.UserId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "column_name": "Owner",
                                        "column_order": 3,
                                        "data_path": "action_result.data.*.SecurityGroups.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.Tags.*.Key",
                                        "data_type": "string",
                                        "example_values": [
                                            "aws:cloudformation:stack-id"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.SecurityGroups.*.Tags.*.Value",
                                        "data_type": "string",
                                        "example_values": [
                                            "arn:aws:cloudformation:us-east-1:849257271967:stack/minemeld/766407e0-3b8f-11e9-92b4-128fc503e968"
                                        ]
                                    },
                                    {
                                        "column_name": "VPC ID",
                                        "column_order": 2,
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.SecurityGroups.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.num_security_groups",
                                        "data_type": "numeric",
                                        "example_values": [
                                            37
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Num security groups: 37"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "dry_run": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Check if asset has required permissions for the action",
                                        "key": "dry_run",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "filters": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more filters in dictionary format, separated by commas. Example: { 'Name': 'string', 'Values': [ 'string' ]}",
                                        "key": "filters",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "group_ids": {
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more security group IDs, separated by commas. Required for security groups in a non-default VPC",
                                        "key": "group_ids",
                                        "order": 2,
                                        "primary": true,
                                        "required": false
                                    },
                                    "group_names": {
                                        "contains": [
                                            "aws ec2 group name"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more security group names, separated by commas",
                                        "key": "group_names",
                                        "order": 3,
                                        "primary": true,
                                        "required": false
                                    },
                                    "max_results": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Maximum number of results to return in a single call",
                                        "key": "max_results",
                                        "order": 5,
                                        "primary": false,
                                        "required": false
                                    },
                                    "next_token": {
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The token to request the next page of results",
                                        "key": "next_token",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "EC2",
                                "product_vendor": "AWS",
                                "targets": "7",
                                "type": "virtualization"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "list security groups"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def list_security_groups_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('list_security_groups_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'list_security_groups_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId', 'describe_ec2_instance:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'list_security_groups_1' call\n    for results_item_1 in results_data_1:\n        parameters.append({\n            'dry_run': \"\",\n            'filters': \"\",\n            'group_ids': results_item_1[0],\n            'next_token': \"\",\n            'group_names': \"\",\n            'max_results': \"\",\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': results_item_1[1]},\n        })\n\n    phantom.act(action=\"list security groups\", parameters=parameters, assets=['aws_ec2'], callback=decision_11, name=\"list_security_groups_1\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "List the security groups that the EC2 instance belongs to. This should show the potentially vulnerable configuration described by the Finding.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d6846575-d047-4578-bc8b-a253d3352fa4",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 241,
                        "line_end": 194,
                        "line_start": 167,
                        "message": "Configuring now",
                        "name": "list security groups",
                        "notes": "List the security groups that the EC2 instance belongs to. This should show the potentially vulnerable configuration described by the Finding.",
                        "number": 1,
                        "order": 8,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 560,
                            "y": 500
                        },
                        "previous_function": "",
                        "previous_name": "list_security_groups_1",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 956
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def filter_finding_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_finding_artifact() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.name\", \"==\", \"Finding Artifact\"],\n        ],\n        name=\"filter_finding_artifact:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        build_finding_url(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": false,
                        "connection_name": "TaskInprogress",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "filter_finding_artifact",
                        "description": "Separate the main Finding artifact from the other artifacts in the Finding.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "161857f1-70f3-48c2-aa4c-95b576a1f73d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 112,
                        "line_start": 94,
                        "name": "filter",
                        "notes": "Separate the main Finding artifact from the other artifacts in the Finding.",
                        "number": 2,
                        "order": 5,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.name",
                                        "value": "Finding Artifact"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 480,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "filter_finding_artifact",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 987
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 9
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def DescribeStatus(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('DescribeStatus() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"describe_ec2_instance:action_result.status\", \"!=\", \"success\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        DescribeFailedMessage(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    list_security_groups_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    PublicDNSName(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "DescribeStatus",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2744bda5-5a00-44b8-9d27-a127fc199d7e",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 250,
                        "line_start": 228,
                        "name": "decision",
                        "notes": "Checks the status of the describe instance action",
                        "number": 9,
                        "order": 11,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "describe_ec2_instance:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 480,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "DescribeStatus",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 1016
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a388134e-0420-43ad-80b6-f983f84e585b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "46a24343-d04b-46c5-b5c8-533cbea58d85",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3d52672e-46a1-480e-ba51-ac2109cea6e9",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1045
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "329a1cbb-dfc7-4b08-9d9c-cccb79a5db83",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "580fa01d-c99c-4e83-b160-3f909db60a41",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "337df960-2caf-4067-8c3f-d5e521e0482d",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1047
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5a6cbcdc-4547-4be7-aa48-f42df20a37ca",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2744bda5-5a00-44b8-9d27-a127fc199d7e",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "46a24343-d04b-46c5-b5c8-533cbea58d85",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 1048
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "PublicDNSName"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def PublicDNSName(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('PublicDNSName() called')\n    \n    results_data_1 = phantom.collect2(container=container, datapath=['describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    PublicDNSName__publicDNS = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    phantom.debug('results data 1: {}'.format(results_item_1_0[0]))\n    PublicDNSName__publicDNS = '{\"cef\": {\"PublicDNSName\": \"' + results_item_1_0[0] + '\"}}'\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='PublicDNSName:publicDNS', value=json.dumps(PublicDNSName__publicDNS))\n    updateResourceArtefact(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def PublicDNSName(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('custom_function_10() called')\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName'], action_results=results)\n    results_item_1_0 = [item[0] for item in results_data_1]\n\n    PublicDNSName__publicDNS = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    phantom.debug('results data 1: {}'.format(results_item_1_0[0]))\n    PublicDNSName__publicDNS = '{\"cef\": {\"PublicDNSName\": \"' + results_item_1_0[0] + '\"}}'\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='custom_function_10:new_dict', value=json.dumps(PublicDNSName__publicDNS))\n    update_artifact_fields_3(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "PublicDNSName",
                        "description": "Create a dict with the Public DNS Name to add to the resource artefact",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "46a24343-d04b-46c5-b5c8-533cbea58d85",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 677,
                        "line_start": 648,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Create a dict with the Public DNS Name to add to the resource artefact",
                        "number": 10,
                        "order": 27,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "publicDNS"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 560,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "PublicDNSName",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    phantom.debug('results data 1: {}'.format(results_item_1_0[0]))\n    PublicDNSName__publicDNS = '{\"cef\": {\"PublicDNSName\": \"' + results_item_1_0[0] + '\"}}'\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n    ################################################################################\n",
                        "warn": false,
                        "z": 1058
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 11
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_11(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_11() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"list_security_groups_1:action_result.status\", \"==\", \"success\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        CreateGeneralNote(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    ListGroupsFailedMessage(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "list security groups",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d6946ff3-cbb0-4d41-b235-82f5f7ec45f9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 569,
                        "line_start": 548,
                        "name": "decision",
                        "notes": "",
                        "number": 11,
                        "order": 23,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "list_security_groups_1:action_result.status",
                                        "value": "success"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 780,
                            "y": 500
                        },
                        "previous_function": "",
                        "previous_name": "decision_11",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 1061
                    },
                    {
                        "action": "update artifact fields",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "filtered-data:filter_resource_artifact:condition_1:artifact:*.id",
                            "data": "PublicDNSName:custom_function:publicDNS",
                            "overwrite": ""
                        },
                        "angle": 0,
                        "app": "",
                        "appid": "",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact fields",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "filtered-data:filter_resource_artifact:condition_1:artifact:*.id",
                                    "data": "PublicDNSName:custom_function:publicDNS",
                                    "overwrite": ""
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "artifact_id",
                                        "key": "artifact_id",
                                        "primary": true,
                                        "required": true
                                    },
                                    "data": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "update data (json formatted)",
                                        "key": "data",
                                        "required": true
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "overwrite existing",
                                        "key": "overwrite",
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "updateResourceArtefact"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def updateResourceArtefact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('updateResourceArtefact() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    PublicDNSName__publicDNS = json.loads(phantom.get_run_data(key='PublicDNSName:publicDNS'))\n    # collect data for 'updateResourceArtefact' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_resource_artifact:condition_1:artifact:*.id', 'filtered-data:filter_resource_artifact:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'updateResourceArtefact' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        if filtered_artifacts_item_1[0]:\n            parameters.append({\n                'data': PublicDNSName__publicDNS,\n                'overwrite': \"\",\n                'artifact_id': filtered_artifacts_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': filtered_artifacts_item_1[1]},\n            })\n\n    phantom.act(action=\"update artifact fields\", parameters=parameters, assets=['phantomapp'], name=\"updateResourceArtefact\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "updateResourceArtefact",
                        "delay": 0,
                        "description": "Update the resource artefact with the public DNS Name (used in investigation playbook downstream)",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3d52672e-46a1-480e-ba51-ac2109cea6e9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 698,
                        "line_end": 645,
                        "line_start": 619,
                        "message": "Configuring now",
                        "name": "update artifact fields",
                        "notes": "Update the resource artefact with the public DNS Name (used in investigation playbook downstream)",
                        "number": 3,
                        "order": 26,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 900,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "updateResourceArtefact",
                        "required_params": {
                            "artifact_id": true,
                            "data": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1062
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def filter_resource_artifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_resource_artifact() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.name\", \"==\", \"AwsEc2Instance Resource Artifact\"],\n        ],\n        name=\"filter_resource_artifact:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        describe_ec2_instance(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n        GetAWSRegion(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "TaskInprogress",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "filter_resource_artifact",
                        "description": "Separate the EC2 resource from the other artifacts in the Finding.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f54b6426-0b05-4bdc-b7f1-cc6fcae716a9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 91,
                        "line_start": 72,
                        "name": "filter",
                        "notes": "Separate the EC2 resource from the other artifacts in the Finding.",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.name",
                                        "value": "AwsEc2Instance Resource Artifact"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 140,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "filter_resource_artifact",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 1067
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "DescribeFailedMessage"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def DescribeFailedMessage(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('DescribeFailedMessage() called')\n    \n    template = \"\"\"Describe ec2 Instance action status: {0}\n\nFailure Message :  {1}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"describe_ec2_instance:action_result.status\",\n        \"describe_ec2_instance:action_result.message\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"DescribeFailedMessage\")\n\n    AddTaskNoteDescribeFailed(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "DescribeFailedMessage",
                        "description": "Create a formatted note",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "40abd265-e9c4-4b32-91dc-daa0083ce121",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 519,
                        "line_start": 500,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Create a Note to add to the task.",
                        "number": 6,
                        "order": 21,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "describe_ec2_instance:action_result.status"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "describe_ec2_instance:action_result.message"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 900,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "DescribeFailedMessage",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Describe ec2 Instance action status: {0}\n\nFailure Message :  {1}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1071
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format description"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_description(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_description() called')\n    \n    template = \"\"\"Phantom received a Security Hub Finding with the following details:\n\nFinding title: {0}\nFinding description: {1}\nPhantom Mission Control link: {2}\nAWS Security Hub Finding link: {3}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"container:name\",\n        \"container:description\",\n        \"container:url\",\n        \"build_finding_url:custom_function:finding_url\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_description\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "TaskInprogress",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format description",
                        "description": "Put together the relevant links, title, and description for the Finding to present to an analyst in both a ticket and a chat message.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "98a97e3f-6819-4af1-9eac-193fe4c97f25",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 122,
                        "line_end": 69,
                        "line_start": 47,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Put together the relevant links, title, and description for the Finding to present to an analyst in both a ticket and a chat message.",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "container:name"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "container:description"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "container:url"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "build_finding_url:custom_function:finding_url"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 900,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "format_description",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Phantom received a Security Hub Finding with the following details:\n\nFinding title: {0}\nFinding description: {1}\nPhantom Mission Control link: {2}\nAWS Security Hub Finding link: {3}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1072
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "add comment"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_comment_11(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_comment_11() called')\n\n    phantom.comment(container=container, comment=\"Unable to get the current task id\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "Unable to get the current task id",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "POV_get_current_task",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "eb7e89f6-d124-45de-b24a-b9a646bd12b6",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 484,
                        "line_start": 477,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "",
                        "number": 11,
                        "order": 19,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1340,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "add_comment_11",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 1078
                    },
                    {
                        "action": "update task",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "container_id": "",
                            "note": "ListGroupsFailedMessage:formatted_data",
                            "note_title": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                            "phase_name": "",
                            "role_id": "",
                            "status": "",
                            "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                            "task_name": "",
                            "user": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update task",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "container_id": "",
                                    "note": "ListGroupsFailedMessage:formatted_data",
                                    "note_title": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                                    "phase_name": "",
                                    "role_id": "",
                                    "status": "",
                                    "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                                    "task_name": "",
                                    "user": ""
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note_title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.phase_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.role_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "container_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Container ID (current container if blank)",
                                        "key": "container_id",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task note",
                                        "key": "note",
                                        "order": 6,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note_title": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Note title",
                                        "key": "note_title",
                                        "order": 7,
                                        "primary": false,
                                        "required": false
                                    },
                                    "phase_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Phase name",
                                        "key": "phase_name",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "role_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task assignee (role)",
                                        "key": "role_id",
                                        "order": 5,
                                        "primary": false,
                                        "required": false
                                    },
                                    "status": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task status",
                                        "key": "status",
                                        "order": 4,
                                        "primary": false,
                                        "required": false,
                                        "value_list": [
                                            "incomplete",
                                            "in progress",
                                            "complete"
                                        ]
                                    },
                                    "task_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task ID",
                                        "key": "task_id",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "task_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task name",
                                        "key": "task_name",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "user": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task assignee (username or user id)",
                                        "key": "user",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "AddTaskNoteListFailed"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def AddTaskNoteListFailed(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('AddTaskNoteListFailed() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'AddTaskNoteListFailed' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_POV_get_current_task_1:custom_function_result.data.task_id', 'cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name'], action_results=results)\n    formatted_data_1 = phantom.get_format_data(name='ListGroupsFailedMessage')\n\n    parameters = []\n    \n    # build parameters list for 'AddTaskNoteListFailed' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        parameters.append({\n            'note': formatted_data_1,\n            'user': \"\",\n            'status': \"\",\n            'role_id': \"\",\n            'task_id': custom_function_results_item_1[0],\n            'task_name': \"\",\n            'note_title': custom_function_results_item_1[1],\n            'phase_name': \"\",\n            'container_id': \"\",\n        })\n\n    phantom.act(action=\"update task\", parameters=parameters, assets=['phantomapp'], name=\"AddTaskNoteListFailed\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "list security groups",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "AddTaskNoteListFailed",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2d69787e-416d-4cf1-ad86-9e6f5756da3a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 616,
                        "line_start": 587,
                        "message": "Configuring now",
                        "name": "update task",
                        "notes": "Add task note",
                        "number": 5,
                        "order": 25,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1120,
                            "y": 620
                        },
                        "previous_function": "",
                        "previous_name": "AddTaskNoteListFailed",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1079
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "ListGroupsFailedMessage"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def ListGroupsFailedMessage(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('ListGroupsFailedMessage() called')\n    \n    template = \"\"\"List Security Groups action status: {0}\nFailure Message :  {1}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"list_security_groups_1:action_result.status\",\n        \"list_security_groups_1:action_result.message\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"ListGroupsFailedMessage\")\n\n    AddTaskNoteListFailed(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "list security groups",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "ListGroupsFailedMessage",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c987c28f-7da0-40aa-bf36-a129998bb6fb",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 587,
                        "line_start": 569,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Create a note to add to the task",
                        "number": 7,
                        "order": 24,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "list_security_groups_1:action_result.status"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "list_security_groups_1:action_result.message"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 900,
                            "y": 620
                        },
                        "previous_function": "",
                        "previous_name": "ListGroupsFailedMessage",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "List Security Groups action status: {0}\nFailure Message :  {1}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1080
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def decision_ec2_resource(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_ec2_resource() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [\"artifact:*.name\", \"==\", \"AwsEc2Instance Resource Artifact\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        cf_local_POV_set_event_owner_to_current_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    Parsing_Failure(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "decision_ec2_resource",
                        "description": "Only proceed if there is an EC2 Resource contained in the SecurityHub Finding.",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3f99baf8-37f9-43d0-8bad-7254a2416f23",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 135,
                        "line_start": 115,
                        "name": "decision",
                        "notes": "Only proceed if there is an EC2 Resource contained in the SecurityHub Finding.",
                        "number": 1,
                        "order": 6,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.name",
                                        "value": "AwsEc2Instance Resource Artifact"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -200,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "decision_ec2_resource",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": false,
                        "z": 1084
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def decision_severity_threshold(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_severity_threshold() called')\n    \n    description_param = container.get('description', None)\n    description_value = container.get('description', None)\n    description_value = container.get('description', None)\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [description_param, \"==\", \"EC2 instance has an unprotected port which is being probed by a known malicious host.\"],\n            [\"Unprotected port on EC2 instance\", \"in\", description_value],\n            [\"brute force attacks against\", \"in\", description_value],\n        ],\n        logical_operator='or')\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        decision_ec2_resource(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "decision_severity_threshold",
                        "description": "Only proceed with this Finding if the SecurityHub normalized severity is above a certain threshold.",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "337df960-2caf-4067-8c3f-d5e521e0482d",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 221,
                        "line_start": 197,
                        "name": "decision",
                        "notes": "Only proceed with this Finding if the SecurityHub normalized severity is above a certain threshold.",
                        "number": 3,
                        "order": 9,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "container:description",
                                        "value": "EC2 instance has an unprotected port which is being probed by a known malicious host."
                                    },
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "Unprotected port on EC2 instance",
                                        "value": "container:description"
                                    },
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "brute force attacks against",
                                        "value": "container:description"
                                    }
                                ],
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -320,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "decision_severity_threshold",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 1085
                    },
                    {
                        "action": "update task",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "container_id": "",
                            "note": "DescribeFailedMessage:formatted_data",
                            "note_title": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                            "phase_name": "",
                            "role_id": "",
                            "status": "",
                            "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                            "task_name": "",
                            "user": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update task",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "container_id": "",
                                    "note": "DescribeFailedMessage:formatted_data",
                                    "note_title": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                                    "phase_name": "",
                                    "role_id": "",
                                    "status": "",
                                    "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                                    "task_name": "",
                                    "user": ""
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note_title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.phase_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.role_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "container_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Container ID (current container if blank)",
                                        "key": "container_id",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task note",
                                        "key": "note",
                                        "order": 6,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note_title": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Note title",
                                        "key": "note_title",
                                        "order": 7,
                                        "primary": false,
                                        "required": false
                                    },
                                    "phase_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Phase name",
                                        "key": "phase_name",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "role_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task assignee (role)",
                                        "key": "role_id",
                                        "order": 5,
                                        "primary": false,
                                        "required": false
                                    },
                                    "status": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task status",
                                        "key": "status",
                                        "order": 4,
                                        "primary": false,
                                        "required": false,
                                        "value_list": [
                                            "incomplete",
                                            "in progress",
                                            "complete"
                                        ]
                                    },
                                    "task_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task ID",
                                        "key": "task_id",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "task_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task name",
                                        "key": "task_name",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "user": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task assignee (username or user id)",
                                        "key": "user",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "AddTaskNoteDescribeFa..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def AddTaskNoteDescribeFailed(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('AddTaskNoteDescribeFailed() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'AddTaskNoteDescribeFailed' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_POV_get_current_task_1:custom_function_result.data.task_id', 'cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name'], action_results=results)\n    formatted_data_1 = phantom.get_format_data(name='DescribeFailedMessage')\n\n    parameters = []\n    \n    # build parameters list for 'AddTaskNoteDescribeFailed' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        parameters.append({\n            'note': formatted_data_1,\n            'user': \"\",\n            'status': \"\",\n            'role_id': \"\",\n            'task_id': custom_function_results_item_1[0],\n            'task_name': \"\",\n            'note_title': custom_function_results_item_1[1],\n            'phase_name': \"\",\n            'container_id': \"\",\n        })\n\n    phantom.act(action=\"update task\", parameters=parameters, assets=['phantomapp'], name=\"AddTaskNoteDescribeFailed\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe ec2 instance",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "AddTaskNoteDescribeFailed",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0a1668af-82f0-4e47-b0aa-c287a869e29b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 548,
                        "line_start": 519,
                        "message": "Configuring now",
                        "name": "update task",
                        "notes": "Add Failure Details to Task Note",
                        "number": 4,
                        "order": 22,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1120,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "AddTaskNoteDescribeFailed",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1086
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_note_12(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_12() called')\n\n    formatted_data_1 = phantom.get_format_data(name='CreateGeneralNote')\n\n    note_title = \"Findings\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    CompleteTask(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "CreateGeneralNote:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Findings",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "list security groups",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4d297f4d-f81f-458d-addc-20c248e36671",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 946,
                        "line_end": 497,
                        "line_start": 484,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "",
                        "number": 12,
                        "order": 20,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1120,
                            "y": 500
                        },
                        "previous_function": "",
                        "previous_name": "add_note_12",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 1088
                    },
                    {
                        "action": "update task",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "container_id": "container:id",
                            "note": "Finished - If you need to rerun this playbook - Revert the task status to 'not started' and re run",
                            "note_title": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                            "phase_name": "",
                            "role_id": "",
                            "status": "complete",
                            "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                            "task_name": "",
                            "user": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update task",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "container_id": "container:id",
                                    "note": "Finished - If you need to rerun this playbook - Revert the task status to 'not started' and re run",
                                    "note_title": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                                    "phase_name": "",
                                    "role_id": "",
                                    "status": "complete",
                                    "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                                    "task_name": "",
                                    "user": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner"
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note_title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.phase_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.role_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "container_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Container ID (current container if blank)",
                                        "key": "container_id",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task note",
                                        "key": "note",
                                        "order": 6,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note_title": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Note title",
                                        "key": "note_title",
                                        "order": 7,
                                        "primary": false,
                                        "required": false
                                    },
                                    "phase_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Phase name",
                                        "key": "phase_name",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "role_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task assignee (role)",
                                        "key": "role_id",
                                        "order": 5,
                                        "primary": false,
                                        "required": false
                                    },
                                    "status": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task status",
                                        "key": "status",
                                        "order": 4,
                                        "primary": false,
                                        "required": false,
                                        "value_list": [
                                            "incomplete",
                                            "in progress",
                                            "complete"
                                        ]
                                    },
                                    "task_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task ID",
                                        "key": "task_id",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "task_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task name",
                                        "key": "task_name",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "user": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task assignee (username or user id)",
                                        "key": "user",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "CompleteTask"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def CompleteTask(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('CompleteTask() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    id_value = container.get('id', None)\n\n    # collect data for 'CompleteTask' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner'], action_results=results)\n    custom_function_results_data_2 = phantom.collect2(container=container, datapath=['cf_local_POV_get_current_task_1:custom_function_result.data.task_id', 'cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'CompleteTask' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        for custom_function_results_item_2 in custom_function_results_data_2:\n            parameters.append({\n                'note': \"Finished - If you need to rerun this playbook - Revert the task status to 'not started' and re run\",\n                'user': custom_function_results_item_1[0],\n                'status': \"complete\",\n                'role_id': \"\",\n                'task_id': custom_function_results_item_2[0],\n                'task_name': \"\",\n                'note_title': custom_function_results_item_2[1],\n                'phase_name': \"\",\n                'container_id': id_value,\n            })\n\n    phantom.act(action=\"update task\", parameters=parameters, assets=['phantomapp'], name=\"CompleteTask\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "list security groups",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "CompleteTask",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "461ee4a1-8716-4d85-9089-7d60e157b720",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 430,
                        "line_start": 398,
                        "message": "Configuring now",
                        "name": "update task",
                        "notes": "Update to the task status to complete.",
                        "number": 3,
                        "order": 17,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1340,
                            "y": 500
                        },
                        "previous_function": "",
                        "previous_name": "CompleteTask",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1089
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "CreateGeneralNote"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def CreateGeneralNote(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('CreateGeneralNote() called')\n    \n    template = \"\"\"#  {0} - Findings #\n\n## Describe Instances Action ##\n** InstanceType : ** {1}\n\n**Private DNS Name: ** {2}\n\n** Public DNS Name: ** {3}\n\n** Instance State: ** {4}\n\n** Security Group: ** {5}\n\n## List Security Group Action ##\n\n** Group Name : **{10} \n\n| Protocol | Source | Port Range | Desc |\n|---|---|---|---|\n%%\n| {8} | {6} | {7} | {9} |\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name\",\n        \"describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.InstanceType\",\n        \"describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateDnsName\",\n        \"describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName\",\n        \"describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.State.Name\",\n        \"describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName\",\n        \"list_security_groups_1:action_result.data.*.SecurityGroups.*.IpPermissions.*.IpRanges.*.CidrIp\",\n        \"list_security_groups_1:action_result.data.*.SecurityGroups.*.IpPermissions.*.FromPort\",\n        \"list_security_groups_1:action_result.data.*.SecurityGroups.*.IpPermissions.*.IpProtocol\",\n        \"list_security_groups_1:action_result.data.*.SecurityGroups.*.IpPermissions.*.IpRanges.*.Description\",\n        \"list_security_groups_1:action_result.data.*.SecurityGroups.*.GroupName\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"CreateGeneralNote\")\n\n    add_note_12(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "list security groups",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "CreateGeneralNote",
                        "description": "",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "aa242239-192f-4bd1-8d0d-b0ec29a8a0bc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 448,
                        "line_end": 477,
                        "line_start": 430,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Create a general note with the action results in.",
                        "number": 5,
                        "order": 18,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.InstanceType"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateDnsName"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.State.Name"
                            },
                            {
                                "position": 6,
                                "type": "",
                                "value": "describe_ec2_instance:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName"
                            },
                            {
                                "position": 6,
                                "type": "",
                                "value": "list_security_groups_1:action_result.data.*.SecurityGroups.*.IpPermissions.*.IpRanges.*.CidrIp"
                            },
                            {
                                "position": 7,
                                "type": "",
                                "value": "list_security_groups_1:action_result.data.*.SecurityGroups.*.IpPermissions.*.FromPort"
                            },
                            {
                                "position": 8,
                                "type": "",
                                "value": "list_security_groups_1:action_result.data.*.SecurityGroups.*.IpPermissions.*.IpProtocol"
                            },
                            {
                                "position": 10,
                                "type": "",
                                "value": "list_security_groups_1:action_result.data.*.SecurityGroups.*.IpPermissions.*.IpRanges.*.Description"
                            },
                            {
                                "position": 10,
                                "type": "",
                                "value": "list_security_groups_1:action_result.data.*.SecurityGroups.*.GroupName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 900,
                            "y": 500
                        },
                        "previous_function": "",
                        "previous_name": "CreateGeneralNote",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "#  {0} - Findings #\n\n## Describe Instances Action ##\n** InstanceType : ** {1}\n\n**Private DNS Name: ** {2}\n\n** Public DNS Name: ** {3}\n\n** Instance State: ** {4}\n\n** Security Group: ** {5}\n\n\n## List Security Group Action ##\n\n** Group Name : **{10} \n\n| Protocol | Source | Port Range | Desc |\n|---|---|---|---|\n%%\n| {8} | {6} | {7} | {9} |\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 1090
                    },
                    {
                        "action": "update task",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "container_id": "",
                            "note": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                            "note_title": "Task Started",
                            "phase_name": "",
                            "role_id": "",
                            "status": "in progress",
                            "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                            "task_name": "",
                            "user": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update task",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "container_id": "",
                                    "note": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                                    "note_title": "Task Started",
                                    "phase_name": "",
                                    "role_id": "",
                                    "status": "in progress",
                                    "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                                    "task_name": "",
                                    "user": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner"
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note_title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.phase_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.role_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "container_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Container ID (current container if blank)",
                                        "key": "container_id",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task note",
                                        "key": "note",
                                        "order": 6,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note_title": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Note title",
                                        "key": "note_title",
                                        "order": 7,
                                        "primary": false,
                                        "required": false
                                    },
                                    "phase_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Phase name",
                                        "key": "phase_name",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "role_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task assignee (role)",
                                        "key": "role_id",
                                        "order": 5,
                                        "primary": false,
                                        "required": false
                                    },
                                    "status": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task status",
                                        "key": "status",
                                        "order": 4,
                                        "primary": false,
                                        "required": false,
                                        "value_list": [
                                            "incomplete",
                                            "in progress",
                                            "complete"
                                        ]
                                    },
                                    "task_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task ID",
                                        "key": "task_id",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "task_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task name",
                                        "key": "task_name",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "user": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task assignee (username or user id)",
                                        "key": "user",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "TaskInprogress"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def TaskInprogress(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('TaskInprogress() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'TaskInprogress' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name', 'cf_local_POV_get_current_task_1:custom_function_result.data.task_id'], action_results=results)\n    custom_function_results_data_2 = phantom.collect2(container=container, datapath=['cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'TaskInprogress' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        for custom_function_results_item_2 in custom_function_results_data_2:\n            parameters.append({\n                'note': custom_function_results_item_1[0],\n                'user': custom_function_results_item_2[0],\n                'status': \"in progress\",\n                'role_id': \"\",\n                'task_id': custom_function_results_item_1[1],\n                'task_name': \"\",\n                'note_title': \"Task Started\",\n                'phase_name': \"\",\n                'container_id': \"\",\n            })\n\n    phantom.act(action=\"update task\", parameters=parameters, assets=['phantomapp'], callback=filter_resource_artifact, name=\"TaskInprogress\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "POV_get_current_task",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "TaskInprogress",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "556bbb74-4e9b-4d9b-93b3-3e43081955e3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 398,
                        "line_start": 368,
                        "message": "Configuring now",
                        "name": "update task",
                        "notes": "Update the task status to in-progress",
                        "number": 2,
                        "order": 16,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -80,
                            "y": 120
                        },
                        "previous_function": "",
                        "previous_name": "TaskInprogress",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 1091
                    }
                ]
            },
            "notes": "This playbook uses the following Apps:\n - AWS Security Hub (on poll, add note) [asset name = aws_security_hub] - ingest the Finding which initiates this playbook and enrich it with a note at the end\n - AWS EC2 (describe instance, list security groups) [asset name = aws_ec2] - gather information about the EC2 environment\n - Jira (create ticket) [asset name = jira] - create a Jira ticket to track the task of fixing the problem\n - Slack (send message) [asset name = slack] - send a direct message to the owner of the EC2 instance to notify them that a change is needed\n - SSH (list firewall rules, list processes, list connections) [asset name = ssh] - connect to the EC2 instance and investigate the current activity and configuration of the host-based\nfirewall\n - MaxMind (geolocate ip) [asset name = maxmind] - look up the geographic locations of the remote IP addresses\n - PassiveTotal (ip reputation) [asset name = passivetotal] - look up any known reputation information about the remote IP addresses\n\nDeployment Notes:\n - The SSH actions will only work if the EC2 instance is using any of the commonly used linux distributions.\n - In the block \"build finding url\", a link to the AWS Console is constructed using an undocumented URL format on AWS and using a hard-coded region (us-east-1). The URL format could change at any time and the region may need to be adjusted.\n - The Jira ticket is created with a hard-coded project key set to \"EK\", which should be replaced with the correct project key.\n - The \"send message\" action using Slack relies on the EC2 instance to be tagged with the key \"InstanceOwnerSlack\" and the value set to the Slack username of the person who is responsible for the EC2 instance. This could be replaced with an email address or other communication mechanism.\n - The prompt block should be assigned to the correct user or role. Currently it is assigned to the user \"admin\".\n - The custom function called \"filter ip addresses\" has a hard-coded internal CIDR which ignores local AWS VPC traffic. That CIDR should be changed for the target EC2 environment."
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.3.51237"
    },
    "create_time": "2021-07-27T11:32:18.588897+00:00",
    "draft_mode": false,
    "labels": [
        "events"
    ],
    "tags": []
}