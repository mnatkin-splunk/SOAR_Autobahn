{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Proof of Value",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "\n",
            "description": "This preflight playbook discovers the properties of the email and how it has been forwarded. Then it renames artifacts, extracts .msg attachments if needed, creates new phish reporter artifact, and sets the event label to 'phishing_email' ready for the POV_Phishing_Investigation workbook to be attached.",
            "hash": "ef683b6f9df540f4e1f4d7bd51c66cdac62a2f83",
            "joint": {
                "cells": [
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'cf_local_POV_Email_Properties_1' block\n    cf_local_POV_Email_Properties_1(container=container)\n\n    return\n",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "651499d1-2741-4036-adda-2a2d2048c826",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 16,
                        "line_start": 8,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": 100
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return\n",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "AddSenderEmail, extractMSGFile",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f0f1c285-f082-42cd-bfca-e35106573a90",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 629,
                        "line_start": 616,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 23,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2000,
                            "y": 360
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 2
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e48ed88e-a7b2-4000-9e6a-0604235c3784",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "651499d1-2741-4036-adda-2a2d2048c826",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "6926848c-5031-4316-8afa-a0e5c7c1f2de",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 17
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "791f6c96-67d2-4a53-b032-f6f5fb8b578e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "6926848c-5031-4316-8afa-a0e5c7c1f2de",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d8517e1c-1242-4c43-bb88-e401c8962ec8",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 20
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "613a0c5e-4a39-43b3-bff7-eeb64817fbad",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "9d7b1fcf-6d74-4e84-a70c-6dde087b2efa",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c2cc1e03-592c-4d2b-990d-6eeaf3a367ae",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 91
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "afd31216-bd0b-43bd-b9c5-5b102f33477c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c2cc1e03-592c-4d2b-990d-6eeaf3a367ae",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e4e40dd2-b18d-42f1-a82c-cc6038d66121",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 101
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "002793b2-9753-4411-ae2c-ccdbb19841c6",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e4e40dd2-b18d-42f1-a82c-cc6038d66121",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "61445056-cd3c-4cc0-b9b3-717738aecbf7",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 114
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ceb27b02-54b0-4b66-bf6a-3bfd8c1299c5",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c45f3825-a73b-4545-8052-98785950d25c",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f0f1c285-f082-42cd-bfca-e35106573a90",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 129
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5122b287-5d50-4865-b2ee-52612c6754b8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "00313268-aa7a-4e80-a631-606ab5de9ea4",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f0f1c285-f082-42cd-bfca-e35106573a90",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 130
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bcbe1653-6cce-4b3c-ab90-8544b4c2e375",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "681ced40-5bc2-4a59-95ec-a24c1c468822",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "de9e1d83-138c-4eb9-ba9a-a5cf5a61c88f",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 173
                    },
                    {
                        "action": "extract email",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_name": "Phishing Artifact",
                            "container_id": "container:id",
                            "label": "",
                            "vault_id": "artifact:*.cef.vaultId"
                        },
                        "angle": 0,
                        "app": "MSG File Parser",
                        "appid": "e0b31412-4545-43eb-ad86-b1e466b38e7f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "extract email",
                                "actions": [
                                    "extract email"
                                ],
                                "active": true,
                                "app_name": "MSG File Parser",
                                "app_version": "1.0.16",
                                "appid": "e0b31412-4545-43eb-ad86-b1e466b38e7f",
                                "asset_name": "msg-parser",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_name": "Phishing Artifact",
                                    "container_id": "container:id",
                                    "label": "",
                                    "vault_id": "artifact:*.cef.vaultId"
                                },
                                "has_app": true,
                                "id": 35,
                                "loaded": false,
                                "missing": false,
                                "name": "msg-parser",
                                "output": [
                                    {
                                        "column_name": "status",
                                        "column_order": 4,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "phantom container id"
                                        ],
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "column_name": "label",
                                        "column_order": 3,
                                        "contains": [
                                            "phantom container label"
                                        ],
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string",
                                        "example_values": [
                                            "events"
                                        ]
                                    },
                                    {
                                        "column_name": "vault_id",
                                        "column_order": 2,
                                        "contains": [
                                            "vault id",
                                            "sha1"
                                        ],
                                        "data_path": "action_result.parameter.vault_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "492cafe7223b63c03413a290b8b7cefdfbc9e5d2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary.artifacts_found",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "column_name": "container_id",
                                        "column_order": 1,
                                        "contains": [
                                            "phantom container id"
                                        ],
                                        "data_path": "action_result.summary.container_id",
                                        "data_type": "numeric",
                                        "example_values": [
                                            256
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Container id: 256, Artifacts found: 2"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "artifact_name": {
                                        "data_type": "string",
                                        "default": "Email Artifact",
                                        "description": "Name of artifact, default (Email Artifact)",
                                        "key": "artifact_name",
                                        "order": 3,
                                        "primary": false,
                                        "required": true
                                    },
                                    "container_id": {
                                        "contains": [
                                            "phantom container id"
                                        ],
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Add created artifacts to this container",
                                        "key": "container_id",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    },
                                    "label": {
                                        "contains": [
                                            "phantom container label"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Add Container to this label",
                                        "key": "label",
                                        "order": 2,
                                        "primary": true,
                                        "required": false
                                    },
                                    "vault_id": {
                                        "contains": [
                                            "vault id",
                                            "sha1"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Vault ID",
                                        "key": "vault_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "MSG File Parser",
                                "product_vendor": "Phantom",
                                "targets": "35",
                                "type": "email"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "extractMSGFile"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def extractMSGFile(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('extractMSGFile() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    id_value = container.get('id', None)\n\n    # collect data for 'extractMSGFile' call\n    container_data = phantom.collect2(container=container, datapath=['artifact:*.cef.vaultId', 'artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'extractMSGFile' call\n    for container_item in container_data:\n        if container_item[0]:\n            parameters.append({\n                'label': \"\",\n                'vault_id': container_item[0],\n                'container_id': id_value,\n                'artifact_name': \"Phishing Artifact\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': container_item[1]},\n            })\n\n    phantom.act(action=\"extract email\", parameters=parameters, assets=['msg-parser'], callback=setEventLabel, name=\"extractMSGFile\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "extractMSGFile",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "61445056-cd3c-4cc0-b9b3-717738aecbf7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 265,
                        "line_start": 237,
                        "message": "Configuring now",
                        "name": "extract email",
                        "notes": "Extracts the attached .msg file as 'Phishing Artifact'",
                        "number": 1,
                        "order": 7,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1300,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "extractMSGFile",
                        "required_params": {
                            "artifact_name": true,
                            "vault_id": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 181
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6fdf3950-b30c-4f28-986f-82fc137ee001",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "067a2539-51be-4ae3-ba82-64aaca31d858",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "9d7b1fcf-6d74-4e84-a70c-6dde087b2efa",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 216
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "56bfa474-cb64-4fe2-ab68-aa3672e0e294",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4cb82f8e-fd71-4f69-b2a0-7baecfe0a0c2",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7b1cb260-08f9-4ef0-a9f7-543bcad6f273",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 221
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "34f79a05-1d7f-446a-9356-eb7250973cbc",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7b1cb260-08f9-4ef0-a9f7-543bcad6f273",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "cdc2a24a-426d-416d-a4a2-0da5fc3c3aaa",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 223
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7d57ccde-7823-4621-b9cb-90326c939875",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "76044296-065a-4d0b-8110-820807b9c75f",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f43c4659-902c-4d4e-8565-cc29659c4e19",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 232
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f313c012-d94e-4daf-939c-0764a3cb269a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "4cb82f8e-fd71-4f69-b2a0-7baecfe0a0c2",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "76044296-065a-4d0b-8110-820807b9c75f",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 235
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "da0f0a62-e2cd-43c2-b225-722e9bc33da4",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d8517e1c-1242-4c43-bb88-e401c8962ec8",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "067a2539-51be-4ae3-ba82-64aaca31d858",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 259
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f5800947-7421-45e6-9346-f5e1249fc700",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d8517e1c-1242-4c43-bb88-e401c8962ec8",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "4cb82f8e-fd71-4f69-b2a0-7baecfe0a0c2",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 260
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f829cf5b-02f4-4a58-8506-179bfb79ccdd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d8517e1c-1242-4c43-bb88-e401c8962ec8",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "681ced40-5bc2-4a59-95ec-a24c1c468822",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 261
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "7f3cef21-14da-465b-a698-52488742e6d2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d8517e1c-1242-4c43-bb88-e401c8962ec8",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "96291c66-2d32-4210-9747-29c4e35ae661",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 263
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "d11a1f48-a7f0-4c1e-a725-3dc96207b33f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "96291c66-2d32-4210-9747-29c4e35ae661",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b2202c50-211f-4fec-b7af-20410938411c",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 265
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def ifForwardedArtifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('ifForwardedArtifact() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"GetEmailProperties:custom_function:forwarded_artifact_id\", \"!=\", None],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        RenameForwardingArtifact(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "ifForwardedArtifact",
                        "description": "If we have identified the forwarding artifact id, rename the artifact",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7b1cb260-08f9-4ef0-a9f7-543bcad6f273",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 237,
                        "line_start": 219,
                        "name": "decision",
                        "notes": "If we have identified the forwarding artifact id, rename the artifact",
                        "number": 1,
                        "order": 6,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "GetEmailProperties:custom_function:forwarded_artifact_id",
                                        "value": "None"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 840,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "ifForwardedArtifact",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 282
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 6
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def ifPhishArtifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('ifPhishArtifact() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"GetEmailProperties:custom_function:phish_artifact_id\", \"!=\", None],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        RenamePhishArtifact(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "ifPhishArtifact",
                        "description": "If we have identified the phish email artifact rename it to phishing artifact",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "76044296-065a-4d0b-8110-820807b9c75f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 489,
                        "line_start": 471,
                        "name": "decision",
                        "notes": "If we have identified the phish email artifact rename it to phishing artifact",
                        "number": 6,
                        "order": 17,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "GetEmailProperties:custom_function:phish_artifact_id",
                                        "value": "None"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 840,
                            "y": 320
                        },
                        "previous_function": "",
                        "previous_name": "ifPhishArtifact",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 283
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 5
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def ifMSGFileAttached(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('ifMSGFileAttached() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"GetEmailProperties:custom_function:hasMSGFileAttached\", \"!=\", None],\n            [\"GetEmailProperties:custom_function:hasRanPreviously\", \"==\", None],\n        ],\n        logical_operator='and')\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        filterVaultArtifacts(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "ifMSGFileAttached",
                        "description": "Checks if we identified an MSG file attached in the vault. if So, we'll go ahead and extract it",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "067a2539-51be-4ae3-ba82-64aaca31d858",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 468,
                        "line_start": 448,
                        "name": "decision",
                        "notes": "Checks if we identified an MSG file attached in the vault. if So, we'll go ahead and extract it",
                        "number": 5,
                        "order": 16,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "GetEmailProperties:custom_function:hasMSGFileAttached",
                                        "value": "None"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "GetEmailProperties:custom_function:hasRanPreviously",
                                        "value": "None"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "ifMSGFileAttached",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 285
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 4
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def ifRanPreviously(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('ifRanPreviously() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"GetEmailProperties:custom_function:hasRanPreviously\", \"==\", None],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        ifForwardedArtifact(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        ifPhishArtifact(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "ifRanPreviously",
                        "description": "If No 'Email Artifacts' are found, we make the assumption this is not the first time the code ran, so won't try and rerun it.",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "4cb82f8e-fd71-4f69-b2a0-7baecfe0a0c2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 445,
                        "line_start": 426,
                        "name": "decision",
                        "notes": "If No 'Email Artifacts' are found, we make the assumption this is not the first time the code ran, so won't try and rerun it.",
                        "number": 4,
                        "order": 15,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "GetEmailProperties:custom_function:hasRanPreviously",
                                        "value": "None"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "ifRanPreviously",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 286
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def ifVaultHasExe(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('ifVaultHasExe() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"GetEmailProperties:custom_function:vaultHasPossibleExecutable\", \"!=\", \"\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        updateVaultArtifactName(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "ifVaultHasExe",
                        "description": "If the event has POSSIBLE executable files, rename the artifact and increase severity to high",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "681ced40-5bc2-4a59-95ec-a24c1c468822",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 423,
                        "line_start": 405,
                        "name": "decision",
                        "notes": "If the event has POSSIBLE executable files, rename the artifact and increase severity to high",
                        "number": 3,
                        "order": 14,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "GetEmailProperties:custom_function:vaultHasPossibleExecutable",
                                        "value": ""
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": -40
                        },
                        "previous_function": "",
                        "previous_name": "ifVaultHasExe",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 288
                    },
                    {
                        ".scmName/text": "local",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "POV_Email_Properties"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def cf_local_POV_Email_Properties_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('cf_local_POV_Email_Properties_1() called')\n\n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n\n    parameters = []\n\n    for item0 in container_property_0:\n        parameters.append({\n            'container_id': item0[0],\n        })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/POV_Email_Properties\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/POV_Email_Properties', parameters=parameters, name='cf_local_POV_Email_Properties_1', callback=GetEmailProperties)\n\n    return",
                        "callback_code": "",
                        "callback_start": 49,
                        "callsback": true,
                        "cfDisplayPath": "local/POV_Email_Properties",
                        "cfInputs": {
                            "container_id": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "item0[0]",
                                "type": "item"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 18,
                        "customFunction": "local/POV_Email_Properties",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "Work through the artifacts discerning as much information as we can about it, and setting up the properties so we can make decisions in downstream playbooks.",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "6926848c-5031-4316-8afa-a0e5c7c1f2de",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 49,
                        "line_start": 19,
                        "message": "Configuring now",
                        "name": "POV_Email_Properties",
                        "notes": "Work through the artifacts discerning as much information as we can about it, and setting up the properties so we can make decisions in downstream playbooks.",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 220,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_POV_Email_Properties_1",
                        "selectedCustomFunction": {
                            "description": "Gets Email properties, and renames artifacts ready for downstream playbooks.",
                            "draftMode": false,
                            "id": 447,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "POV_Email_Properties",
                                    "contains_type": [
                                        "phantom container id"
                                    ],
                                    "custom_function": 447,
                                    "description": "",
                                    "id": 1023,
                                    "input_type": "item",
                                    "name": "container_id",
                                    "placeholder": "container:id"
                                }
                            ],
                            "name": "POV_Email_Properties",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "POV_Email_Properties",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 447,
                                    "data_path": "outputs",
                                    "description": "",
                                    "id": 1314
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/aa",
                                        "draft_mode": false,
                                        "id": 1089,
                                        "name": "aa",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Phishing_Parent_Playbook",
                                        "draft_mode": false,
                                        "id": 1185,
                                        "name": "POV_Phishing_Parent_Playbook",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...\n",
                        "warn": false,
                        "z": 289
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "updateVaultArtifactName"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def updateVaultArtifactName(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('updateVaultArtifactName() called')\n    GetEmailProperties__vaultArtifactWithExecutable = json.loads(phantom.get_run_data(key='GetEmailProperties:vaultArtifactWithExecutable'))\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    parameters = []\n    \n    for artifact_id in GetEmailProperties__vaultArtifactWithExecutable:\n        phantom.debug(artifact_id)\n\n        # build parameters list for 'update_artifact_fields_4' call\n        parameters.append({\n            'data': \"{\\\"name\\\":\\\"Vault Artifact - Executable\\\", \\\"severity\\\":\\\"high\\\"}\",\n            'overwrite': True,\n            'artifact_id': artifact_id,\n        })\n\n        phantom.act(action=\"update artifact fields\", parameters=parameters, assets=['phantomapp'], name=\"updateVaultName\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 4,
                        "customCodeStartLine": 7,
                        "custom_callback": "",
                        "custom_code": "def updateVaultArtifactName(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('updateVaultArtifactName() called')\n    GetEmailProperties__vaultArtifactWithExecutable = json.loads(phantom.get_run_data(key='GetEmailProperties:vaultArtifactWithExecutable'))\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    parameters = []\n    \n    for artifact_id in GetEmailProperties__vaultArtifactWithExecutable:\n        phantom.debug(artifact_id)\n\n        # build parameters list for 'update_artifact_fields_4' call\n        parameters.append({\n            'data': \"{\\\"name\\\":\\\"Vault Artifact - Executable\\\", \\\"severity\\\":\\\"high\\\"}\",\n            'overwrite': True,\n            'artifact_id': artifact_id,\n        })\n\n        phantom.act(action=\"update artifact fields\", parameters=parameters, assets=['phantomapp'], name=\"updateVaultName\")\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    return",
                        "custom_join": "",
                        "custom_name": "updateVaultArtifactName",
                        "description": "Rename 'Vault Artifact' to 'Vault Artifact - Executable' and set the severity to high for downstream playbooks",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "de9e1d83-138c-4eb9-ba9a-a5cf5a61c88f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 402,
                        "line_start": 373,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Rename 'Vault Artifact' to 'Vault Artifact - Executable' and set the severity to high for downstream playbooks",
                        "number": 3,
                        "order": 13,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "GetEmailProperties:custom_function:vaultArtifactWithExecutable"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": -40
                        },
                        "previous_function": "",
                        "previous_name": "updateVaultArtifactName",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    parameters = []\n    \n    for artifact_id in GetEmailProperties__vaultArtifactWithExecutable:\n        phantom.debug(artifact_id)\n\n        # build parameters list for 'update_artifact_fields_4' call\n        parameters.append({\n            'data': \"{\\\"name\\\":\\\"Vault Artifact - Executable\\\", \\\"severity\\\":\\\"high\\\"}\",\n            'overwrite': True,\n            'artifact_id': artifact_id,\n        })\n\n        phantom.act(action=\"update artifact fields\", parameters=parameters, assets=['phantomapp'], name=\"updateVaultName\")\n\n",
                        "warn": false,
                        "z": 290
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def ifVaultIdReturned(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('ifVaultIdReturned() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"GetMSGArtifactVaultId:custom_function:isMSGArtifact\", \"==\", True],\n            [\"GetMSGArtifactVaultId:custom_function:vaultId\", \"!=\", None],\n        ],\n        logical_operator='and')\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        extractMSGFile(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "ifVaultIdReturned",
                        "description": "If we discovered a vaultId then extract the .msg file.",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e4e40dd2-b18d-42f1-a82c-cc6038d66121",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 350,
                        "line_start": 330,
                        "name": "decision",
                        "notes": "If we discovered a vaultId then extract the .msg file.",
                        "number": 2,
                        "order": 10,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "GetMSGArtifactVaultId:custom_function:isMSGArtifact",
                                        "value": "True"
                                    },
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "GetMSGArtifactVaultId:custom_function:vaultId",
                                        "value": "None"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1180,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "ifVaultIdReturned",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 291
                    },
                    {
                        "action": "add artifact",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "cef_dictionary": "",
                            "cef_name": "fromEmail",
                            "cef_value": "GetEmailProperties:custom_function:phishing_reporter",
                            "container_id": "container:id",
                            "contains": "email",
                            "label": "artifact",
                            "name": "Phishing Reporter",
                            "run_automation": true,
                            "source_data_identifier": "GetEmailProperties:custom_function:randomSID"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "add artifact",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "cef_dictionary": "",
                                    "cef_name": "fromEmail",
                                    "cef_value": "GetEmailProperties:custom_function:phishing_reporter",
                                    "container_id": "container:id",
                                    "contains": "email",
                                    "label": "artifact",
                                    "name": "Phishing Reporter",
                                    "run_automation": true,
                                    "source_data_identifier": "GetEmailProperties:custom_function:randomSID"
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_dictionary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.cef_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "*"
                                        ],
                                        "data_path": "action_result.parameter.cef_value",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "phantom container id"
                                        ],
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.contains",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.label",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.run_automation",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.source_data_identifier",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.existing_artifact_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.failed",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data.*.id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.data.*.success",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.summary.artifact id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.summary.container id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.summary.server",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "cef_dictionary": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "CEF JSON",
                                        "key": "cef_dictionary",
                                        "order": 6,
                                        "required": false
                                    },
                                    "cef_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "CEF Name",
                                        "key": "cef_name",
                                        "order": 4,
                                        "required": false,
                                        "value_list": [
                                            "act",
                                            "app",
                                            "applicationProtocol",
                                            "baseEventCount",
                                            "bytesIn",
                                            "bytesOut",
                                            "cat",
                                            "cn1",
                                            "cn1Label",
                                            "cn2",
                                            "cn2Label",
                                            "cn3",
                                            "cn3Label",
                                            "cnt",
                                            "cs1",
                                            "cs1Label",
                                            "cs2",
                                            "cs2Label",
                                            "cs3",
                                            "cs3Label",
                                            "cs4",
                                            "cs4Label",
                                            "cs5",
                                            "cs5Label",
                                            "cs6",
                                            "cs6Label",
                                            "destinationAddress",
                                            "destinationDnsDomain",
                                            "destinationHostName",
                                            "destinationMacAddress",
                                            "destinationNtDomain",
                                            "destinationPort",
                                            "destinationProcessName",
                                            "destinationServiceName",
                                            "destinationTranslatedAddress",
                                            "destinationTranslatedPort",
                                            "destinationUserId",
                                            "destinationUserName",
                                            "destinationUserPrivileges",
                                            "deviceAction",
                                            "deviceAddress",
                                            "deviceCustomDate1",
                                            "deviceCustomDate1Label",
                                            "deviceCustomDate2",
                                            "deviceCustomDate2Label",
                                            "deviceCustomNumber1",
                                            "deviceCustomNumber1Label",
                                            "deviceCustomNumber2",
                                            "deviceCustomNumber2Label",
                                            "deviceCustomNumber3",
                                            "deviceCustomNumber3Label",
                                            "deviceCustomString1",
                                            "deviceCustomString1Label",
                                            "deviceCustomString2",
                                            "deviceCustomString2Label",
                                            "deviceCustomString3",
                                            "deviceCustomString3Label",
                                            "deviceCustomString4",
                                            "deviceCustomString4Label",
                                            "deviceCustomString5",
                                            "deviceCustomString5Label",
                                            "deviceCustomString6",
                                            "deviceCustomString6Label",
                                            "deviceDirection",
                                            "deviceDnsDomain",
                                            "deviceEventCategory",
                                            "deviceExternalId",
                                            "deviceFacility",
                                            "deviceHostname",
                                            "deviceInboundInterface",
                                            "deviceMacAddress",
                                            "deviceOutboundInterface",
                                            "deviceProcessName",
                                            "deviceTranslatedAddress",
                                            "dhost",
                                            "dmac",
                                            "dntdom",
                                            "dpriv",
                                            "dproc",
                                            "dpt",
                                            "dst",
                                            "duid",
                                            "duser",
                                            "dvc",
                                            "dvchost",
                                            "end",
                                            "endTime",
                                            "eventOutcome",
                                            "externalId",
                                            "fileCreateTime",
                                            "fileHash",
                                            "fileHashMd5",
                                            "fileHashSha1",
                                            "fileHashSha256",
                                            "fileHashSha512",
                                            "fileId",
                                            "fileModificationTime",
                                            "fileName",
                                            "filePath",
                                            "filePermission",
                                            "fileSize",
                                            "fileType",
                                            "fname",
                                            "fsize",
                                            "in",
                                            "message",
                                            "msg",
                                            "oldfileCreateTime",
                                            "oldfileHash",
                                            "oldfileId",
                                            "oldfileModificationTime",
                                            "oldfileName",
                                            "oldfilePath",
                                            "oldfilePermission",
                                            "oldfileType",
                                            "oldfsize",
                                            "out",
                                            "outcome",
                                            "proto",
                                            "receiptTime",
                                            "request",
                                            "requestClientApplication",
                                            "requestCookies",
                                            "requestMethod",
                                            "requestURL",
                                            "rt",
                                            "shost",
                                            "smac",
                                            "sntdom",
                                            "sourceAddress",
                                            "sourceDnsDomain",
                                            "sourceHostName",
                                            "sourceMacAddress",
                                            "sourceNtDomain",
                                            "sourcePort",
                                            "sourceServiceName",
                                            "sourceTranslatedAddress",
                                            "sourceTranslatedPort",
                                            "sourceUserId",
                                            "sourceUserName",
                                            "sourceUserPrivileges",
                                            "spriv",
                                            "spt",
                                            "src",
                                            "start",
                                            "startTime",
                                            "suid",
                                            "suser",
                                            "transportProtocol"
                                        ]
                                    },
                                    "cef_value": {
                                        "contains": [
                                            "*"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Value",
                                        "key": "cef_value",
                                        "order": 5,
                                        "primary": true,
                                        "required": false
                                    },
                                    "container_id": {
                                        "contains": [
                                            "phantom container id"
                                        ],
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Numeric container ID for the new artifact",
                                        "key": "container_id",
                                        "order": 1,
                                        "required": false
                                    },
                                    "contains": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Data type for each CEF field",
                                        "key": "contains",
                                        "order": 7,
                                        "required": false
                                    },
                                    "label": {
                                        "data_type": "string",
                                        "default": "event",
                                        "description": "Artifact label (default: event)",
                                        "key": "label",
                                        "order": 2,
                                        "required": false
                                    },
                                    "name": {
                                        "data_type": "string",
                                        "default": "User created artifact",
                                        "description": "Name of the new artifact",
                                        "key": "name",
                                        "order": 0,
                                        "required": false
                                    },
                                    "run_automation": {
                                        "data_type": "boolean",
                                        "default": true,
                                        "description": "Run automation on newly created artifact(s)",
                                        "key": "run_automation",
                                        "order": 8,
                                        "required": false
                                    },
                                    "source_data_identifier": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Source Data Idenitifier",
                                        "key": "source_data_identifier",
                                        "order": 3,
                                        "required": true
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "addPhishReporterArtifact"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def addPhishReporterArtifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('addPhishReporterArtifact() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    GetEmailProperties__phishing_reporter = json.loads(phantom.get_run_data(key='GetEmailProperties:phishing_reporter'))\n    id_value = container.get('id', None)\n\n    GetEmailProperties__randomSID = json.loads(phantom.get_run_data(key='GetEmailProperties:randomSID'))\n    # collect data for 'addPhishReporterArtifact' call\n\n    parameters = []\n    \n    # build parameters list for 'addPhishReporterArtifact' call\n    parameters.append({\n        'name': \"Phishing Reporter\",\n        'label': \"artifact\",\n        'cef_name': \"fromEmail\",\n        'contains': \"email\",\n        'cef_value': GetEmailProperties__phishing_reporter,\n        'container_id': id_value,\n        'cef_dictionary': \"\",\n        'run_automation': \"true\",\n        'source_data_identifier': GetEmailProperties__randomSID,\n    })\n\n    phantom.act(action=\"add artifact\", parameters=parameters, assets=['phantomapp'], name=\"addPhishReporterArtifact\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "addPhishReporterArtifact",
                        "delay": 0,
                        "description": "Add New artifact with the phishing reporters mail address",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b2202c50-211f-4fec-b7af-20410938411c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 522,
                        "line_start": 492,
                        "message": "Configuring now",
                        "name": "add artifact",
                        "notes": "Add New artifact with the phishing reporters mail address",
                        "number": 1,
                        "order": 18,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "addPhishReporterArtifact",
                        "required_params": {
                            "source_data_identifier": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 296
                    },
                    {
                        "action": "update artifact fields",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "GetEmailProperties:custom_function:forwarded_artifact_id",
                            "data": "{\"name\": \"Forwarding Artifact\"}",
                            "overwrite": "True"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact fields",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "GetEmailProperties:custom_function:forwarded_artifact_id",
                                    "data": "{\"name\": \"Forwarding Artifact\"}",
                                    "overwrite": "True"
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "artifact_id",
                                        "key": "artifact_id",
                                        "primary": true,
                                        "required": true
                                    },
                                    "data": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "update data (json formatted)",
                                        "key": "data",
                                        "required": true
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "overwrite existing",
                                        "key": "overwrite",
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "RenameForwardingArtifa..."
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def RenameForwardingArtifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('RenameForwardingArtifact() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    GetEmailProperties__forwarded_artifact_id = json.loads(phantom.get_run_data(key='GetEmailProperties:forwarded_artifact_id'))\n    # collect data for 'RenameForwardingArtifact' call\n\n    parameters = []\n    \n    # build parameters list for 'RenameForwardingArtifact' call\n    parameters.append({\n        'data': \"{\\\"name\\\": \\\"Forwarding Artifact\\\"}\",\n        'overwrite': True,\n        'artifact_id': GetEmailProperties__forwarded_artifact_id,\n    })\n\n    phantom.act(action=\"update artifact fields\", parameters=parameters, assets=['phantomapp'], name=\"RenameForwardingArtifact\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": false,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "RenameForwardingArtifact",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "cdc2a24a-426d-416d-a4a2-0da5fc3c3aaa",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 216,
                        "line_start": 195,
                        "message": "Configuring now",
                        "name": "update artifact fields",
                        "notes": "Renames the Forwarding 'wrapper' artifact",
                        "number": 3,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": 200
                        },
                        "previous_function": "",
                        "previous_name": "RenameForwardingArtifact",
                        "required_params": {
                            "artifact_id": true,
                            "data": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 301
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def filterVaultArtifacts(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('filterVaultArtifacts() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.name\", \"==\", \"Vault Artifact\"],\n        ],\n        name=\"filterVaultArtifacts:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        GetMSGArtifactVaultId(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "filterVaultArtifacts",
                        "description": "filter Vault Artifacts",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "9d7b1fcf-6d74-4e84-a70c-6dde087b2efa",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 286,
                        "line_start": 268,
                        "name": "filter",
                        "notes": "filter Vault Artifacts",
                        "number": 1,
                        "order": 8,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.name",
                                        "value": "Vault Artifact"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 840,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "filterVaultArtifacts",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 307
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "bc23ee9c-f28e-455d-8518-87a601cd55d3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f43c4659-902c-4d4e-8565-cc29659c4e19",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a1efc754-6a34-498f-9c75-753037418a59",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 308
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 7
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def ifPhishReporter(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('ifPhishReporter() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"GetEmailProperties:custom_function:phishing_reporter\", \"!=\", None],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        addPhishReporterArtifact(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "ifPhishReporter",
                        "description": "If we have identifed the sender of the email to phishing pond, we'll go ahead and create an artifact specifically with the email address of the sender.",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "96291c66-2d32-4210-9747-29c4e35ae661",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 543,
                        "line_start": 525,
                        "name": "decision",
                        "notes": "If we have identifed the sender of the email to phishing pond, we'll go ahead and create an artifact specifically with the email address of the sender.",
                        "number": 7,
                        "order": 19,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "!=",
                                        "data_type": "",
                                        "param": "GetEmailProperties:custom_function:phishing_reporter",
                                        "value": "None"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "ifPhishReporter",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 310
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f136f08f-3ca0-4333-908b-d8b6f5b6dea8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a1efc754-6a34-498f-9c75-753037418a59",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3b383c72-f999-498f-b6d8-13fa17a6d393",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 311
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "cce5f4b8-a368-4fb8-bfa7-d645cafb8f6d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3b383c72-f999-498f-b6d8-13fa17a6d393",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d3dd6af2-025b-45f0-a18d-5fbc3a0678b3",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 313
                    },
                    {
                        "action": "update artifact fields",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "GetEmailProperties:custom_function:phish_artifact_id",
                            "data": "{\"name\": \"Phishing Artifact\"}",
                            "overwrite": "True"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact fields",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "GetEmailProperties:custom_function:phish_artifact_id",
                                    "data": "{\"name\": \"Phishing Artifact\"}",
                                    "overwrite": "True"
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "artifact_id",
                                        "key": "artifact_id",
                                        "primary": true,
                                        "required": true
                                    },
                                    "data": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "update data (json formatted)",
                                        "key": "data",
                                        "required": true
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "overwrite existing",
                                        "key": "overwrite",
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "RenamePhishArtifact"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def RenamePhishArtifact(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('RenamePhishArtifact() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    GetEmailProperties__phish_artifact_id = json.loads(phantom.get_run_data(key='GetEmailProperties:phish_artifact_id'))\n    # collect data for 'RenamePhishArtifact' call\n\n    parameters = []\n    \n    # build parameters list for 'RenamePhishArtifact' call\n    parameters.append({\n        'data': \"{\\\"name\\\": \\\"Phishing Artifact\\\"}\",\n        'overwrite': True,\n        'artifact_id': GetEmailProperties__phish_artifact_id,\n    })\n\n    phantom.act(action=\"update artifact fields\", parameters=parameters, assets=['phantomapp'], callback=filter_2, name=\"RenamePhishArtifact\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "RenamePhishArtifact",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f43c4659-902c-4d4e-8565-cc29659c4e19",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 195,
                        "line_start": 174,
                        "message": "Configuring now",
                        "name": "update artifact fields",
                        "notes": "Renames the discovered Phishing Email Artifact to 'Phishing Artifact'",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": 320
                        },
                        "previous_function": "",
                        "previous_name": "RenamePhishArtifact",
                        "required_params": {
                            "artifact_id": true,
                            "data": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 319
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def filter_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('filter_2() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"artifact:*.name\", \"==\", \"Phishing Artifact\"],\n        ],\n        name=\"filter_2:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        getEmailAddress(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "RenamePhishArtifact",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a1efc754-6a34-498f-9c75-753037418a59",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 616,
                        "line_start": 598,
                        "name": "filter",
                        "notes": "",
                        "number": 2,
                        "order": 22,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.name",
                                        "value": "Phishing Artifact"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1180,
                            "y": 320
                        },
                        "previous_function": "",
                        "previous_name": "filter_2",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 320
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "getEmailAddress"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def getEmailAddress(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('getEmailAddress() called')\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_2:condition_1:artifact:*.cef.fromEmail'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    getEmailAddress__originalSenderEmail = None\n    getEmailAddress__formattedCef = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    phantom.debug(filtered_artifacts_item_1_0[0])\n    import re\n    x = re.search(\"(\\<)(.*)(\\>)\", filtered_artifacts_item_1_0[0])\n    if x: \n        getEmailAddress__originalSenderEmail = x.group(2)\n        str = \"{\\\"cef\\\": {\\\"originalSendingEmailFrom\\\": \\\"\" + x.group(2) + \"\\\"}}\"\n        getEmailAddress__formattedCef = str\n    else:\n        getEmailAddress__originalSenderEmail = None\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='getEmailAddress:originalSenderEmail', value=json.dumps(getEmailAddress__originalSenderEmail))\n    phantom.save_run_data(key='getEmailAddress:formattedCef', value=json.dumps(getEmailAddress__formattedCef))\n    AddSenderEmail(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "RenamePhishArtifact",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 8,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def getEmailAddress(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('getEmailAddress() called')\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_2:condition_1:artifact:*.cef.fromEmail'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    getEmailAddress__originalSenderEmail = None\n    getEmailAddress__formattedCef = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    phantom.debug(filtered_artifacts_item_1_0[0])\n    import re\n    x = re.search(\"(\\<)(.*)(\\>)\", filtered_artifacts_item_1_0[0])\n    if x: \n        getEmailAddress__originalSenderEmail = x.group(2)\n        str = \"{\\\"cef\\\": {\\\"originalSendingEmailFrom\\\": \\\"\" + x.group(2) + \"\\\"}}\"\n        getEmailAddress__formattedCef = str\n    else:\n        getEmailAddress__originalSenderEmail = None\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='getEmailAddress:originalSenderEmail', value=json.dumps(getEmailAddress__originalSenderEmail))\n    phantom.save_run_data(key='getEmailAddress:formattedCef', value=json.dumps(getEmailAddress__formattedCef))\n    update_artifact_fields_4(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "getEmailAddress",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3b383c72-f999-498f-b6d8-13fa17a6d393",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 598,
                        "line_start": 565,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Strips the email address from the fromEmail field which natively looks like 'Derek King <deking@splunk.com>",
                        "number": 4,
                        "order": 21,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "originalSenderEmail"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "formattedCef"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filter_2:condition_1:artifact:*.cef.fromEmail"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1300,
                            "y": 320
                        },
                        "previous_function": "",
                        "previous_name": "getEmailAddress",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    phantom.debug(filtered_artifacts_item_1_0[0])\n    import re\n    x = re.search(\"(\\<)(.*)(\\>)\", filtered_artifacts_item_1_0[0])\n    if x: \n        getEmailAddress__originalSenderEmail = x.group(2)\n        str = \"{\\\"cef\\\": {\\\"originalSendingEmailFrom\\\": \\\"\" + x.group(2) + \"\\\"}}\"\n        getEmailAddress__formattedCef = str\n    else:\n        getEmailAddress__originalSenderEmail = None\n\n",
                        "warn": false,
                        "z": 321
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "set label",
                        "attrs": {
                            ".api": {
                                "text": "setEventLabel"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def setEventLabel(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('setEventLabel() called')\n\n    phantom.set_label(container=container, label=\"phishing_email\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "key": "set-label",
                                "setLabelLabel": "phishing_email",
                                "setLabelLabel_display": "phishing_email"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "extractMSGFile",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "setEventLabel",
                        "description": "Sets the event label to 'phishing_email' ready for downstream playbooks to work from",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "00313268-aa7a-4e80-a631-606ab5de9ea4",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 360,
                        "line_start": 353,
                        "message": "Configuring now",
                        "name": "set label",
                        "notes": "Sets the event label to 'phishing_email' ready for downstream playbooks to work from",
                        "number": 3,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1740,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "setEventLabel",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 323
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c7b5d104-b4b6-44f0-849b-0ea070cdd803",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d3dd6af2-025b-45f0-a18d-5fbc3a0678b3",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c45f3825-a73b-4545-8052-98785950d25c",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 325
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "set label",
                        "attrs": {
                            ".api": {
                                "text": "setEventLabel1"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def setEventLabel1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('setEventLabel1() called')\n\n    phantom.set_label(container=container, label=\"phishing_email\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "key": "set-label",
                                "setLabelLabel": "phishing_email",
                                "setLabelLabel_display": "phishing_email"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "AddSenderEmail",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "setEventLabel1",
                        "description": "Sets the event label to 'phishing_email' ready for downstream playbooks to work from",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c45f3825-a73b-4545-8052-98785950d25c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 370,
                        "line_start": 363,
                        "message": "Configuring now",
                        "name": "set label",
                        "notes": "Sets the event label to 'phishing_email' ready for downstream playbooks to work from",
                        "number": 4,
                        "order": 12,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1740,
                            "y": 320
                        },
                        "previous_function": "",
                        "previous_name": "setEventLabel1",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 326
                    },
                    {
                        "action": "update artifact fields",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "artifact_id": "GetEmailProperties:custom_function:phish_artifact_id",
                            "data": "getEmailAddress:custom_function:formattedCef",
                            "overwrite": "True"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update artifact fields",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "artifact_id": "GetEmailProperties:custom_function:phish_artifact_id",
                                    "data": "getEmailAddress:custom_function:formattedCef",
                                    "overwrite": "True"
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.artifact_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    }
                                ],
                                "parameters": {
                                    "artifact_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "artifact_id",
                                        "key": "artifact_id",
                                        "primary": true,
                                        "required": true
                                    },
                                    "data": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "update data (json formatted)",
                                        "key": "data",
                                        "required": true
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "overwrite existing",
                                        "key": "overwrite",
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "AddSenderEmail"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def AddSenderEmail(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('AddSenderEmail() called')\n    \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    getEmailAddress__formattedCef = json.loads(phantom.get_run_data(key='getEmailAddress:formattedCef'))\n    GetEmailProperties__phish_artifact_id = json.loads(phantom.get_run_data(key='GetEmailProperties:phish_artifact_id'))\n    # collect data for 'AddSenderEmail' call\n\n    parameters = []\n    \n    # build parameters list for 'AddSenderEmail' call\n    parameters.append({\n        'data': getEmailAddress__formattedCef,\n        'overwrite': True,\n        'artifact_id': GetEmailProperties__phish_artifact_id,\n    })\n\n    phantom.act(action=\"update artifact fields\", parameters=parameters, assets=['phantomapp'], callback=setEventLabel1, name=\"AddSenderEmail\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "RenamePhishArtifact",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "AddSenderEmail",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d3dd6af2-025b-45f0-a18d-5fbc3a0678b3",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 565,
                        "line_start": 543,
                        "message": "Configuring now",
                        "name": "update artifact fields",
                        "notes": "Strips the email address from the fromEmail field which natively looks like 'Derek King <deking@splunk.com>'",
                        "number": 4,
                        "order": 20,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1520,
                            "y": 320
                        },
                        "previous_function": "",
                        "previous_name": "AddSenderEmail",
                        "required_params": {
                            "artifact_id": true,
                            "data": true
                        },
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 327
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "18acb817-8f1f-4c50-a80d-f44334a3ddfc",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "61445056-cd3c-4cc0-b9b3-717738aecbf7",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "00313268-aa7a-4e80-a631-606ab5de9ea4",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 328
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "GetEmailProperties"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def GetEmailProperties(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('GetEmailProperties() called')\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_POV_Email_Properties_1:custom_function_result.data'], action_results=results)\n    custom_function_results_item_1_0 = [item[0] for item in custom_function_results_data_1]\n\n    GetEmailProperties__phish_artifact_id = None\n    GetEmailProperties__forwarded_artifact_id = None\n    GetEmailProperties__vaultIdForExecutable = None\n    GetEmailProperties__hasRanPreviously = None\n    GetEmailProperties__hasMSGFileAttached = None\n    GetEmailProperties__isEMLForwarded = None\n    GetEmailProperties__isMSGForwarded = None\n    GetEmailProperties__vaultHasPossibleExecutable = None\n    GetEmailProperties__vaultArtifactWithExecutable = None\n    GetEmailProperties__randomSID = None\n    GetEmailProperties__phishing_reporter = None\n    GetEmailProperties__phishing_sourceUserName = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    import string\n    import random\n    \n    def get_random_string(length):\n        \n        letters = string.ascii_letters\n        result_str = ''.join(random.choice(letters) for i in range(length))\n        \n        return result_str\n\n    GetEmailProperties__randomSID  = get_random_string(20)\n\n    try:\n        custom_function_results_item_1_0[0]['phish_artifact_id']\n        GetEmailProperties__phish_artifact_id = custom_function_results_item_1_0[0]['phish_artifact_id']\n    except:\n        GetEmailProperties__phish_artifact_id = None\n    \n    try:\n        custom_function_results_item_1_0[0]['forwarded_artifact_id']\n        GetEmailProperties__forwarded_artifact_id = custom_function_results_item_1_0[0]['forwarded_artifact_id']\n    except:\n        GetEmailProperties__forwarded_artifact_id = None\n    \n    try:\n        custom_function_results_item_1_0[0]['vaultIdForExecutable']\n        GetEmailProperties__vaultIdForExecutable = custom_function_results_item_1_0[0]['vaultIdForExecutable']\n    except:\n        GetEmailProperties__vaultIdForExecutable = None\n        \n    try:\n        custom_function_results_item_1_0[0]['hasRanPreviously']\n        GetEmailProperties__hasRanPreviously = custom_function_results_item_1_0[0]['hasRanPreviously']\n    except:\n        GetEmailProperties__hasRanPreviously = None\n\n    try:\n        custom_function_results_item_1_0[0]['hasMSGFileAttached']\n        GetEmailProperties__hasMSGFileAttached = custom_function_results_item_1_0[0]['hasMSGFileAttached']\n    except:\n        GetEmailProperties__hasMSGFileAttached = None\n\n    try:\n        custom_function_results_item_1_0[0]['isEMLForwarded']\n        GetEmailProperties__isEMLForwarded = custom_function_results_item_1_0[0]['isEMLForwarded']\n    except:\n        GetEmailProperties__isEMLForwarded = None  \n        \n    try:\n        custom_function_results_item_1_0[0]['isMSGForwarded']\n        GetEmailProperties__isMSGForwarded = custom_function_results_item_1_0[0]['isMSGForwarded']\n    except:\n        GetEmailProperties__isMSGForwarded = None   \n\n    try:\n        custom_function_results_item_1_0[0]['vaultHasPossibleExecutable']\n        GetEmailProperties__vaultHasPossibleExecutable = custom_function_results_item_1_0[0]['vaultHasPossibleExecutable']\n    except:\n        GetEmailProperties__vaultHasPossibleExecutable = None     \n        \n    try:\n        custom_function_results_item_1_0[0]['vaultArtifactWithExecutable']\n        GetEmailProperties__vaultArtifactWithExecutable = custom_function_results_item_1_0[0]['vaultArtifactWithExecutable']\n    except:\n        GetEmailProperties__vaultArtifactWithExecutable = None\n        \n    try:\n        custom_function_results_item_1_0[0]['phishing_reporter']\n        GetEmailProperties__phishing_reporter = custom_function_results_item_1_0[0]['phishing_reporter']\n        \n    except:\n        GetEmailProperties__phishing_reporter = None\n\n    try:\n        GetEmailProperties__phishing_sourceUserName = GetEmailProperties__phishing_reporter[:GetEmailProperties__phishing_reporter.index('@')]\n    except:\n        GetEmailProperties__phishing_sourceUserName = None\n        \n    ####\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='GetEmailProperties:phish_artifact_id', value=json.dumps(GetEmailProperties__phish_artifact_id))\n    phantom.save_run_data(key='GetEmailProperties:forwarded_artifact_id', value=json.dumps(GetEmailProperties__forwarded_artifact_id))\n    phantom.save_run_data(key='GetEmailProperties:vaultIdForExecutable', value=json.dumps(GetEmailProperties__vaultIdForExecutable))\n    phantom.save_run_data(key='GetEmailProperties:hasRanPreviously', value=json.dumps(GetEmailProperties__hasRanPreviously))\n    phantom.save_run_data(key='GetEmailProperties:hasMSGFileAttached', value=json.dumps(GetEmailProperties__hasMSGFileAttached))\n    phantom.save_run_data(key='GetEmailProperties:isEMLForwarded', value=json.dumps(GetEmailProperties__isEMLForwarded))\n    phantom.save_run_data(key='GetEmailProperties:isMSGForwarded', value=json.dumps(GetEmailProperties__isMSGForwarded))\n    phantom.save_run_data(key='GetEmailProperties:vaultHasPossibleExecutable', value=json.dumps(GetEmailProperties__vaultHasPossibleExecutable))\n    phantom.save_run_data(key='GetEmailProperties:vaultArtifactWithExecutable', value=json.dumps(GetEmailProperties__vaultArtifactWithExecutable))\n    phantom.save_run_data(key='GetEmailProperties:randomSID', value=json.dumps(GetEmailProperties__randomSID))\n    phantom.save_run_data(key='GetEmailProperties:phishing_reporter', value=json.dumps(GetEmailProperties__phishing_reporter))\n    phantom.save_run_data(key='GetEmailProperties:phishing_sourceUserName', value=json.dumps(GetEmailProperties__phishing_sourceUserName))\n    ifMSGFileAttached(container=container)\n    ifRanPreviously(container=container)\n    ifVaultHasExe(container=container)\n    ifPhishReporter(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 21,
                        "customCodeStartLine": 21,
                        "custom_callback": "",
                        "custom_code": "def GetEmailProperties(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('GetEmailProperties() called')\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_POV_Email_Properties_1:custom_function_result.data'], action_results=results)\n    custom_function_results_item_1_0 = [item[0] for item in custom_function_results_data_1]\n\n    GetEmailProperties__phish_artifact_id = None\n    GetEmailProperties__forwarded_artifact_id = None\n    GetEmailProperties__vaultIdForExecutable = None\n    GetEmailProperties__hasRanPreviously = None\n    GetEmailProperties__hasMSGFileAttached = None\n    GetEmailProperties__isEMLForwarded = None\n    GetEmailProperties__isMSGForwarded = None\n    GetEmailProperties__vaultHasPossibleExecutable = None\n    GetEmailProperties__vaultArtifactWithExecutable = None\n    GetEmailProperties__randomSID = None\n    GetEmailProperties__phishing_reporter = None\n    GetEmailProperties__phishing_sourceUserName = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    import string\n    import random\n    \n    def get_random_string(length):\n        \n        letters = string.ascii_letters\n        result_str = ''.join(random.choice(letters) for i in range(length))\n        \n        return result_str\n\n    GetEmailProperties__randomSID  = get_random_string(20)\n\n    try:\n        custom_function_results_item_1_0[0]['phish_artifact_id']\n        GetEmailProperties__phish_artifact_id = custom_function_results_item_1_0[0]['phish_artifact_id']\n    except:\n        GetEmailProperties__phish_artifact_id = None\n    \n    try:\n        custom_function_results_item_1_0[0]['forwarded_artifact_id']\n        GetEmailProperties__forwarded_artifact_id = custom_function_results_item_1_0[0]['forwarded_artifact_id']\n    except:\n        GetEmailProperties__forwarded_artifact_id = None\n    \n    try:\n        custom_function_results_item_1_0[0]['vaultIdForExecutable']\n        GetEmailProperties__vaultIdForExecutable = custom_function_results_item_1_0[0]['vaultIdForExecutable']\n    except:\n        GetEmailProperties__vaultIdForExecutable = None\n        \n    try:\n        custom_function_results_item_1_0[0]['hasRanPreviously']\n        GetEmailProperties__hasRanPreviously = custom_function_results_item_1_0[0]['hasRanPreviously']\n    except:\n        GetEmailProperties__hasRanPreviously = None\n\n    try:\n        custom_function_results_item_1_0[0]['hasMSGFileAttached']\n        GetEmailProperties__hasMSGFileAttached = custom_function_results_item_1_0[0]['hasMSGFileAttached']\n    except:\n        GetEmailProperties__hasMSGFileAttached = None\n\n    try:\n        custom_function_results_item_1_0[0]['isEMLForwarded']\n        GetEmailProperties__isEMLForwarded = custom_function_results_item_1_0[0]['isEMLForwarded']\n    except:\n        GetEmailProperties__isEMLForwarded = None  \n        \n    try:\n        custom_function_results_item_1_0[0]['isMSGForwarded']\n        GetEmailProperties__isMSGForwarded = custom_function_results_item_1_0[0]['isMSGForwarded']\n    except:\n        GetEmailProperties__isMSGForwarded = None   \n\n    try:\n        custom_function_results_item_1_0[0]['vaultHasPossibleExecutable']\n        GetEmailProperties__vaultHasPossibleExecutable = custom_function_results_item_1_0[0]['vaultHasPossibleExecutable']\n    except:\n        GetEmailProperties__vaultHasPossibleExecutable = None     \n        \n    try:\n        custom_function_results_item_1_0[0]['vaultArtifactWithExecutable']\n        GetEmailProperties__vaultArtifactWithExecutable = custom_function_results_item_1_0[0]['vaultArtifactWithExecutable']\n    except:\n        GetEmailProperties__vaultArtifactWithExecutable = None\n        \n    try:\n        custom_function_results_item_1_0[0]['phishing_reporter']\n        GetEmailProperties__phishing_reporter = custom_function_results_item_1_0[0]['phishing_reporter']\n        \n    except:\n        GetEmailProperties__phishing_reporter = None\n\n    try:\n        GetEmailProperties__phishing_sourceUserName = GetEmailProperties__phishing_reporter[:GetEmailProperties__phishing_reporter.index('@')]\n    except:\n        GetEmailProperties__phishing_sourceUserName = None\n        \n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='GetEmailProperties:phish_artifact_id', value=json.dumps(GetEmailProperties__phish_artifact_id))\n    phantom.save_run_data(key='GetEmailProperties:forwarded_artifact_id', value=json.dumps(GetEmailProperties__forwarded_artifact_id))\n    phantom.save_run_data(key='GetEmailProperties:vaultIdForExecutable', value=json.dumps(GetEmailProperties__vaultIdForExecutable))\n    phantom.save_run_data(key='GetEmailProperties:hasRanPreviously', value=json.dumps(GetEmailProperties__hasRanPreviously))\n    phantom.save_run_data(key='GetEmailProperties:hasMSGFileAttached', value=json.dumps(GetEmailProperties__hasMSGFileAttached))\n    phantom.save_run_data(key='GetEmailProperties:isEMLForwarded', value=json.dumps(GetEmailProperties__isEMLForwarded))\n    phantom.save_run_data(key='GetEmailProperties:isMSGForwarded', value=json.dumps(GetEmailProperties__isMSGForwarded))\n    phantom.save_run_data(key='GetEmailProperties:vaultHasPossibleExecutable', value=json.dumps(GetEmailProperties__vaultHasPossibleExecutable))\n    phantom.save_run_data(key='GetEmailProperties:vaultArtifactWithExecutable', value=json.dumps(GetEmailProperties__vaultArtifactWithExecutable))\n    phantom.save_run_data(key='GetEmailProperties:randomSID', value=json.dumps(GetEmailProperties__randomSID))\n    phantom.save_run_data(key='GetEmailProperties:phishing_reporter', value=json.dumps(GetEmailProperties__phishing_reporter))\n    phantom.save_run_data(key='GetEmailProperties:phishing_sourceUserName', value=json.dumps(GetEmailProperties__phishing_sourceUserName))\n    ifMSGFileAttached(container=container)\n    ifRanPreviously(container=container)\n    ifVaultHasExe(container=container)\n    ifPhishReporter(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "GetEmailProperties",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d8517e1c-1242-4c43-bb88-e401c8962ec8",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 174,
                        "line_start": 49,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Gets Global vars to use",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "phish_artifact_id"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "forwarded_artifact_id"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "vaultIdForExecutable"
                            },
                            {
                                "position": 3,
                                "type": "",
                                "value": "hasRanPreviously"
                            },
                            {
                                "position": 4,
                                "type": "",
                                "value": "hasMSGFileAttached"
                            },
                            {
                                "position": 5,
                                "type": "",
                                "value": "isEMLForwarded"
                            },
                            {
                                "position": 6,
                                "type": "",
                                "value": "isMSGForwarded"
                            },
                            {
                                "position": 7,
                                "type": "",
                                "value": "vaultHasPossibleExecutable"
                            },
                            {
                                "position": 8,
                                "type": "",
                                "value": "vaultArtifactWithExecutable"
                            },
                            {
                                "position": 9,
                                "type": "",
                                "value": "randomSID"
                            },
                            {
                                "position": 10,
                                "type": "",
                                "value": "phishing_reporter"
                            },
                            {
                                "position": 11,
                                "type": "",
                                "value": "phishing_sourceUserName"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "cf_local_POV_Email_Properties_1:custom_function_result.data"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 440,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "GetEmailProperties",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    import string\n    import random\n    \n    def get_random_string(length):\n        \n        letters = string.ascii_letters\n        result_str = ''.join(random.choice(letters) for i in range(length))\n        \n        return result_str\n\n    GetEmailProperties__randomSID  = get_random_string(20)\n\n    try:\n        custom_function_results_item_1_0[0]['phish_artifact_id']\n        GetEmailProperties__phish_artifact_id = custom_function_results_item_1_0[0]['phish_artifact_id']\n    except:\n        GetEmailProperties__phish_artifact_id = None\n    \n    try:\n        custom_function_results_item_1_0[0]['forwarded_artifact_id']\n        GetEmailProperties__forwarded_artifact_id = custom_function_results_item_1_0[0]['forwarded_artifact_id']\n    except:\n        GetEmailProperties__forwarded_artifact_id = None\n    \n    try:\n        custom_function_results_item_1_0[0]['vaultIdForExecutable']\n        GetEmailProperties__vaultIdForExecutable = custom_function_results_item_1_0[0]['vaultIdForExecutable']\n    except:\n        GetEmailProperties__vaultIdForExecutable = None\n        \n    try:\n        custom_function_results_item_1_0[0]['hasRanPreviously']\n        GetEmailProperties__hasRanPreviously = custom_function_results_item_1_0[0]['hasRanPreviously']\n    except:\n        GetEmailProperties__hasRanPreviously = None\n\n    try:\n        custom_function_results_item_1_0[0]['hasMSGFileAttached']\n        GetEmailProperties__hasMSGFileAttached = custom_function_results_item_1_0[0]['hasMSGFileAttached']\n    except:\n        GetEmailProperties__hasMSGFileAttached = None\n\n    try:\n        custom_function_results_item_1_0[0]['isEMLForwarded']\n        GetEmailProperties__isEMLForwarded = custom_function_results_item_1_0[0]['isEMLForwarded']\n    except:\n        GetEmailProperties__isEMLForwarded = None  \n        \n    try:\n        custom_function_results_item_1_0[0]['isMSGForwarded']\n        GetEmailProperties__isMSGForwarded = custom_function_results_item_1_0[0]['isMSGForwarded']\n    except:\n        GetEmailProperties__isMSGForwarded = None   \n\n    try:\n        custom_function_results_item_1_0[0]['vaultHasPossibleExecutable']\n        GetEmailProperties__vaultHasPossibleExecutable = custom_function_results_item_1_0[0]['vaultHasPossibleExecutable']\n    except:\n        GetEmailProperties__vaultHasPossibleExecutable = None     \n        \n    try:\n        custom_function_results_item_1_0[0]['vaultArtifactWithExecutable']\n        GetEmailProperties__vaultArtifactWithExecutable = custom_function_results_item_1_0[0]['vaultArtifactWithExecutable']\n    except:\n        GetEmailProperties__vaultArtifactWithExecutable = None\n        \n    try:\n        custom_function_results_item_1_0[0]['phishing_reporter']\n        GetEmailProperties__phishing_reporter = custom_function_results_item_1_0[0]['phishing_reporter']\n        \n    except:\n        GetEmailProperties__phishing_reporter = None\n\n    try:\n        GetEmailProperties__phishing_sourceUserName = GetEmailProperties__phishing_reporter[:GetEmailProperties__phishing_reporter.index('@')]\n    except:\n        GetEmailProperties__phishing_sourceUserName = None\n        \n    ####\n",
                        "warn": false,
                        "z": 333
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "GetMSGArtifactVaultId"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def GetMSGArtifactVaultId(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('GetMSGArtifactVaultId() called')\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filterVaultArtifacts:condition_1:artifact:*.cef'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    GetMSGArtifactVaultId__isMSGArtifact = None\n    GetMSGArtifactVaultId__vaultId = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    import re\n    phantom.debug(filtered_artifacts_item_1_0)\n    \n    for artifact in filtered_artifacts_item_1_0:\n        msgFile = re.search(\"\\.msg$\", artifact['fileName'])\n        if msgFile != None:\n            phantom.debug('Found MSG Artifact')\n            phantom.debug('setting vaultId to : {}'.format(artifact['vaultId']))\n            GetMSGArtifactVaultId__isMSGArtifact = True\n            GetMSGArtifactVaultId__vaultId = artifact['vaultId']\n            \n        else:\n            GetMSGArtifactVaultId__isMSGArtifact = False\n            phantom.debug('Not the MSG Artifact')\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='GetMSGArtifactVaultId:isMSGArtifact', value=json.dumps(GetMSGArtifactVaultId__isMSGArtifact))\n    phantom.save_run_data(key='GetMSGArtifactVaultId:vaultId', value=json.dumps(GetMSGArtifactVaultId__vaultId))\n    ifVaultIdReturned(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_Email_Properties",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 8,
                        "customCodeStartLine": 11,
                        "custom_callback": "",
                        "custom_code": "def GetMSGArtifactVaultId(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('GetMSGArtifactVaultId() called')\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_1:condition_1:artifact:*.cef'])\n    filtered_artifacts_item_1_0 = [item[0] for item in filtered_artifacts_data_1]\n\n    GetMSGArtifactVaultId__isMSGArtifact = None\n    GetMSGArtifactVaultId__vaultId = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    import re\n    phantom.debug(filtered_artifacts_item_1_0)\n    \n    for artifact in filtered_artifacts_item_1_0:\n        msgFile = re.search(\"\\.msg$\", artifact['fileName'])\n        if msgFile != None:\n            phantom.debug('Found MSG Artifact')\n            phantom.debug('setting vaultId to : {}'.format(artifact['vaultId']))\n            GetMSGArtifactVaultId__isMSGArtifact = True\n            GetMSGArtifactVaultId__vaultId = artifact['vaultId']\n            \n        else:\n            GetMSGArtifactVaultId__isMSGArtifact = False\n            phantom.debug('Not the MSG Artifact')\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='GetMSGArtifactVaultId:isMSGArtifact', value=json.dumps(GetMSGArtifactVaultId__isMSGArtifact))\n    phantom.save_run_data(key='GetMSGArtifactVaultId:vaultId', value=json.dumps(GetMSGArtifactVaultId__vaultId))\n    ifVaultIdReturned(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "GetMSGArtifactVaultId",
                        "description": "Searches Vault Artifacts for a fileName that ends in .msg, and returns the vaultId",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c2cc1e03-592c-4d2b-990d-6eeaf3a367ae",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 327,
                        "line_start": 289,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Searches Vault Artifacts for a fileName that ends in .msg, and returns the vaultId",
                        "number": 2,
                        "order": 9,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "isMSGArtifact"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "vaultId"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "filtered-data:filterVaultArtifacts:condition_1:artifact:*.cef"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": 440
                        },
                        "previous_function": "",
                        "previous_name": "GetMSGArtifactVaultId",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    import re\n    phantom.debug(filtered_artifacts_item_1_0)\n    \n    for artifact in filtered_artifacts_item_1_0:\n        msgFile = re.search(\"\\.msg$\", artifact['fileName'])\n        if msgFile != None:\n            phantom.debug('Found MSG Artifact')\n            phantom.debug('setting vaultId to : {}'.format(artifact['vaultId']))\n            GetMSGArtifactVaultId__isMSGArtifact = True\n            GetMSGArtifactVaultId__vaultId = artifact['vaultId']\n            \n        else:\n            GetMSGArtifactVaultId__isMSGArtifact = False\n            phantom.debug('Not the MSG Artifact')\n\n",
                        "warn": false,
                        "z": 334
                    }
                ]
            },
            "notes": "Operates in labels 'exch_eml_pf', 'imap_eml_pf', and 'o365_eml_pf' which are expected labels for the respective ingest apps."
        },
        "python_version": "3",
        "schema": 3,
        "version": "4.9.33153"
    },
    "create_time": "2021-07-27T11:23:55.836113+00:00",
    "draft_mode": false,
    "labels": [
        "events"
    ],
    "tags": []
}