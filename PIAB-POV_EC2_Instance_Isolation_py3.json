{
    "blockly": false,
    "blockly_xml": "<xml></xml>",
    "category": "Proof of Value",
    "coa": {
        "data": {
            "clean": true,
            "code_block": "\n",
            "description": "Isolate an EC2 instance by changing its security group in order to protect it from malicious traffic. This playbook can be started alone or used from another playbook after doing investigation and notification. The existing security group is removed from the instance and a new isolation security group is added.",
            "hash": "c78fb3281db841dd83fc2ea1ed828b062067e94a",
            "joint": {
                "cells": [
                    {
                        "0": "S",
                        "1": "T",
                        "2": "A",
                        "3": "R",
                        "4": "T",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "ref-x": 33,
                                "ref-y": 8,
                                "text": "START"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "ref-x": 13,
                                "xlink:href": "/inc/coa/img/block_icon_start.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_start(container):\n    phantom.debug('on_start() called')\n    \n    # call 'decision_2' block\n    decision_2(container=container)\n\n    return\n",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "760346fe-77a4-4702-b5d3-678b57a95b3f",
                        "inPorts": [],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 16,
                        "line_start": 8,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 1,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -140,
                            "y": -60
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "START",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 1
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8ee0e678-0827-4ec5-bb13-75f59f5f49d2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "da2641f9-ca0c-448b-ac36-d93efd64da1b",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d4a2fbc8-2f82-49e0-8c56-494ce2e24108",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 10
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c92738bf-674a-4bc8-b9ae-62d030aa9f0c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d4a2fbc8-2f82-49e0-8c56-494ce2e24108",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "59aafeaa-9a5d-4443-b4f7-95f3631e39a5",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 12
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "dc0fe23f-0741-455d-b2ac-378990f0eb2b",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "59aafeaa-9a5d-4443-b4f7-95f3631e39a5",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "517a6815-ddd2-4b8f-9de8-6482993b4afc",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 20
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "5764450c-fb8f-4876-87a9-7d74de164c4d",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "411c9e5f-cae3-45b3-b428-845ac534aed7",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "91de218e-5cc8-4e52-a22c-c69db842a64c",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 58
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a0e0a6d7-33f1-4be2-b466-838af760b75e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "517a6815-ddd2-4b8f-9de8-6482993b4afc",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "7558f5b4-f71b-463c-b2f0-3799841e8cd9",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 73
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "8a8b2b74-8c26-4bd5-81fc-a913f8f2ccb0",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "7558f5b4-f71b-463c-b2f0-3799841e8cd9",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "54d45cb9-ae79-4710-b1cf-a416d7acf33a",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 76
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "79faa50a-d137-42c6-a919-e1f288556c08",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c6c48959-f643-4210-bf66-5db4da9888bd",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "411c9e5f-cae3-45b3-b428-845ac534aed7",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 80
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "f6cebb2e-ba60-4d7c-8857-2ecded1cbda2",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "517a6815-ddd2-4b8f-9de8-6482993b4afc",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "aadf46ab-8cfc-45bc-96d7-c09dfb8453df",
                            "port": null,
                            "selector": "g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 86
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a839c36c-c72c-4f6f-99e6-bbab08069ded",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "f0558896-99ae-47ad-83d8-713469effcf2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b3298be4-7994-4b0c-9d17-164e14d6d993",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 124
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "34c78e54-1fdf-4ac8-8c5d-a5a772813d84",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b3298be4-7994-4b0c-9d17-164e14d6d993",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "da2641f9-ca0c-448b-ac36-d93efd64da1b",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 132
                    },
                    {
                        "action": "describe instance",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "dry_run": "",
                            "filters": "",
                            "instance_ids": "filtered-data:filter_ec2_resource:condition_1:artifact:*.cef.InstanceId",
                            "limit": ""
                        },
                        "angle": 0,
                        "app": "AWS EC2",
                        "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "describe instance",
                                "actions": [
                                    "list autoscaling groups",
                                    "list network interfaces",
                                    "create vpc",
                                    "remove instance",
                                    "assign instance",
                                    "list security groups",
                                    "remove acl",
                                    "add acl",
                                    "get acls",
                                    "remove tag",
                                    "add tag",
                                    "get tag",
                                    "snapshot instance",
                                    "deregister instance",
                                    "attach instance",
                                    "detach instance",
                                    "describe instance",
                                    "stop instance",
                                    "start instance",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS EC2",
                                "app_version": "1.0.3",
                                "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                                "asset_name": "matt aws ec2 us east 1",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "dry_run": "",
                                    "filters": "",
                                    "instance_ids": "filtered-data:filter_ec2_resource:condition_1:artifact:*.cef.InstanceId",
                                    "limit": ""
                                },
                                "has_app": true,
                                "id": 7,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_ec2",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.dry_run",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.filters",
                                        "data_type": "string",
                                        "example_values": [
                                            "{ \"Name\": \"vpc-id\", \"Values\": [ \"vpc-0840e9850b3f02915\"]}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.parameter.instance_ids",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            35
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_path": "action_result.data.*.NextToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "eyJ2IjoiMiIsImMiOiJxTVBvSm9GZmpOVFhrc2RYL0RDK3htaytZR0luRDhuTWR6SnN6VWNHcStSWGRwWTJ2cWtxZlBUWjY1QjJ3VzZRNlFqRkZaUzVrRDQ2V1lzTVpsY2dPSS9mVWNqVlVIbCtpaHV6b1dybnJWbXoxclp0T25YR3NvWVJRQkFuamhqaDlEN2o2dEtvcjB6bDBoeVo3clB2eGZOUlZxQUYzdWo5WnJKbTRRSmZqbHQzS0h1REhkWFI1Q1VmZnRLU2k2RkxhTkhaaUVkbXNPUlMwYnNYbkhVSHEwT0x1SmhEb2thTkc3R0tORkhaeWtIZCIsInMiOiIxIn0="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.AmiLaunchIndex",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Architecture",
                                        "data_type": "string",
                                        "example_values": [
                                            "x86_64"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.DeviceName",
                                        "data_type": "string",
                                        "example_values": [
                                            "/dev/xvda"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.AttachTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:22"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.DeleteOnTermination",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "attached"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.VolumeId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vol-0d8d4d266ac6ea76f"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CapacityReservationSpecification.CapacityReservationPreference",
                                        "data_type": "string",
                                        "example_values": [
                                            "open"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ClientToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "155010001974811618"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CpuOptions.CoreCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CpuOptions.ThreadsPerCore",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.EbsOptimized",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.EnaSupport",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.HibernationOptions.Configured",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Hypervisor",
                                        "data_type": "string",
                                        "example_values": [
                                            "xen"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.IamInstanceProfile.Arn",
                                        "data_type": "string",
                                        "example_values": [
                                            "arn:aws:iam::849257271967:instance-profile/test-1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.IamInstanceProfile.Id",
                                        "data_type": "string",
                                        "example_values": [
                                            "AIPAJBUYA2ZYFKHJ7WJJ4"
                                        ]
                                    },
                                    {
                                        "contanis": [
                                            "aws ec2 ami id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ImageId",
                                        "data_type": "string",
                                        "example_values": [
                                            "ami-061573a27231c6d25"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.InstanceId",
                                        "data_type": "string",
                                        "example_values": [
                                            "i-074f52e85356829a3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.InstanceType",
                                        "data_type": "string",
                                        "example_values": [
                                            "t2.medium"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.KeyName",
                                        "data_type": "string",
                                        "example_values": [
                                            "test-lab-ssh-keypair"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.LaunchTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Monitoring.State",
                                        "data_type": "string",
                                        "example_values": [
                                            "disabled"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.IpOwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "amazon"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.AttachTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.AttachmentId",
                                        "data_type": "string",
                                        "example_values": [
                                            "eni-attach-06d2e082fd98083ca"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.DeleteOnTermination",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.DeviceIndex",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "attached"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Description",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-07987bf5b796b5261"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Enterprise-7-2-0-AutogenByAWSMP-4"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.MacAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "12:1d:c2:5a:82:e6"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.NetworkInterfaceId",
                                        "data_type": "string",
                                        "example_values": [
                                            "eni-09579cbf4e49f8f65"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.IpOwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "amazon"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.PublicIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Primary",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.SourceDestCheck",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "in-use"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.SubnetId",
                                        "data_type": "string",
                                        "example_values": [
                                            "subnet-d8782cf7"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.AvailabilityZone",
                                        "data_type": "string",
                                        "example_values": [
                                            "us-east-1d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.Tenancy",
                                        "data_type": "string",
                                        "example_values": [
                                            "default"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Platform",
                                        "data_type": "string",
                                        "example_values": [
                                            "windows"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ProductCodes.*.ProductCodeId",
                                        "data_type": "string",
                                        "example_values": [
                                            "7azvchdfh74dcxoiwjhztgpel"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ProductCodes.*.ProductCodeType",
                                        "data_type": "string",
                                        "example_values": [
                                            "marketplace"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PublicIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.RootDeviceName",
                                        "data_type": "string",
                                        "example_values": [
                                            "/dev/xvda"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.RootDeviceType",
                                        "data_type": "string",
                                        "example_values": [
                                            "ebs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-07987bf5b796b5261"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Enterprise-7-2-0-AutogenByAWSMP-4"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SourceDestCheck",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.State.Code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            16
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.State.Name",
                                        "data_type": "string",
                                        "example_values": [
                                            "running"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateReason.Code",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateReason.Message",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateTransitionReason",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SubnetId",
                                        "data_type": "string",
                                        "example_values": [
                                            "subnet-d8782cf7"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.VirtualizationType",
                                        "data_type": "string",
                                        "example_values": [
                                            "hvm"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.RequesterId",
                                        "data_type": "string",
                                        "example_values": [
                                            "086189789714"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.ReservationId",
                                        "data_type": "string",
                                        "example_values": [
                                            "r-05ef1ae0985a72df5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "230"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "text/xml;charset=UTF-8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Wed, 27 Feb 2019 18:39:01 GMT",
                                            "Wed, 27 Feb 2019 18:40:25 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "AmazonEC2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.transfer-encoding",
                                        "data_type": "string",
                                        "example_values": [
                                            "chunked"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.vary",
                                        "data_type": "string",
                                        "example_values": [
                                            "Accept-Encoding"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "146815a0-5918-4305-8a77-540704c88939",
                                            "15f53d9a-179e-4402-8acb-be5787f6d0cf"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.num_instances",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            3
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Num instances: 0",
                                            "Num instances: 3"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "dry_run": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Check if asset has required permissions for the action",
                                        "key": "dry_run",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "filters": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more filters, separated by commas. Example: { 'Name': 'name1', 'Values': [ 'value1' ] }, { 'Name': 'name2', 'Values': [ 'value2' ] }",
                                        "key": "filters",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "instance_ids": {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more instance IDs, separated by commas",
                                        "key": "instance_ids",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "The maximum number of results to be fetched",
                                        "key": "limit",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    }
                                },
                                "product_name": "EC2",
                                "product_vendor": "AWS",
                                "targets": "7",
                                "type": "virtualization"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "describe instance before"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def describe_instance_before(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('describe_instance_before() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'describe_instance_before' call\n    filtered_artifacts_data_1 = phantom.collect2(container=container, datapath=['filtered-data:filter_ec2_resource:condition_1:artifact:*.cef.InstanceId', 'filtered-data:filter_ec2_resource:condition_1:artifact:*.id'])\n\n    parameters = []\n    \n    # build parameters list for 'describe_instance_before' call\n    for filtered_artifacts_item_1 in filtered_artifacts_data_1:\n        parameters.append({\n            'limit': \"\",\n            'dry_run': \"\",\n            'filters': \"\",\n            'instance_ids': filtered_artifacts_item_1[0],\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': filtered_artifacts_item_1[1]},\n        })\n\n    phantom.act(action=\"describe instance\", parameters=parameters, assets=['aws_ec2'], callback=add_isolation_SG, name=\"describe_instance_before\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 64,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "TaskInProgress",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "describe instance before",
                        "delay": 0,
                        "description": "Gather EC2 instance metadata before making any changes.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "da2641f9-ca0c-448b-ac36-d93efd64da1b",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 64,
                        "line_start": 39,
                        "message": "Configuring now",
                        "name": "describe instance",
                        "notes": "Gather EC2 instance metadata before making any changes.",
                        "number": 1,
                        "order": 3,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 40,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "describe_instance_before",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 142
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "32a3f36a-82a0-4c8f-a776-63c71c72b15f",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "760346fe-77a4-4702-b5d3-678b57a95b3f",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "e331d67c-c5f7-4ed5-8030-907220808f7f",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 158
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 2
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_2() called')\n    \n    description_param = container.get('description', None)\n    description_value = container.get('description', None)\n    description_value = container.get('description', None)\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        conditions=[\n            [description_param, \"==\", \"EC2 instance has an unprotected port which is being probed by a known malicious host.\"],\n            [\"Unprotected port on EC2 instance\", \"in\", description_value],\n            [\"brute force attacks against\", \"in\", description_value],\n        ],\n        logical_operator='or')\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        filter_ec2_resource(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "e331d67c-c5f7-4ed5-8030-907220808f7f",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 412,
                        "line_start": 388,
                        "name": "decision",
                        "notes": "",
                        "number": 2,
                        "order": 17,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "container:description",
                                        "value": "EC2 instance has an unprotected port which is being probed by a known malicious host."
                                    },
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "Unprotected port on EC2 instance",
                                        "value": "container:description"
                                    },
                                    {
                                        "comparison": "in",
                                        "data_type": "",
                                        "param": "brute force attacks against",
                                        "value": "container:description"
                                    }
                                ],
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": -20,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "decision_2",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 160
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "26d62722-3e5e-4fc2-bb66-75ecd2f496ca",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "e331d67c-c5f7-4ed5-8030-907220808f7f",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "2ad6e8c9-1a67-4928-8996-64d219562383",
                            "port": "in",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 161
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def filter_ec2_resource(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('filter_ec2_resource() called')\n\n    # collect filtered artifact ids for 'if' condition 1\n    matched_artifacts_1, matched_results_1 = phantom.condition(\n        container=container,\n        conditions=[\n            [\"artifact:*.name\", \"==\", \"AwsEc2Instance Resource Artifact\"],\n        ],\n        name=\"filter_ec2_resource:condition_1\")\n\n    # call connected blocks if filtered artifacts or results\n    if matched_artifacts_1 or matched_results_1:\n        cf_local_POV_set_event_owner_to_current_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function, filtered_artifacts=matched_artifacts_1, filtered_results=matched_results_1)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "filter_ec2_resource",
                        "description": "Separate the EC2 resource from the other artifacts in the Finding.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "2ad6e8c9-1a67-4928-8996-64d219562383",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 36,
                        "line_start": 19,
                        "name": "filter",
                        "notes": "Separate the EC2 resource from the other artifacts in the Finding.",
                        "number": 1,
                        "order": 2,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "artifact:*.name",
                                        "value": "AwsEc2Instance Resource Artifact"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 100,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "filter_ec2_resource",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "filter",
                        "status": "",
                        "type": "coa.Filter",
                        "warn": false,
                        "z": 162
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "3447b35e-2257-4885-b96b-0e3b1df5a3bd",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "2ad6e8c9-1a67-4928-8996-64d219562383",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "b9cc5b26-3154-442d-a50c-7412c14e9552",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 166
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "609e2389-9911-4a06-8dfc-b2a4408e7f8e",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b9cc5b26-3154-442d-a50c-7412c14e9552",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1a50e8e5-b3eb-41aa-b789-833d1b17ff56",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 168
                    },
                    {
                        ".scmName/text": "local",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "POV_get_current_task"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_local_POV_get_current_task_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_POV_get_current_task_1() called')\n    \n    custom_function_result_0 = phantom.collect2(container=container, datapath=['cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner'], action_results=results )\n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n\n    parameters = []\n\n    container_property_0_0 = [item[0] for item in container_property_0]\n    custom_function_result_0_0 = [item[0] for item in custom_function_result_0]\n\n    parameters.append({\n        'container': container_property_0_0,\n        'currentOwner': custom_function_result_0_0,\n    })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/POV_get_current_task\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/POV_get_current_task', parameters=parameters, name='cf_local_POV_get_current_task_1', callback=decision_3)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "local/POV_get_current_task",
                        "cfInputs": {
                            "container": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "container_property_0_0",
                                "type": "list"
                            },
                            "currentOwner": {
                                "collectionType": "custom_function_result",
                                "dataPath": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner",
                                "paramName": "custom_function_result_0_0",
                                "type": "list"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "POV_set_event_owner_to_current",
                        "connection_type": "action",
                        "container-0": "container:id",
                        "currentOwner-1": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 22,
                        "customFunction": "local/POV_get_current_task",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1a50e8e5-b3eb-41aa-b789-833d1b17ff56",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 477,
                        "line_start": 443,
                        "message": "Configuring now",
                        "name": "POV_get_current_task",
                        "notes": "",
                        "number": 1,
                        "order": 19,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 440,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_POV_get_current_task_1",
                        "selectedCustomFunction": {
                            "description": "Gets the current task in the phase, and returns the task_id, and current owner of the playbook",
                            "draftMode": false,
                            "id": 362,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "description": "",
                                    "id": 927,
                                    "input_type": "list",
                                    "name": "container",
                                    "placeholder": "container:id"
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "description": "",
                                    "id": 928,
                                    "input_type": "list",
                                    "name": "currentOwner",
                                    "placeholder": ""
                                }
                            ],
                            "name": "POV_get_current_task",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "task_body",
                                    "description": "",
                                    "id": 1197
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "task_id",
                                    "description": "",
                                    "id": 1198
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "next_playbook",
                                    "description": "",
                                    "id": 1199
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "workflow_task_url",
                                    "description": "",
                                    "id": 1200
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "status",
                                    "description": "",
                                    "id": 1201
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "message",
                                    "description": "",
                                    "id": 1202
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "task_name",
                                    "description": "Name of the Task in the workbook",
                                    "id": 1203
                                },
                                {
                                    "_pretty_custom_function": "POV_get_current_task",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 362,
                                    "data_path": "current_playbook_name",
                                    "description": "This Playbook Executing Now.",
                                    "id": 1204
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_Instance_Investigation",
                                        "draft_mode": false,
                                        "id": 973,
                                        "name": "POV_EC2_Instance_Investigation",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_AddContext_LDAP",
                                        "draft_mode": false,
                                        "id": 832,
                                        "name": "POV_AddContext_LDAP",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Review_Indicators_Manually",
                                        "draft_mode": false,
                                        "id": 833,
                                        "name": "POV_Review_Indicators_Manually",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Hunt_Email_Indicators",
                                        "draft_mode": false,
                                        "id": 834,
                                        "name": "POV_Hunt_Email_Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Sinkhole_or_Block_External_Indicators",
                                        "draft_mode": false,
                                        "id": 873,
                                        "name": "POV_Sinkhole_or_Block_External_Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_malicious_insider_containment",
                                        "draft_mode": false,
                                        "id": 876,
                                        "name": "POV_malicious_insider_containment",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Accept_Event",
                                        "draft_mode": false,
                                        "id": 880,
                                        "name": "POV_Accept_Event",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/Sinkhole or Block external indicators of compromise",
                                        "draft_mode": false,
                                        "id": 820,
                                        "name": "Sinkhole or Block external indicators of compromise",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/Hunt Indicators",
                                        "draft_mode": false,
                                        "id": 765,
                                        "name": "Hunt Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_Remote_Probe_Context",
                                        "draft_mode": false,
                                        "id": 970,
                                        "name": "POV_EC2_Remote_Probe_Context",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_AWS_Context",
                                        "draft_mode": false,
                                        "id": 957,
                                        "name": "POV_EC2_AWS_Context",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...\n",
                        "warn": false,
                        "z": 169
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "c1046e1f-a49f-4da9-b8fe-d633524683f3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1a50e8e5-b3eb-41aa-b789-833d1b17ff56",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "1e6b3ad4-c2ec-45b2-be50-45b67ea8e874",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 171
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 3
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_3() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"cf_local_POV_get_current_task_1:custom_function_result.data.status\", \"==\", \"failed\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        add_comment_3(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    TaskInProgress(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "POV_get_current_task",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "1e6b3ad4-c2ec-45b2-be50-45b67ea8e874",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 498,
                        "line_start": 477,
                        "name": "decision",
                        "notes": "",
                        "number": 3,
                        "order": 20,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "cf_local_POV_get_current_task_1:custom_function_result.data.status",
                                        "value": "failed"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 660,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "decision_3",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 172
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "ef68c6be-05a8-44f1-b656-a1860ba1b405",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1e6b3ad4-c2ec-45b2-be50-45b67ea8e874",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "af6366af-6d36-422f-8f40-c84fe6086e77",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 173
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "add comment"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_comment_3(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_comment_3() called')\n\n    phantom.comment(container=container, comment=\"Unable to get the current task id\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "Unable to get the current task id",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "POV_get_current_task",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "af6366af-6d36-422f-8f40-c84fe6086e77",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 505,
                        "line_start": 498,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "",
                        "number": 3,
                        "order": 21,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1180,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "add_comment_3",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 174
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "a9b0e456-4768-4308-8efb-1868d70c2d7a",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "b3298be4-7994-4b0c-9d17-164e14d6d993",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "3d615793-7308-49de-9316-6ecf356701f0",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 183
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "dd211639-0aa1-49b0-bf6a-b04ab1c849e8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "3d615793-7308-49de-9316-6ecf356701f0",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "a7f8d94b-6380-4a06-a445-74791c9cde12",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 186
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "add comment"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_comment_2(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_comment_2() called')\n\n    phantom.comment(container=container, comment=\"Failed - No Isolation or Bad Isolation Security Group - Check globalconfig\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "Failed - No Isolation or Bad Isolation Security Group - Check globalconfig",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": false,
                        "connection_name": "update task 1",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "fe24f285-32f1-4b8a-b3d2-269bb5721431",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 388,
                        "line_start": 381,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "",
                        "number": 2,
                        "order": 16,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1180,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "add_comment_2",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 188
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "6c0a0328-6a3f-484b-b1ba-513862e2c3aa",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "a7f8d94b-6380-4a06-a445-74791c9cde12",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "fe24f285-32f1-4b8a-b3d2-269bb5721431",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 190
                    },
                    {
                        ".scmName/text": "local",
                        "active": false,
                        "active_keys": {},
                        "active_values": {},
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".customFunction": {
                                "text": "POV_set_event_owner_to..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".scmName": {
                                "text": "local"
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            ".title-info": {
                                "text": ""
                            },
                            "g.branch image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def cf_local_POV_set_event_owner_to_current_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('cf_local_POV_set_event_owner_to_current_1() called')\n    \n    container_property_0 = [\n        [\n            container.get(\"id\"),\n        ],\n    ]\n\n    parameters = []\n\n    container_property_0_0 = [item[0] for item in container_property_0]\n\n    parameters.append({\n        'container': container_property_0_0,\n    })\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################    \n\n    # call custom function \"local/POV_set_event_owner_to_current\", returns the custom_function_run_id\n    phantom.custom_function(custom_function='local/POV_set_event_owner_to_current', parameters=parameters, name='cf_local_POV_set_event_owner_to_current_1', callback=cf_local_POV_get_current_task_1)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "cfDisplayPath": "local/POV_set_event_owner_to_current",
                        "cfInputs": {
                            "container": {
                                "collectionType": "container_property",
                                "dataPath": "container:id",
                                "paramName": "container_property_0_0",
                                "type": "list"
                            }
                        },
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "",
                        "connection_type": "",
                        "container-0": "container:id",
                        "currentVersion": true,
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 19,
                        "customFunction": "local/POV_set_event_owner_to_current",
                        "customFunctionId": null,
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "draftMode": false,
                        "existingCF": true,
                        "functionBlock": "custom function",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b9cc5b26-3154-442d-a50c-7412c14e9552",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 443,
                        "line_start": 412,
                        "message": "Configuring now",
                        "name": "POV_set_event_owner_to_current",
                        "notes": "",
                        "number": 1,
                        "order": 18,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 220,
                            "y": -80
                        },
                        "previous_function": "",
                        "previous_name": "cf_local_POV_set_event_owner_to_current_1",
                        "selectedCustomFunction": {
                            "description": "Grabs the user running the playbook and sets the owner of the event to the current user. Passes current_owner out for downstream use.\n\nDerek King  - Splunk",
                            "draftMode": false,
                            "id": 291,
                            "inputs": [
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "phantom container id"
                                    ],
                                    "custom_function": 291,
                                    "description": "Container id",
                                    "id": 667,
                                    "input_type": "list",
                                    "name": "container",
                                    "placeholder": "id"
                                }
                            ],
                            "name": "POV_set_event_owner_to_current",
                            "outputs": [
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "currentOwner",
                                    "description": "Current owner running the playbook",
                                    "id": 1089
                                },
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "userUrl",
                                    "description": "",
                                    "id": 1090
                                },
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "status",
                                    "description": "",
                                    "id": 1091
                                },
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "message",
                                    "description": "",
                                    "id": 1092
                                },
                                {
                                    "_pretty_custom_function": "POV_set_event_owner_to_current",
                                    "contains_type": [
                                        "*"
                                    ],
                                    "custom_function": 291,
                                    "data_path": "username",
                                    "description": "",
                                    "id": 1093
                                }
                            ],
                            "playbooks": {
                                "draft_playbooks": [],
                                "draft_version_id": null,
                                "playbooks": [
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_Instance_Investigation",
                                        "draft_mode": false,
                                        "id": 973,
                                        "name": "POV_EC2_Instance_Investigation",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/Sinkhole or Block external indicators of compromise",
                                        "draft_mode": false,
                                        "id": 820,
                                        "name": "Sinkhole or Block external indicators of compromise",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Sinkhole_or_Block_External_Indicators",
                                        "draft_mode": false,
                                        "id": 873,
                                        "name": "POV_Sinkhole_or_Block_External_Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_malicious_insider_containment",
                                        "draft_mode": false,
                                        "id": 876,
                                        "name": "POV_malicious_insider_containment",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Accept_Event",
                                        "draft_mode": false,
                                        "id": 880,
                                        "name": "POV_Accept_Event",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_AddContext_LDAP",
                                        "draft_mode": false,
                                        "id": 832,
                                        "name": "POV_AddContext_LDAP",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Review_Indicators_Manually",
                                        "draft_mode": false,
                                        "id": 833,
                                        "name": "POV_Review_Indicators_Manually",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_Hunt_Email_Indicators",
                                        "draft_mode": false,
                                        "id": 834,
                                        "name": "POV_Hunt_Email_Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/AAA2",
                                        "draft_mode": false,
                                        "id": 565,
                                        "name": "AAA2",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/Hunt Indicators",
                                        "draft_mode": false,
                                        "id": 765,
                                        "name": "Hunt Indicators",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_Remote_Probe_Context",
                                        "draft_mode": false,
                                        "id": 970,
                                        "name": "POV_EC2_Remote_Probe_Context",
                                        "viewable": true
                                    },
                                    {
                                        "active": false,
                                        "display_path": "local/POV_EC2_AWS_Context",
                                        "draft_mode": false,
                                        "id": 957,
                                        "name": "POV_EC2_AWS_Context",
                                        "viewable": true
                                    }
                                ]
                            },
                            "scmId": 2,
                            "scmName": "local"
                        },
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "repo",
                        "status": "",
                        "title": "custom function",
                        "type": "coa.CustomFunctionBlock",
                        "userGeneratedCode": "    # Write your custom code here...\n",
                        "warn": false,
                        "z": 195
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "75dd53d9-98de-412a-af3d-12cf3aab9317",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "517a6815-ddd2-4b8f-9de8-6482993b4afc",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c9262df7-775a-46c5-a2c0-0c39d1932c60",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 208
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "da26d47c-7d24-448d-8b0d-408c970925c3",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c9262df7-775a-46c5-a2c0-0c39d1932c60",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c6c48959-f643-4210-bf66-5db4da9888bd",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 209
                    },
                    {
                        "action": "assign instance",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "group_id": "GetIsolationSecurityGroup:custom_function:isolationGroup",
                            "instance_id": "describe_instance_before:action_result.parameter.instance_ids"
                        },
                        "angle": 0,
                        "app": "AWS EC2",
                        "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "assign instance",
                                "actions": [
                                    "list autoscaling groups",
                                    "list network interfaces",
                                    "create vpc",
                                    "remove instance",
                                    "assign instance",
                                    "list security groups",
                                    "remove acl",
                                    "add acl",
                                    "get acls",
                                    "remove tag",
                                    "add tag",
                                    "get tag",
                                    "snapshot instance",
                                    "deregister instance",
                                    "attach instance",
                                    "detach instance",
                                    "describe instance",
                                    "stop instance",
                                    "start instance",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS EC2",
                                "app_version": "1.0.3",
                                "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                                "asset_name": "matt aws ec2 us east 1",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "group_id": "GetIsolationSecurityGroup:custom_function:isolationGroup",
                                    "instance_id": "describe_instance_before:action_result.parameter.instance_ids"
                                },
                                "has_app": true,
                                "id": 7,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_ec2",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Group ID",
                                        "column_order": 1,
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_path": "action_result.parameter.group_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-00c60fd41aea33c09"
                                        ]
                                    },
                                    {
                                        "column_name": "Instance ID",
                                        "column_order": 0,
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.parameter.instance_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "i-074f52e85356829a3",
                                            "i-002f4fd5cabdf8cf0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "263"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "text/xml;charset=UTF-8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Tue, 26 Feb 2019 01:05:03 GMT",
                                            "Fri, 12 Apr 2019 06:54:29 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "AmazonEC2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "5b8d85e9-81c0-4e72-bd9e-90f598508ed1",
                                            "751d6a5c-0b8f-48e0-bb23-3129f897c1a8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully added instance to security group"
                                        ]
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 2,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Status: Successfully added instance to security group"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "group_id": {
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The security group ID to add",
                                        "key": "group_id",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    },
                                    "instance_id": {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The ID of the instance",
                                        "key": "instance_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "EC2",
                                "product_vendor": "AWS",
                                "targets": "7",
                                "type": "virtualization"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "add isolation SG"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_isolation_SG(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_isolation_SG() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    GetIsolationSecurityGroup__isolationGroup = json.loads(phantom.get_run_data(key='GetIsolationSecurityGroup:isolationGroup'))\n    # collect data for 'add_isolation_SG' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_instance_before:action_result.parameter.instance_ids', 'describe_instance_before:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'add_isolation_SG' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'group_id': GetIsolationSecurityGroup__isolationGroup,\n                'instance_id': results_item_1[0],\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"assign instance\", parameters=parameters, assets=['aws_ec2'], callback=remove_existing_SGs, name=\"add_isolation_SG\", parent_action=action)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe instance before",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "add isolation SG",
                        "delay": 0,
                        "description": "Add the isolation security group to the EC2 instance.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d4a2fbc8-2f82-49e0-8c56-494ce2e24108",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 92,
                        "line_start": 67,
                        "message": "Configuring now",
                        "name": "assign instance",
                        "notes": "Add the isolation security group to the EC2 instance.",
                        "number": 1,
                        "order": 4,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 260,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "add_isolation_SG",
                        "required_params": {
                            "group_id": true,
                            "instance_id": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 212
                    },
                    {
                        "action": "remove instance",
                        "action_type": "contain",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "group_id": "describe_instance_before:action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                            "instance_id": "add_isolation_SG:action_result.parameter.instance_id"
                        },
                        "angle": 0,
                        "app": "AWS EC2",
                        "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "remove instance",
                                "actions": [
                                    "list autoscaling groups",
                                    "list network interfaces",
                                    "create vpc",
                                    "remove instance",
                                    "assign instance",
                                    "list security groups",
                                    "remove acl",
                                    "add acl",
                                    "get acls",
                                    "remove tag",
                                    "add tag",
                                    "get tag",
                                    "snapshot instance",
                                    "deregister instance",
                                    "attach instance",
                                    "detach instance",
                                    "describe instance",
                                    "stop instance",
                                    "start instance",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS EC2",
                                "app_version": "1.0.3",
                                "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                                "asset_name": "matt aws ec2 us east 1",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "group_id": "describe_instance_before:action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                                    "instance_id": "add_isolation_SG:action_result.parameter.instance_id"
                                },
                                "has_app": true,
                                "id": 7,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_ec2",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Group ID",
                                        "column_order": 1,
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_path": "action_result.parameter.group_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-00c60fd41aea33c09"
                                        ]
                                    },
                                    {
                                        "column_name": "Instance ID",
                                        "column_order": 0,
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.parameter.instance_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "i-074f52e85356829a3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "263"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "text/xml;charset=UTF-8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Tue, 26 Feb 2019 00:58:55 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "AmazonEC2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "cd58da56-a011-4921-98aa-cc8dc333f284"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "Successfully removed instance from security group"
                                        ]
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 2,
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Status: Successfully removed instance from security group"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "group_id": {
                                        "contains": [
                                            "aws ec2 group id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The security group ID to remove",
                                        "key": "group_id",
                                        "order": 1,
                                        "primary": true,
                                        "required": true
                                    },
                                    "instance_id": {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The ID of the instance",
                                        "key": "instance_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    }
                                },
                                "product_name": "EC2",
                                "product_vendor": "AWS",
                                "targets": "7",
                                "type": "virtualization"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "remove existing SGs"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Contain"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_contain.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def remove_existing_SGs(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('remove_existing_SGs() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'remove_existing_SGs' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_instance_before:action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId', 'describe_instance_before:action_result.parameter.context.artifact_id'], action_results=results)\n    results_data_2 = phantom.collect2(container=container, datapath=['add_isolation_SG:action_result.parameter.instance_id', 'add_isolation_SG:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'remove_existing_SGs' call\n    for results_item_1 in results_data_1:\n        for results_item_2 in results_data_2:\n            if results_item_1[0] and results_item_2[0]:\n                parameters.append({\n                    'group_id': results_item_1[0],\n                    'instance_id': results_item_2[0],\n                    # context (artifact id) is added to associate results with the artifact\n                    'context': {'artifact_id': results_item_1[1]},\n                })\n\n    phantom.act(action=\"remove instance\", parameters=parameters, assets=['aws_ec2'], callback=describe_instance_after, name=\"remove_existing_SGs\", parent_action=action)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "add isolation SG",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "remove existing SGs",
                        "delay": 0,
                        "description": "Remove any pre-existing security groups that were part of the insecure configuration.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "59aafeaa-9a5d-4443-b4f7-95f3631e39a5",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 121,
                        "line_start": 95,
                        "message": "Configuring now",
                        "name": "remove instance",
                        "notes": "Remove any pre-existing security groups that were part of the insecure configuration.",
                        "number": 1,
                        "order": 5,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 480,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "remove_existing_SGs",
                        "required_params": {
                            "group_id": true,
                            "instance_id": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Contain",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 213
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "cf7adb1c-abe5-4eb7-b827-80109dbf6e19",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "91de218e-5cc8-4e52-a22c-c69db842a64c",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "d7d6c513-d261-46c0-b845-25d1992583e2",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 225
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "770f7716-9e06-4780-b8b2-a8f34321b36c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "d7d6c513-d261-46c0-b845-25d1992583e2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0b46de0b-9e14-4dd6-9dc0-70d33ee4d47a",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 227
                    },
                    {
                        "0": "E",
                        "1": "N",
                        "2": "D",
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".title": {
                                "text": "END"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_end.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            }
                        },
                        "block_code": "def on_finish(container, summary):\n    phantom.debug('on_finish() called')\n    # This function is called after all actions are completed.\n    # summary of all the action and/or all details of actions\n    # can be collected here.\n\n    # summary_json = phantom.get_summary()\n    # if 'result' in summary_json:\n        # for action_result in summary_json['result']:\n            # if 'action_run_id' in action_result:\n                # action_results = phantom.get_action_results(action_run_id=action_result['action_run_id'], result_data=False, flatten=False)\n                # phantom.debug(action_results)\n\n    return\n",
                        "callback_code": "# read-only block view not available",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "CompleteTask, POV_get_current_task",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "0b46de0b-9e14-4dd6-9dc0-70d33ee4d47a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "# read-only block view not available",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 662,
                        "line_start": 649,
                        "name": "",
                        "notes": "",
                        "number": 0,
                        "order": 28,
                        "outPorts": [],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 2060,
                            "y": 400
                        },
                        "previous_function": "",
                        "previous_name": "",
                        "show_number": true,
                        "size": {
                            "height": 54,
                            "width": 80
                        },
                        "status": "",
                        "title": "END",
                        "type": "coa.StartEnd",
                        "warn": false,
                        "z": 228
                    },
                    {
                        "action": "list connections",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "ip_hostname": "describe_instance_after:action_result.data.*.Reservations.*.Instances.*.PublicDnsName",
                            "local_addr": "",
                            "local_port": "",
                            "remote_addr": "",
                            "remote_port": ""
                        },
                        "angle": 0,
                        "app": "SSH",
                        "appid": "d37aa7fe-c973-44ee-a164-2ca5bf321b1f",
                        "approver": "",
                        "assets": [
                            {
                                "action": "list connections",
                                "actions": [
                                    "put file",
                                    "get file",
                                    "get memory usage",
                                    "get disk usage",
                                    "list processes",
                                    "logoff user",
                                    "terminate process",
                                    "shutdown system",
                                    "reboot system",
                                    "delete firewall rule",
                                    "list firewall rules",
                                    "block ip",
                                    "list connections",
                                    "execute program",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "SSH",
                                "app_version": "1.0.47",
                                "appid": "d37aa7fe-c973-44ee-a164-2ca5bf321b1f",
                                "asset_name": "ssh",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "ip_hostname": "describe_instance_after:action_result.data.*.Reservations.*.Instances.*.PublicDnsName",
                                    "local_addr": "",
                                    "local_port": "",
                                    "remote_addr": "",
                                    "remote_port": ""
                                },
                                "has_app": true,
                                "id": 20,
                                "loaded": false,
                                "missing": false,
                                "name": "ssh",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip",
                                            "host name"
                                        ],
                                        "data_path": "action_result.parameter.ip_hostname",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.local_addr",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.parameter.local_port",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.parameter.remote_addr",
                                        "data_type": "string"
                                    },
                                    {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.parameter.remote_port",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Name",
                                        "column_order": 0,
                                        "data_path": "action_result.data.*.connections.*.cmd",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.connections.*.inode",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Local IP",
                                        "column_order": 2,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.local_ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Local Port",
                                        "column_order": 3,
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.local_port",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Pid",
                                        "column_order": 1,
                                        "contains": [
                                            "pid"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.pid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.connections.*.protocol",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.connections.*.rec_q",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Remote IP",
                                        "column_order": 4,
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.remote_ip",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Remote Port",
                                        "column_order": 5,
                                        "contains": [
                                            "port"
                                        ],
                                        "data_path": "action_result.data.*.connections.*.remote_port",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data.*.connections.*.send_q",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "State",
                                        "column_order": 6,
                                        "data_path": "action_result.data.*.connections.*.state",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "User",
                                        "column_order": 7,
                                        "data_path": "action_result.data.*.connections.*.uid",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.exit_status",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric"
                                    }
                                ],
                                "parameters": {
                                    "ip_hostname": {
                                        "contains": [
                                            "ip",
                                            "host name"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Hostname/IP to list network connections on",
                                        "key": "ip_hostname",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "local_addr": {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Local ip to filter on",
                                        "key": "local_addr",
                                        "order": 1,
                                        "required": false
                                    },
                                    "local_port": {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Local port to match",
                                        "key": "local_port",
                                        "order": 2,
                                        "required": false
                                    },
                                    "remote_addr": {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Remote ip to filter on",
                                        "key": "remote_addr",
                                        "order": 3,
                                        "required": false
                                    },
                                    "remote_port": {
                                        "contains": [
                                            "port"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Remote port to match",
                                        "key": "remote_port",
                                        "order": 4,
                                        "required": false
                                    }
                                },
                                "product_name": "SSH",
                                "product_vendor": "Generic",
                                "targets": "20",
                                "type": "endpoint"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "list connections"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def list_connections_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('list_connections_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'list_connections_1' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_instance_after:action_result.data.*.Reservations.*.Instances.*.PublicDnsName', 'describe_instance_after:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'list_connections_1' call\n    for results_item_1 in results_data_1:\n        if results_item_1[0]:\n            parameters.append({\n                'local_addr': \"\",\n                'local_port': \"\",\n                'ip_hostname': results_item_1[0],\n                'remote_addr': \"\",\n                'remote_port': \"\",\n                # context (artifact id) is added to associate results with the artifact\n                'context': {'artifact_id': results_item_1[1]},\n            })\n\n    phantom.act(action=\"list connections\", parameters=parameters, assets=['ssh'], callback=decision_4, name=\"list_connections_1\", parent_action=action)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "List active TCP and UDP connections to show which traffic is still reaching the instance and to show that Phantom still has SSH access to the instance.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "aadf46ab-8cfc-45bc-96d7-c09dfb8453df",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 280,
                        "line_end": 323,
                        "line_start": 296,
                        "message": "Configuring now",
                        "name": "list connections",
                        "notes": "List active TCP and UDP connections to show which traffic is still reaching the instance and to show that Phantom still has SSH access to the instance.",
                        "number": 1,
                        "order": 13,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "list_connections_1",
                        "required_params": {
                            "ip_hostname": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 234
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".functionBlock": {
                                "text": "GetIsolationSecurityGrou..."
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "custom function"
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn_grey.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def GetIsolationSecurityGroup(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('GetIsolationSecurityGroup() called')\n    \n    input_parameter_0 = \"\"\n\n    GetIsolationSecurityGroup__isolationGroup = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    success, message, results = phantom.get_list(list_name=\"globalconfig\", values=\"isolation_sg\", trace=False)\n    phantom.debug('Printing success: {0}, message: {1}, results: {2}, '.format(success, message, results))\n    \n    isolation_sg = results['matches'][0]['value'][1]\n    phantom.debug(\"Isolation Group: {}\".format(isolation_sg))\n    if not isolation_sg:\n        GetIsolationSecurityGroup__isolationGroup = \"badValue\"\n        phantom.debug('Isolation Group: BadValue - Check global config custom list')\n        return\n    \n    GetIsolationSecurityGroup__isolationGroup = isolation_sg\n    phantom.debug(\"Leaving - Isolation Group is: {}\".format(GetIsolationSecurityGroup__isolationGroup))\n    ########################################################\n    ########################################################\n\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='GetIsolationSecurityGroup:isolationGroup', value=json.dumps(GetIsolationSecurityGroup__isolationGroup))\n    decision_1(container=container)\n\n    return",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "TaskInProgress",
                        "connection_type": "action",
                        "customCodeEndLineOffset": 7,
                        "customCodeStartLine": 10,
                        "custom_callback": "",
                        "custom_code": "def GetIsolationSecurityGroup(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('GetIsolationSecurityGroup() called')\n    input_parameter_0 = \"\"\n\n    GetIsolationSecurityGroup__isolationGroup = None\n\n    ################################################################################\n    ## Custom Code Start\n    ################################################################################\n\n    # Write your custom code here...\n    success, message, results = phantom.get_list(list_name=\"globalconfig\", values=\"isolation_sg\", trace=False)\n    phantom.debug('Printing success: {0}, message: {1}, results: {2}, '.format(success, message, results))\n    \n    isolation_sg = results['matches'][0]['value'][1]\n    phantom.debug(\"Isolation Group: {}\".format(isolation_sg))\n    if not isolation_sg:\n        GetIsolationSecurityGroup__isolationGroup = \"badValue\"\n        phantom.debug('Isolation Group: BadValue - Check global config custom list')\n        return\n    \n    GetIsolationSecurityGroup__isolationGroup = isolation_sg\n    phantom.debug(\"Leaving - Isolation Group is: {}\".format(GetIsolationSecurityGroup__isolationGroup))\n    ########################################################\n    ################################################################################\n    ## Custom Code End\n    ################################################################################\n\n    phantom.save_run_data(key='GetIsolationSecurityGroup:isolationGroup', value=json.dumps(GetIsolationSecurityGroup__isolationGroup))\n    decision_1(container=container)\n\n    return",
                        "custom_join": "",
                        "custom_name": "GetIsolationSecurityGroup",
                        "description": "",
                        "functionBlock": "custom function",
                        "has_custom": true,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "f0558896-99ae-47ad-83d8-713469effcf2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "legacy": true,
                        "line_end": 358,
                        "line_start": 323,
                        "message": "Configuring now",
                        "name": "custom function",
                        "notes": "Gets Security Group from globalconfig custom list",
                        "number": 1,
                        "order": 14,
                        "outPorts": [
                            "out"
                        ],
                        "outputVariables": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "isolationGroup"
                            }
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": ""
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 260,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "GetIsolationSecurityGroup",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "custom function",
                        "status": "deprecating",
                        "title": "custom function",
                        "type": "coa.FunctionBlock",
                        "userGeneratedCode": "\n    # Write your custom code here...\n    success, message, results = phantom.get_list(list_name=\"globalconfig\", values=\"isolation_sg\", trace=False)\n    phantom.debug('Printing success: {0}, message: {1}, results: {2}, '.format(success, message, results))\n    \n    isolation_sg = results['matches'][0]['value'][1]\n    phantom.debug(\"Isolation Group: {}\".format(isolation_sg))\n    if not isolation_sg:\n        GetIsolationSecurityGroup__isolationGroup = \"badValue\"\n        phantom.debug('Isolation Group: BadValue - Check global config custom list')\n        return\n    \n    GetIsolationSecurityGroup__isolationGroup = isolation_sg\n    phantom.debug(\"Leaving - Isolation Group is: {}\".format(GetIsolationSecurityGroup__isolationGroup))\n    ########################################################\n    ########################################################\n",
                        "warn": false,
                        "z": 238
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "81811503-cce8-4f69-8d50-fb0d74a8d5bf",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "1e6b3ad4-c2ec-45b2-be50-45b67ea8e874",
                            "port": "out-2",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(2) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "da119f79-be77-4e14-acc1-c8f67e104802",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 239
                    },
                    {
                        "action": "update task",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "container_id": "container:id",
                            "note": "POV_EC2_Instance_Isolation - In Progress",
                            "note_title": "Task Started",
                            "phase_name": "",
                            "role_id": "",
                            "status": "in progress",
                            "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                            "task_name": "",
                            "user": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update task",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "container_id": "container:id",
                                    "note": "POV_EC2_Instance_Isolation - In Progress",
                                    "note_title": "Task Started",
                                    "phase_name": "",
                                    "role_id": "",
                                    "status": "in progress",
                                    "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                                    "task_name": "",
                                    "user": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner"
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note_title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.phase_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.role_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "container_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Container ID (current container if blank)",
                                        "key": "container_id",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task note",
                                        "key": "note",
                                        "order": 6,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note_title": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Note title",
                                        "key": "note_title",
                                        "order": 7,
                                        "primary": false,
                                        "required": false
                                    },
                                    "phase_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Phase name",
                                        "key": "phase_name",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "role_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task assignee (role)",
                                        "key": "role_id",
                                        "order": 5,
                                        "primary": false,
                                        "required": false
                                    },
                                    "status": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task status",
                                        "key": "status",
                                        "order": 4,
                                        "primary": false,
                                        "required": false,
                                        "value_list": [
                                            "incomplete",
                                            "in progress",
                                            "complete"
                                        ]
                                    },
                                    "task_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task ID",
                                        "key": "task_id",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "task_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task name",
                                        "key": "task_name",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "user": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task assignee (username or user id)",
                                        "key": "user",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "TaskInProgress"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def TaskInProgress(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('TaskInProgress() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    id_value = container.get('id', None)\n\n    # collect data for 'TaskInProgress' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner'], action_results=results)\n    custom_function_results_data_2 = phantom.collect2(container=container, datapath=['cf_local_POV_get_current_task_1:custom_function_result.data.task_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'TaskInProgress' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        for custom_function_results_item_2 in custom_function_results_data_2:\n            parameters.append({\n                'note': \"POV_EC2_Instance_Isolation - In Progress\",\n                'user': custom_function_results_item_1[0],\n                'status': \"in progress\",\n                'role_id': \"\",\n                'task_id': custom_function_results_item_2[0],\n                'task_name': \"\",\n                'note_title': \"Task Started\",\n                'phase_name': \"\",\n                'container_id': id_value,\n            })\n\n    phantom.act(action=\"update task\", parameters=parameters, assets=['phantomapp'], callback=GetIsolationSecurityGroup, name=\"TaskInProgress\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "POV_get_current_task",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "TaskInProgress",
                        "delay": "0",
                        "description": "Updates the task status to in-progress",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "da119f79-be77-4e14-acc1-c8f67e104802",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 624,
                        "line_start": 592,
                        "message": "Configuring now",
                        "name": "update task",
                        "notes": "Updates the task status to in-progress",
                        "number": 3,
                        "order": 25,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 40,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "TaskInProgress",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 241
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "eec8267d-d450-4768-8354-6a2e00db9ae7",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "da119f79-be77-4e14-acc1-c8f67e104802",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "f0558896-99ae-47ad-83d8-713469effcf2",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 242
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format comment"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_comment(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_comment() called')\n    \n    template = \"\"\"Before this playbook run the instance {0} had the following security groups:\n\n{1}\n\nand after this playbook run the instance has the following security groups:\n\n{2}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"describe_instance_before:action_result.parameter.instance_ids\",\n        \"format_before:formatted_data\",\n        \"format_after:formatted_data\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_comment\")\n\n    add_note_1(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format comment",
                        "description": "Combine the before and after messages into a single comment.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "411c9e5f-cae3-45b3-b428-845ac534aed7",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 164,
                        "line_end": 185,
                        "line_start": 161,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Combine the before and after messages into a single comment.",
                        "number": 1,
                        "order": 7,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "describe_instance_before:action_result.parameter.instance_ids"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "format_before:formatted_data"
                            },
                            {
                                "position": 2,
                                "type": "",
                                "value": "format_after:formatted_data"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1400,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "format_comment",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Before this playbook run the instance {0} had the following security groups:\n\n{1}\n\nand after this playbook run the instance has the following security groups:\n\n{2}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 246
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format note"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_note(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_note() called')\n    \n    template = \"\"\"Phantom ran two playbooks investigating the EC2 instance {0} and isolating it from external networks by removing its previous security groups and assigning it to a quarantine security group. The event can be reviewed and further response can be taken using Investigation in Phantom: {1}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"describe_instance_before:action_result.parameter.instance_ids\",\n        \"container:url\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_note\")\n\n    AddNoteOnSecurityHub(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format note",
                        "description": "Format a note to add to the Finding in Security Hub.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "7558f5b4-f71b-463c-b2f0-3799841e8cd9",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 293,
                        "line_start": 276,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format a note to add to the Finding in Security Hub.",
                        "number": 4,
                        "order": 12,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "describe_instance_before:action_result.parameter.instance_ids"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "container:url"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": 500
                        },
                        "previous_function": "",
                        "previous_name": "format_note",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Phantom ran two playbooks investigating the EC2 instance {0} and isolating it from external networks by removing its previous security groups and assigning it to a quarantine security group. The event can be reviewed and further response can be taken using Investigation in Phantom: {1}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 251
                    },
                    {
                        "action": "add note",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "findings_id": "container:source_data_identifier",
                            "note": "format_note:formatted_data",
                            "overwrite": ""
                        },
                        "angle": 0,
                        "app": "AWS Security Hub",
                        "appid": "67f8edf1-61dc-4916-a017-f0b455eb866e",
                        "approver": "",
                        "assets": [
                            {
                                "action": "add note",
                                "actions": [
                                    "add note",
                                    "unarchive findings",
                                    "archive findings",
                                    "get related findings",
                                    "get findings",
                                    "on poll",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS Security Hub",
                                "app_version": "1.1.0",
                                "appid": "67f8edf1-61dc-4916-a017-f0b455eb866e",
                                "asset_name": "aws-securityhub-redux",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "findings_id": "container:source_data_identifier",
                                    "note": "format_note:formatted_data",
                                    "overwrite": ""
                                },
                                "has_app": true,
                                "id": 33,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_security_hub",
                                "output": [
                                    {
                                        "column_name": "Status",
                                        "column_order": 2,
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "column_name": "Findings ID",
                                        "column_order": 0,
                                        "contains": [
                                            "aws security hub findings id",
                                            "aws arn"
                                        ],
                                        "data_path": "action_result.parameter.findings_id",
                                        "data_type": "string",
                                        "example_values": [
                                            "arn:aws:guardduty:us-east-1:123456789012:detector/123456789abcdefghi1234ab/finding/123456789abcdefghi1234ab",
                                            "arn:aws:guardduty:us-east-1:123456789012:detector/123456789abcdefghi1234ab/finding/123456789abcdefghi1234ab"
                                        ]
                                    },
                                    {
                                        "column_name": "Note",
                                        "column_order": 1,
                                        "data_path": "action_result.parameter.note",
                                        "data_type": "string",
                                        "example_values": [
                                            "note for findings"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.overwrite",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.connection",
                                        "data_type": "string",
                                        "example_values": [
                                            "keep-alive"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "application/json"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Fri, 12 Apr 2019 11:26:08 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amz-apigw-id",
                                        "data_type": "string",
                                        "example_values": [
                                            "123456789abcdefghi1234ab="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amzn-requestid",
                                        "data_type": "string",
                                        "example_values": [
                                            "1234abcd-12ab-ab12-ab12-123456abcdef"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.x-amzn-trace-id",
                                        "data_type": "string",
                                        "example_values": [
                                            "Root=1-5cb075cf-123456789abcdefghi1234ab;Sampled=0"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "1234abcd-12ab-ab12-ab12-123456abcdef"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.add_note",
                                        "data_type": "string",
                                        "example_values": [
                                            "Success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Note added successfully to the provided findings ID"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "findings_id": {
                                        "contains": [
                                            "aws security hub findings id",
                                            "aws arn"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Identifier of security finding",
                                        "key": "findings_id",
                                        "order": 0,
                                        "primary": true,
                                        "required": true
                                    },
                                    "note": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "The text of a note",
                                        "key": "note",
                                        "order": 1,
                                        "primary": false,
                                        "required": true
                                    },
                                    "overwrite": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Check this box to overwrite the existing notes, otherwise notes will be appended to existing notes",
                                        "key": "overwrite",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    }
                                },
                                "product_name": "Security Hub",
                                "product_vendor": "AWS",
                                "targets": "33",
                                "type": "siem"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "AddNoteOnSecurityHub"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def AddNoteOnSecurityHub(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('AddNoteOnSecurityHub() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    source_data_identifier_value = container.get('source_data_identifier', None)\n\n    # collect data for 'AddNoteOnSecurityHub' call\n    formatted_data_1 = phantom.get_format_data(name='format_note')\n\n    parameters = []\n    \n    # build parameters list for 'AddNoteOnSecurityHub' call\n    parameters.append({\n        'note': formatted_data_1,\n        'overwrite': \"\",\n        'findings_id': source_data_identifier_value,\n    })\n\n    phantom.act(action=\"add note\", parameters=parameters, assets=['aws_security_hub'], name=\"AddNoteOnSecurityHub\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "AddNoteOnSecurityHub",
                        "delay": 0,
                        "description": "Add a note to the Security Hub Finding to describe the change that was made.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "54d45cb9-ae79-4710-b1cf-a416d7acf33a",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 273,
                        "line_start": 250,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "Add a note to the Security Hub Finding to describe the change that was made.",
                        "number": 1,
                        "order": 11,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1180,
                            "y": 500
                        },
                        "previous_function": "",
                        "previous_name": "AddNoteOnSecurityHub",
                        "required_params": {
                            "findings_id": true,
                            "note": true
                        },
                        "reviewer": "",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 252
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format before"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_before(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_before() called')\n    \n    template = \"\"\"%%\nSecurity Group ID: {0}\nSecurity Group Name: {1}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"describe_instance_before:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId\",\n        \"describe_instance_before:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_before\")\n\n    format_after(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format before",
                        "description": "Format a message describing the security groups before the change.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c9262df7-775a-46c5-a2c0-0c39d1932c60",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 208,
                        "line_start": 188,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format a message describing the security groups before the change.",
                        "number": 2,
                        "order": 8,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "describe_instance_before:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "describe_instance_before:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "format_before",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\nSecurity Group ID: {0}\nSecurity Group Name: {1}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 257
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "84a8e884-1435-4219-8503-9774a82f19c8",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "aadf46ab-8cfc-45bc-96d7-c09dfb8453df",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c78ea41d-1005-4dcd-97cb-3d4220f600cf",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 258
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 4
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_4() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"list_connections_1:action_result.status\", \"==\", \"failed\"],\n        ])\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        add_comment_4(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "list connections",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": false,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c78ea41d-1005-4dcd-97cb-3d4220f600cf",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 642,
                        "line_start": 624,
                        "name": "decision",
                        "notes": "",
                        "number": 4,
                        "order": 26,
                        "outPorts": [
                            "out-1"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "list_connections_1:action_result.status",
                                        "value": "failed"
                                    }
                                ],
                                "display": "If",
                                "logic": "and",
                                "type": "if"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1220,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "decision_4",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 259
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "08f072b8-1749-4ad4-83db-b384dca71e73",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "c78ea41d-1005-4dcd-97cb-3d4220f600cf",
                            "port": "out-1",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "c5e89e2b-2744-4b28-992f-d7be5f8f01e2",
                            "selector": ".port-body[type=\"input\"]"
                        },
                        "type": "link",
                        "z": 260
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add comment",
                        "attrs": {
                            ".api": {
                                "text": "add comment"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def add_comment_4(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_comment_4() called')\n\n    phantom.comment(container=container, comment=\"List Connections After Moving Security Group Failed. SG Likely does not allow Phantom Access Now.\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addCommentComment": "List Connections After Moving Security Group Failed. SG Likely does not allow Phantom Access Now.",
                                "key": "add-comment"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "list connections",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c5e89e2b-2744-4b28-992f-d7be5f8f01e2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 649,
                        "line_start": 642,
                        "message": "Configuring now",
                        "name": "add comment",
                        "notes": "",
                        "number": 4,
                        "order": 27,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1400,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "add_comment_4",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 261
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "api": "add note",
                        "attrs": {
                            ".api": {
                                "text": "add note"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "API"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def add_note_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('add_note_1() called')\n\n    formatted_data_1 = phantom.get_format_data(name='format_comment')\n\n    note_title = \"Findings\"\n    note_content = formatted_data_1\n    note_format = \"markdown\"\n    phantom.add_note(container=container, note_type=\"general\", title=note_title, content=note_content, note_format=note_format)\n    CompleteTask(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "color": "",
                        "configured": [
                            {
                                "addNoteContent": "format_comment:formatted_data",
                                "addNoteNoteFormat": "markdown",
                                "addNoteTitle": "Findings",
                                "key": "add-note"
                            }
                        ],
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "Post a comment describing the security group assignment before and after the change.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "91de218e-5cc8-4e52-a22c-c69db842a64c",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 247,
                        "line_start": 234,
                        "message": "Configuring now",
                        "name": "add note",
                        "notes": "Post a comment describing the security group assignment before and after the change.",
                        "number": 1,
                        "order": 10,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1620,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "add_note_1",
                        "show_number": false,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "api",
                        "status": "",
                        "title": "API",
                        "type": "coa.API",
                        "warn": false,
                        "z": 262
                    },
                    {
                        "attrs": {
                            ".connection": {
                                "stroke": "#818D99",
                                "stroke-width": 2
                            },
                            ".marker-target": {
                                "d": "M 10 0 L 0 5 L 10 10 z",
                                "fill": "#818D99",
                                "stroke": "#818D99"
                            }
                        },
                        "connector": {
                            "args": {
                                "radius": 5
                            },
                            "name": "rounded"
                        },
                        "endDirections": [
                            "left"
                        ],
                        "id": "e03008ed-03b1-459d-a778-89a02b11b11c",
                        "router": {
                            "name": "metro"
                        },
                        "source": {
                            "id": "af6366af-6d36-422f-8f40-c84fe6086e77",
                            "selector": "> g:nth-child(1) > g:nth-child(2) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "startDirections": [
                            "right"
                        ],
                        "target": {
                            "id": "0b46de0b-9e14-4dd6-9dc0-70d33ee4d47a",
                            "selector": "> g:nth-child(1) > g:nth-child(1) > g:nth-child(1) > circle:nth-child(1)"
                        },
                        "type": "link",
                        "z": 263
                    },
                    {
                        "action": "update task",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "container_id": "container:id",
                            "note": "Finished - If you need to rerun this playbook - revert the task status to not started and rerun",
                            "note_title": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                            "phase_name": "",
                            "role_id": "",
                            "status": "complete",
                            "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                            "task_name": "",
                            "user": ""
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update task",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "container_id": "container:id",
                                    "note": "Finished - If you need to rerun this playbook - revert the task status to not started and rerun",
                                    "note_title": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                                    "phase_name": "",
                                    "role_id": "",
                                    "status": "complete",
                                    "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                                    "task_name": "",
                                    "user": ""
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note_title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.phase_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.role_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "container_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Container ID (current container if blank)",
                                        "key": "container_id",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task note",
                                        "key": "note",
                                        "order": 6,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note_title": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Note title",
                                        "key": "note_title",
                                        "order": 7,
                                        "primary": false,
                                        "required": false
                                    },
                                    "phase_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Phase name",
                                        "key": "phase_name",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "role_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task assignee (role)",
                                        "key": "role_id",
                                        "order": 5,
                                        "primary": false,
                                        "required": false
                                    },
                                    "status": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task status",
                                        "key": "status",
                                        "order": 4,
                                        "primary": false,
                                        "required": false,
                                        "value_list": [
                                            "incomplete",
                                            "in progress",
                                            "complete"
                                        ]
                                    },
                                    "task_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task ID",
                                        "key": "task_id",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "task_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task name",
                                        "key": "task_name",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "user": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task assignee (username or user id)",
                                        "key": "user",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "CompleteTask"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def CompleteTask(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('CompleteTask() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    id_value = container.get('id', None)\n\n    # collect data for 'CompleteTask' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_POV_get_current_task_1:custom_function_result.data.task_id', 'cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'CompleteTask' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        parameters.append({\n            'note': \"Finished - If you need to rerun this playbook - revert the task status to not started and rerun\",\n            'user': \"\",\n            'status': \"complete\",\n            'role_id': \"\",\n            'task_id': custom_function_results_item_1[0],\n            'task_name': \"\",\n            'note_title': custom_function_results_item_1[1],\n            'phase_name': \"\",\n            'container_id': id_value,\n        })\n\n    phantom.act(action=\"update task\", parameters=parameters, assets=['phantomapp'], name=\"CompleteTask\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "CompleteTask",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "d7d6c513-d261-46c0-b845-25d1992583e2",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 589,
                        "line_start": 559,
                        "message": "Configuring now",
                        "name": "update task",
                        "notes": "",
                        "number": 2,
                        "order": 24,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1840,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "CompleteTask",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 264
                    },
                    {
                        "action": "describe instance",
                        "action_type": "investigate",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "dry_run": "",
                            "filters": "",
                            "instance_ids": "describe_instance_before:action_result.parameter.instance_ids",
                            "limit": ""
                        },
                        "angle": 0,
                        "app": "AWS EC2",
                        "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                        "approver": "",
                        "assets": [
                            {
                                "action": "describe instance",
                                "actions": [
                                    "list autoscaling groups",
                                    "list network interfaces",
                                    "create vpc",
                                    "remove instance",
                                    "assign instance",
                                    "list security groups",
                                    "remove acl",
                                    "add acl",
                                    "get acls",
                                    "remove tag",
                                    "add tag",
                                    "get tag",
                                    "snapshot instance",
                                    "deregister instance",
                                    "attach instance",
                                    "detach instance",
                                    "describe instance",
                                    "stop instance",
                                    "start instance",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "AWS EC2",
                                "app_version": "1.0.3",
                                "appid": "ac01bc1a-8250-4e27-978f-33c75bd6a3e8",
                                "asset_name": "matt aws ec2 us east 1",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "dry_run": "",
                                    "filters": "",
                                    "instance_ids": "describe_instance_before:action_result.parameter.instance_ids",
                                    "limit": ""
                                },
                                "has_app": true,
                                "id": 7,
                                "loaded": false,
                                "missing": false,
                                "name": "aws_ec2",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success",
                                            "failed"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.dry_run",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.filters",
                                        "data_type": "string",
                                        "example_values": [
                                            "{ \"Name\": \"vpc-id\", \"Values\": [ \"vpc-0840e9850b3f02915\"]}"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.parameter.instance_ids",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.limit",
                                        "data_type": "numeric",
                                        "example_values": [
                                            35
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 next token"
                                        ],
                                        "data_path": "action_result.data.*.NextToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "eyJ2IjoiMiIsImMiOiJxTVBvSm9GZmpOVFhrc2RYL0RDK3htaytZR0luRDhuTWR6SnN6VWNHcStSWGRwWTJ2cWtxZlBUWjY1QjJ3VzZRNlFqRkZaUzVrRDQ2V1lzTVpsY2dPSS9mVWNqVlVIbCtpaHV6b1dybnJWbXoxclp0T25YR3NvWVJRQkFuamhqaDlEN2o2dEtvcjB6bDBoeVo3clB2eGZOUlZxQUYzdWo5WnJKbTRRSmZqbHQzS0h1REhkWFI1Q1VmZnRLU2k2RkxhTkhaaUVkbXNPUlMwYnNYbkhVSHEwT0x1SmhEb2thTkc3R0tORkhaeWtIZCIsInMiOiIxIn0="
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.AmiLaunchIndex",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Architecture",
                                        "data_type": "string",
                                        "example_values": [
                                            "x86_64"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.DeviceName",
                                        "data_type": "string",
                                        "example_values": [
                                            "/dev/xvda"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.AttachTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:22"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.DeleteOnTermination",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "attached"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.BlockDeviceMappings.*.Ebs.VolumeId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vol-0d8d4d266ac6ea76f"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CapacityReservationSpecification.CapacityReservationPreference",
                                        "data_type": "string",
                                        "example_values": [
                                            "open"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ClientToken",
                                        "data_type": "string",
                                        "example_values": [
                                            "155010001974811618"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CpuOptions.CoreCount",
                                        "data_type": "numeric",
                                        "example_values": [
                                            2
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.CpuOptions.ThreadsPerCore",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.EbsOptimized",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.EnaSupport",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.HibernationOptions.Configured",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Hypervisor",
                                        "data_type": "string",
                                        "example_values": [
                                            "xen"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.IamInstanceProfile.Arn",
                                        "data_type": "string",
                                        "example_values": [
                                            "arn:aws:iam::849257271967:instance-profile/test-1"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.IamInstanceProfile.Id",
                                        "data_type": "string",
                                        "example_values": [
                                            "AIPAJBUYA2ZYFKHJ7WJJ4"
                                        ]
                                    },
                                    {
                                        "contanis": [
                                            "aws ec2 ami id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ImageId",
                                        "data_type": "string",
                                        "example_values": [
                                            "ami-061573a27231c6d25"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.InstanceId",
                                        "data_type": "string",
                                        "example_values": [
                                            "i-074f52e85356829a3"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.InstanceType",
                                        "data_type": "string",
                                        "example_values": [
                                            "t2.medium"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.KeyName",
                                        "data_type": "string",
                                        "example_values": [
                                            "test-lab-ssh-keypair"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.LaunchTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Monitoring.State",
                                        "data_type": "string",
                                        "example_values": [
                                            "disabled"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.IpOwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "amazon"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Association.PublicIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.AttachTime",
                                        "data_type": "string",
                                        "example_values": [
                                            "2019-02-13 23:20:21"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.AttachmentId",
                                        "data_type": "string",
                                        "example_values": [
                                            "eni-attach-06d2e082fd98083ca"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.DeleteOnTermination",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.DeviceIndex",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Attachment.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "attached"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Description",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-07987bf5b796b5261"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Enterprise-7-2-0-AutogenByAWSMP-4"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.MacAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "12:1d:c2:5a:82:e6"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.NetworkInterfaceId",
                                        "data_type": "string",
                                        "example_values": [
                                            "eni-09579cbf4e49f8f65"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.IpOwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "amazon"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Association.PublicIp",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.Primary",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.PrivateIpAddresses.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.SourceDestCheck",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Status",
                                        "data_type": "string",
                                        "example_values": [
                                            "in-use"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.SubnetId",
                                        "data_type": "string",
                                        "example_values": [
                                            "subnet-d8782cf7"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.AvailabilityZone",
                                        "data_type": "string",
                                        "example_values": [
                                            "us-east-1d"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Placement.Tenancy",
                                        "data_type": "string",
                                        "example_values": [
                                            "default"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.Platform",
                                        "data_type": "string",
                                        "example_values": [
                                            "windows"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PrivateDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ip-172-31-85-10.ec2.internal"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PrivateIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "172.31.85.10"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ProductCodes.*.ProductCodeId",
                                        "data_type": "string",
                                        "example_values": [
                                            "7azvchdfh74dcxoiwjhztgpel"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.ProductCodes.*.ProductCodeType",
                                        "data_type": "string",
                                        "example_values": [
                                            "marketplace"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PublicDnsName",
                                        "data_type": "string",
                                        "example_values": [
                                            "ec2-54-87-130-185.compute-1.amazonaws.com"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "ip"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.PublicIpAddress",
                                        "data_type": "string",
                                        "example_values": [
                                            "54.87.130.185"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.RootDeviceName",
                                        "data_type": "string",
                                        "example_values": [
                                            "/dev/xvda"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.RootDeviceType",
                                        "data_type": "string",
                                        "example_values": [
                                            "ebs"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupId",
                                        "data_type": "string",
                                        "example_values": [
                                            "sg-07987bf5b796b5261"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "url"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SecurityGroups.*.GroupName",
                                        "data_type": "string",
                                        "example_values": [
                                            "Splunk Enterprise-7-2-0-AutogenByAWSMP-4"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SourceDestCheck",
                                        "data_type": "boolean",
                                        "example_values": [
                                            true,
                                            false
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.State.Code",
                                        "data_type": "numeric",
                                        "example_values": [
                                            16
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.State.Name",
                                        "data_type": "string",
                                        "example_values": [
                                            "running"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateReason.Code",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateReason.Message",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.StateTransitionReason",
                                        "data_type": "string",
                                        "example_values": [
                                            ""
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.SubnetId",
                                        "data_type": "string",
                                        "example_values": [
                                            "subnet-d8782cf7"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.VirtualizationType",
                                        "data_type": "string",
                                        "example_values": [
                                            "hvm"
                                        ]
                                    },
                                    {
                                        "contains": [
                                            "aws ec2 vpc id"
                                        ],
                                        "data_path": "action_result.data.*.Reservations.*.Instances.*.VpcId",
                                        "data_type": "string",
                                        "example_values": [
                                            "vpc-5113dc2a"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.OwnerId",
                                        "data_type": "string",
                                        "example_values": [
                                            "849257271967"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.RequesterId",
                                        "data_type": "string",
                                        "example_values": [
                                            "086189789714"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.Reservations.*.ReservationId",
                                        "data_type": "string",
                                        "example_values": [
                                            "r-05ef1ae0985a72df5"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-length",
                                        "data_type": "string",
                                        "example_values": [
                                            "230"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.content-type",
                                        "data_type": "string",
                                        "example_values": [
                                            "text/xml;charset=UTF-8"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.date",
                                        "data_type": "string",
                                        "example_values": [
                                            "Wed, 27 Feb 2019 18:39:01 GMT",
                                            "Wed, 27 Feb 2019 18:40:25 GMT"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.server",
                                        "data_type": "string",
                                        "example_values": [
                                            "AmazonEC2"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.transfer-encoding",
                                        "data_type": "string",
                                        "example_values": [
                                            "chunked"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPHeaders.vary",
                                        "data_type": "string",
                                        "example_values": [
                                            "Accept-Encoding"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.HTTPStatusCode",
                                        "data_type": "numeric",
                                        "example_values": [
                                            200
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RequestId",
                                        "data_type": "string",
                                        "example_values": [
                                            "146815a0-5918-4305-8a77-540704c88939",
                                            "15f53d9a-179e-4402-8acb-be5787f6d0cf"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.data.*.ResponseMetadata.RetryAttempts",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.summary.num_instances",
                                        "data_type": "numeric",
                                        "example_values": [
                                            0,
                                            3
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.message",
                                        "data_type": "string",
                                        "example_values": [
                                            "Num instances: 0",
                                            "Num instances: 3"
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "dry_run": {
                                        "data_type": "boolean",
                                        "default": null,
                                        "description": "Check if asset has required permissions for the action",
                                        "key": "dry_run",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "filters": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more filters, separated by commas. Example: { 'Name': 'name1', 'Values': [ 'value1' ] }, { 'Name': 'name2', 'Values': [ 'value2' ] }",
                                        "key": "filters",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "instance_ids": {
                                        "contains": [
                                            "aws ec2 instance id"
                                        ],
                                        "data_type": "string",
                                        "default": null,
                                        "description": "One or more instance IDs, separated by commas",
                                        "key": "instance_ids",
                                        "order": 1,
                                        "primary": true,
                                        "required": false
                                    },
                                    "limit": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "The maximum number of results to be fetched",
                                        "key": "limit",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    }
                                },
                                "product_name": "EC2",
                                "product_vendor": "AWS",
                                "targets": "7",
                                "type": "virtualization"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "describe instance after"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Investigate"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_investigate.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def describe_instance_after(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('describe_instance_after() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    # collect data for 'describe_instance_after' call\n    results_data_1 = phantom.collect2(container=container, datapath=['describe_instance_before:action_result.parameter.instance_ids', 'describe_instance_before:action_result.parameter.context.artifact_id'], action_results=results)\n\n    parameters = []\n    \n    # build parameters list for 'describe_instance_after' call\n    for results_item_1 in results_data_1:\n        parameters.append({\n            'limit': \"\",\n            'dry_run': \"\",\n            'filters': \"\",\n            'instance_ids': results_item_1[0],\n            # context (artifact id) is added to associate results with the artifact\n            'context': {'artifact_id': results_item_1[1]},\n        })\n\n    phantom.act(action=\"describe instance\", parameters=parameters, assets=['aws_ec2'], callback=describe_instance_after_callback, name=\"describe_instance_after\", parent_action=action)\n\n    return\n",
                        "callback_code": "def describe_instance_after_callback(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None):\n    phantom.debug('describe_instance_after_callback() called')\n    \n    format_note(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    list_connections_1(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n    format_before(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return\n",
                        "callback_start": 149,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "remove existing SGs",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "describe instance after",
                        "delay": "0",
                        "description": "Gather EC2 instance metadata after changing the security groups to verify the change.",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "517a6815-ddd2-4b8f-9de8-6482993b4afc",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 158,
                        "line_start": 124,
                        "message": "Configuring now",
                        "name": "describe instance",
                        "notes": "Gather EC2 instance metadata after changing the security groups to verify the change.",
                        "number": 2,
                        "order": 6,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 260
                        },
                        "previous_function": "",
                        "previous_name": "describe_instance_after",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Investigate",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 265
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "FormatFailureNote"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def FormatFailureNote(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('FormatFailureNote() called')\n    \n    template = \"\"\"Get Security Group from globalconfig failed: \n\nError: {0}\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"GetIsolationSecurityGroup:custom_function:isolationGroup\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"FormatFailureNote\")\n\n    update_task_1(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "TaskInProgress",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "FormatFailureNote",
                        "description": "Update failure note",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "3d615793-7308-49de-9316-6ecf356701f0",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 559,
                        "line_start": 541,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Update failure note",
                        "number": 5,
                        "order": 23,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "GetIsolationSecurityGroup:custom_function:isolationGroup"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 700,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "FormatFailureNote",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "Get Security Group from globalconfig failed: \n\nError: {0}",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 267
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#637282",
                                "transform": "rotate(45 30 70)"
                            },
                            ".inPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".number": {
                                "text": 1
                            },
                            ".outPorts>.port-0": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                },
                                "ref-x": 83,
                                "ref-y": 40
                            },
                            ".outPorts>.port-0>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".outPorts>.port-1": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                },
                                "ref-x": 41,
                                "ref-y": 82
                            },
                            ".outPorts>.port-1>.port-body": {
                                "port": {
                                    "id": "out-2",
                                    "type": "out"
                                }
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def decision_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('decision_1() called')\n\n    # check for 'if' condition 1\n    matched = phantom.decision(\n        container=container,\n        action_results=results,\n        conditions=[\n            [\"GetIsolationSecurityGroup:custom_function:isolationGroup\", \"==\", \"badValue\"],\n            [\"GetIsolationSecurityGroup:custom_function:isolationGroup\", \"==\", None],\n        ],\n        logical_operator='or')\n\n    # call connected blocks if condition 1 matched\n    if matched:\n        FormatFailureNote(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n        return\n\n    # call connected blocks for 'else' condition 2\n    describe_instance_before(action=action, success=success, container=container, results=results, handle=handle, custom_function=custom_function)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "TaskInProgress",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "description": "",
                        "hasElse": true,
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "b3298be4-7994-4b0c-9d17-164e14d6d993",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 381,
                        "line_start": 358,
                        "name": "decision",
                        "notes": "",
                        "number": 1,
                        "order": 15,
                        "outPorts": [
                            "out-1",
                            "out-2"
                        ],
                        "outputs": [
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "GetIsolationSecurityGroup:custom_function:isolationGroup",
                                        "value": "badValue"
                                    },
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "GetIsolationSecurityGroup:custom_function:isolationGroup",
                                        "value": "None"
                                    }
                                ],
                                "display": "If",
                                "logic": "or",
                                "type": "if"
                            },
                            {
                                "conditions": [
                                    {
                                        "comparison": "==",
                                        "data_type": "",
                                        "param": "",
                                        "value": ""
                                    }
                                ],
                                "display": "Else",
                                "logic": "and",
                                "type": "else"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 520,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "decision_1",
                        "show_number": true,
                        "size": {
                            "height": 82,
                            "width": 82
                        },
                        "state": "decision",
                        "status": "",
                        "type": "coa.Decision",
                        "warn": "",
                        "z": 269
                    },
                    {
                        "action": "update task",
                        "action_type": "generic",
                        "active": false,
                        "active_keys": {},
                        "active_values": {
                            "container_id": "container:id",
                            "note": "FormatFailureNote:formatted_data",
                            "note_title": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                            "phase_name": "",
                            "role_id": "",
                            "status": "",
                            "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                            "task_name": "",
                            "user": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner"
                        },
                        "angle": 0,
                        "app": "Phantom",
                        "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                        "approver": "",
                        "assets": [
                            {
                                "action": "update task",
                                "actions": [
                                    "no op",
                                    "set current phase",
                                    "update task",
                                    "modify indicator tag",
                                    "get indicator",
                                    "update list",
                                    "get action result",
                                    "create container",
                                    "import container",
                                    "export container",
                                    "deflate item",
                                    "add artifact",
                                    "find listitem",
                                    "add listitem",
                                    "find artifacts",
                                    "update artifact tags",
                                    "add note",
                                    "update artifact",
                                    "update artifact fields",
                                    "tabulate data",
                                    "get user",
                                    "list playbooks",
                                    "test connectivity"
                                ],
                                "active": true,
                                "app_name": "Phantom",
                                "app_version": "2.1.29",
                                "appid": "deb82aa9-22cc-4675-9cf1-534b8d006eb7",
                                "asset_name": "phantomapp",
                                "config_type": "asset",
                                "count": 0,
                                "fields": {
                                    "container_id": "container:id",
                                    "note": "FormatFailureNote:formatted_data",
                                    "note_title": "cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name",
                                    "phase_name": "",
                                    "role_id": "",
                                    "status": "",
                                    "task_id": "cf_local_POV_get_current_task_1:custom_function_result.data.task_id",
                                    "task_name": "",
                                    "user": "cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner"
                                },
                                "has_app": true,
                                "id": 26,
                                "loaded": false,
                                "missing": false,
                                "name": "phantomapp",
                                "output": [
                                    {
                                        "data_path": "action_result.status",
                                        "data_type": "string",
                                        "example_values": [
                                            "success"
                                        ]
                                    },
                                    {
                                        "data_path": "action_result.parameter.container_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.note_title",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.phase_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.role_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.status",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_id",
                                        "data_type": "numeric"
                                    },
                                    {
                                        "data_path": "action_result.parameter.task_name",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.parameter.user",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.data",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "action_result.summary",
                                        "data_type": "string"
                                    },
                                    {
                                        "column_name": "Message",
                                        "column_order": 0,
                                        "data_path": "action_result.message",
                                        "data_type": "string"
                                    },
                                    {
                                        "data_path": "summary.total_objects",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    },
                                    {
                                        "data_path": "summary.total_objects_successful",
                                        "data_type": "numeric",
                                        "example_values": [
                                            1
                                        ]
                                    }
                                ],
                                "parameters": {
                                    "container_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Container ID (current container if blank)",
                                        "key": "container_id",
                                        "order": 0,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task note",
                                        "key": "note",
                                        "order": 6,
                                        "primary": false,
                                        "required": false
                                    },
                                    "note_title": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Note title",
                                        "key": "note_title",
                                        "order": 7,
                                        "primary": false,
                                        "required": false
                                    },
                                    "phase_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Phase name",
                                        "key": "phase_name",
                                        "order": 2,
                                        "primary": false,
                                        "required": false
                                    },
                                    "role_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task assignee (role)",
                                        "key": "role_id",
                                        "order": 5,
                                        "primary": false,
                                        "required": false
                                    },
                                    "status": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task status",
                                        "key": "status",
                                        "order": 4,
                                        "primary": false,
                                        "required": false,
                                        "value_list": [
                                            "incomplete",
                                            "in progress",
                                            "complete"
                                        ]
                                    },
                                    "task_id": {
                                        "data_type": "numeric",
                                        "default": null,
                                        "description": "Task ID",
                                        "key": "task_id",
                                        "order": 1,
                                        "primary": false,
                                        "required": false
                                    },
                                    "task_name": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task name",
                                        "key": "task_name",
                                        "order": 3,
                                        "primary": false,
                                        "required": false
                                    },
                                    "user": {
                                        "data_type": "string",
                                        "default": null,
                                        "description": "Task assignee (username or user id)",
                                        "key": "user",
                                        "order": 4,
                                        "primary": true,
                                        "required": false
                                    }
                                },
                                "product_name": "Phantom",
                                "product_vendor": "Phantom",
                                "targets": "26",
                                "type": "information"
                            }
                        ],
                        "attrs": {
                            ".action": {
                                "text": "update task 1"
                            },
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#E6984E"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "ref-x": 5,
                                "ref-y": 105,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out>.port-body": {
                                "port": {
                                    "id": "out",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "Generic"
                            },
                            "g.approver image": {
                                "opacity": 1
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 1
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.icon image": {
                                "xlink:href": "/inc/coa/img/block_icon_generic.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1
                            },
                            "g.timer image": {
                                "opacity": 1
                            }
                        },
                        "block_code": "def update_task_1(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('update_task_1() called')\n        \n    #phantom.debug('Action: {0} {1}'.format(action['name'], ('SUCCEEDED' if success else 'FAILED')))\n    \n    id_value = container.get('id', None)\n\n    # collect data for 'update_task_1' call\n    custom_function_results_data_1 = phantom.collect2(container=container, datapath=['cf_local_POV_set_event_owner_to_current_1:custom_function_result.data.currentOwner'], action_results=results)\n    custom_function_results_data_2 = phantom.collect2(container=container, datapath=['cf_local_POV_get_current_task_1:custom_function_result.data.task_id', 'cf_local_POV_get_current_task_1:custom_function_result.data.current_playbook_name'], action_results=results)\n    formatted_data_1 = phantom.get_format_data(name='FormatFailureNote')\n\n    parameters = []\n    \n    # build parameters list for 'update_task_1' call\n    for custom_function_results_item_1 in custom_function_results_data_1:\n        for custom_function_results_item_2 in custom_function_results_data_2:\n            parameters.append({\n                'note': formatted_data_1,\n                'user': custom_function_results_item_1[0],\n                'status': \"\",\n                'role_id': \"\",\n                'task_id': custom_function_results_item_2[0],\n                'task_name': \"\",\n                'note_title': custom_function_results_item_2[1],\n                'phase_name': \"\",\n                'container_id': id_value,\n            })\n\n    phantom.act(action=\"update task\", parameters=parameters, assets=['phantomapp'], callback=add_comment_2, name=\"update_task_1\")\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": true,
                        "color": "",
                        "connected_to_start": true,
                        "connection_name": "TaskInProgress",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "",
                        "delay": 0,
                        "description": "",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "a7f8d94b-6380-4a06-a445-74791c9cde12",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 538,
                        "line_start": 505,
                        "message": "Configuring now",
                        "name": "update task",
                        "notes": "",
                        "number": 1,
                        "order": 22,
                        "outPorts": [
                            "out"
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 960,
                            "y": 80
                        },
                        "previous_function": "",
                        "previous_name": "update_task_1",
                        "required_params": {},
                        "reviewer": "",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "app_action_assets",
                        "status": "warn",
                        "title": "Generic",
                        "type": "coa.Action",
                        "warn": false,
                        "z": 270
                    },
                    {
                        "active": false,
                        "angle": 0,
                        "attrs": {
                            ".background": {
                                "fill": "#000000",
                                "stroke": "#5C6773"
                            },
                            ".color-band": {
                                "fill": "#3C444D"
                            },
                            ".format": {
                                "text": "format after"
                            },
                            ".inPorts>.port-in": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".inPorts>.port-in>.port-body": {
                                "port": {
                                    "id": "in",
                                    "type": "in"
                                }
                            },
                            ".message": {
                                "opacity": 0,
                                "text": "Configuring now"
                            },
                            ".outPorts>.port-out-1": {
                                "ref": ".background",
                                "ref-x": 0.5
                            },
                            ".outPorts>.port-out-1>.port-body": {
                                "port": {
                                    "id": "out-1",
                                    "type": "out"
                                }
                            },
                            ".title": {
                                "text": "format"
                            },
                            "g.code image": {
                                "opacity": 1
                            },
                            "g.delete": {
                                "display": "none"
                            },
                            "g.error": {
                                "opacity": 0
                            },
                            "g.error image": {
                                "xlink:href": "/inc/coa/img/block_icon_warn.svg"
                            },
                            "g.notes": {
                                "display": "block"
                            },
                            "g.notes image": {
                                "opacity": 1,
                                "xlink:href": "/inc/coa/img/block_icon_note_dark_on.svg"
                            }
                        },
                        "block_code": "def format_after(action=None, success=None, container=None, results=None, handle=None, filtered_artifacts=None, filtered_results=None, custom_function=None, **kwargs):\n    phantom.debug('format_after() called')\n    \n    template = \"\"\"%%\nSecurity Group ID: {0}\nSecurity Group Name: {1}\n%%\"\"\"\n\n    # parameter list for template variable replacement\n    parameters = [\n        \"describe_instance_after:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId\",\n        \"describe_instance_after:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName\",\n    ]\n\n    phantom.format(container=container, template=template, parameters=parameters, name=\"format_after\")\n\n    format_comment(container=container)\n\n    return\n",
                        "callback_code": "",
                        "callback_start": 1,
                        "callsback": false,
                        "connected_to_start": true,
                        "connection_name": "describe instance after",
                        "connection_type": "action",
                        "custom_callback": "",
                        "custom_code": "",
                        "custom_join": "",
                        "custom_name": "format after",
                        "description": "Format a message describing the security groups after the change.",
                        "format": "format",
                        "has_custom": false,
                        "has_custom_block": false,
                        "has_custom_callback": false,
                        "has_custom_join": false,
                        "id": "c6c48959-f643-4210-bf66-5db4da9888bd",
                        "inPorts": [
                            "in"
                        ],
                        "join_code": "",
                        "join_optional": [],
                        "join_start": 1,
                        "line_end": 231,
                        "line_start": 211,
                        "message": "Configuring now",
                        "name": "format",
                        "notes": "Format a message describing the security groups after the change.",
                        "number": 3,
                        "order": 9,
                        "outPorts": [
                            "out-1"
                        ],
                        "parameters": [
                            {
                                "position": 0,
                                "type": "",
                                "value": "describe_instance_after:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupId"
                            },
                            {
                                "position": 1,
                                "type": "",
                                "value": "describe_instance_after:action_result.data.*.Reservations.*.Instances.*.NetworkInterfaces.*.Groups.*.GroupName"
                            }
                        ],
                        "ports": {
                            "groups": {
                                "in": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "left"
                                        }
                                    },
                                    "position": {
                                        "name": "left"
                                    }
                                },
                                "out": {
                                    "attrs": {
                                        ".port-body": {
                                            "fill": "#fff",
                                            "magnet": true,
                                            "r": 10,
                                            "stroke": "#000"
                                        },
                                        ".port-label": {
                                            "fill": "#000"
                                        }
                                    },
                                    "label": {
                                        "position": {
                                            "args": {
                                                "y": 10
                                            },
                                            "name": "right"
                                        }
                                    },
                                    "position": {
                                        "name": "right"
                                    }
                                }
                            }
                        },
                        "position": {
                            "x": 1180,
                            "y": 380
                        },
                        "previous_function": "",
                        "previous_name": "format_after",
                        "show_number": true,
                        "size": {
                            "height": 100,
                            "width": 180
                        },
                        "state": "format",
                        "status": "",
                        "template": "%%\nSecurity Group ID: {0}\nSecurity Group Name: {1}\n%%",
                        "title": "format",
                        "type": "coa.Format",
                        "warn": false,
                        "z": 271
                    }
                ]
            },
            "notes": "This playbook uses the following Apps:\n - AWS Security Hub (on poll, add note) [asset name = aws_security_hub] - ingest the Finding which initiates this playbook and enrich it with a note at the end\n - AWS EC2 (describe instance, assign instance, remove instance) [asset name = aws_ec2] - gather information about the EC2 instance and change its security group\n - SSH (list connections) [asset name = ssh] - connect to the EC2 instance and check the current network traffic\n\nDeployment Notes:\n - The SSH actions will only work if the EC2 instance is using any of the commonly used linux distributions.\n - This playbook was written to use an AWS Security Hub Finding which contains an EC2 Resource Artifact, but other types of events can be used with minor modifications to the initial filter block and the instance_id parameter in the EC2 actions.\n - The security group that is assigned to the EC2 instance must already exist, and its ID should be used in \"add isolation SG\" to replace the existing hard-coded value. If the Phantom instance still needs access to the instance after the change, the isolation security group should at least allow traffic from the Phantom instance's security group or IP address. If this is not the case, the \"list connections\" action will fail."
        },
        "python_version": "3",
        "schema": 4,
        "version": "4.10.3.51237"
    },
    "create_time": "2021-07-27T11:32:13.755760+00:00",
    "draft_mode": false,
    "labels": [
        "events"
    ],
    "tags": []
}